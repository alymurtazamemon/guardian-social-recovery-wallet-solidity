{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Error__AddressAlreadyAnOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Error__AddressNotFoundAsGuardian",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "Error__AlreadyConfirmedByGuardian",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Error__BalanceIsZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyAddAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyChangeAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyRemoveAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Error__DailyTransferLimitExceed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__GuardianDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__GuardiansListIsEmpty",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Error__InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "Error__InvalidLimit",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__RequestTimeExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "confirmations",
          "type": "uint256"
        }
      ],
      "name": "Error__RequiredConfirmationsNotMet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__TransactionFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__UpdateNotRequested",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__UpdateNotRequestedByOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "addGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "changeGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmAndUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmDailyTransferLimitRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmUpdateOwnerRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalanceInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChangeGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimitInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimitUpdateConfirmationTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimitUpdateRequestStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "getGuardianConfirmationStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGuardians",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIsOwnerUpdateRequested",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "getIsOwnershipConfimedByGuardian",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastDailyTransferUpdateRequestTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianAddTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianChangeTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianRemovalTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastOwnerUpdateRequestTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNoOfConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwnerUpdateConfirmationTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRemoveGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRequiredConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "removeGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "requestToUpdateDailyTransferLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwnerAddress",
          "type": "address"
        }
      ],
      "name": "requestToUpdateOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sendAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "updateETHUSDPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9fa511e33e5c40283cb1fcb090bf37d6dc67707f989b2fbefd129eaf08262dfd",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "2903300",
    "logsBloom": "0x
    "blockHash": "0xfadde42d7cb9404f6afe071ebd59211e1d4f97dda99b245987d61f6901ad9320",
    "transactionHash": "0x9fa511e33e5c40283cb1fcb090bf37d6dc67707f989b2fbefd129eaf08262dfd",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0x9fa511e33e5c40283cb1fcb090bf37d6dc67707f989b2fbefd129eaf08262dfd",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xfadde42d7cb9404f6afe071ebd59211e1d4f97dda99b245987d61f6901ad9320"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "2903300",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "83fd1a0a27e6dccac53d849ef000b3f4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Error__AddressAlreadyAnOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Error__AddressNotFoundAsGuardian\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"Error__AlreadyConfirmedByGuardian\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Error__BalanceIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyAddAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyChangeAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyRemoveAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Error__DailyTransferLimitExceed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__GuardianDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__GuardiansListIsEmpty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Error__InvalidAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"Error__InvalidLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__RequestTimeExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"confirmations\",\"type\":\"uint256\"}],\"name\":\"Error__RequiredConfirmationsNotMet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__TransactionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__UpdateNotRequested\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__UpdateNotRequestedByOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"addGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"changeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmAndUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmDailyTransferLimitRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmUpdateOwnerRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChangeGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimitInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimitUpdateConfirmationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimitUpdateRequestStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"getGuardianConfirmationStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGuardians\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIsOwnerUpdateRequested\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"getIsOwnershipConfimedByGuardian\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastDailyTransferUpdateRequestTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianAddTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianChangeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianRemovalTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastOwnerUpdateRequestTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNoOfConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerUpdateConfirmationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemoveGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequiredConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"removeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"requestToUpdateDailyTransferLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwnerAddress\",\"type\":\"address\"}],\"name\":\"requestToUpdateOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sendAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"updateETHUSDPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Guardian.sol\":\"Guardian\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nerror Error__AddressAlreadyAnOwner(string location, address addr);\\nerror Error__GuardiansListIsEmpty(string location);\\nerror Error__AddressNotFoundAsGuardian(string location, address addr);\\nerror Error__UpdateNotRequested(string location);\\nerror Error__AlreadyConfirmedByGuardian(string location, address guardian);\\nerror Error__RequestTimeExpired(string location);\\nerror Error__InvalidAmount(string location, uint amount);\\nerror Error__DailyTransferLimitExceed(string location, uint amount);\\nerror Error__TransactionFailed(string location);\\nerror Error__BalanceIsZero(string location, uint balance);\\nerror Error__InvalidLimit(string location, uint256 limit);\\nerror Error__UpdateNotRequestedByOwner(string location);\\nerror Error__RequiredConfirmationsNotMet(\\n    string location,\\n    uint256 confirmations\\n);\\nerror Error__InvalidGuardiansList(string location, address[] addressesList);\\nerror Error__CanOnlyChangeAfterDelayPeriod(string location);\\nerror Error__GuardianDoesNotExist(string location);\\nerror Error__CanOnlyRemoveAfterDelayPeriod(string location);\\nerror Error__CanOnlyAddAfterDelayPeriod(string location);\\n\",\"keccak256\":\"0x9e7e43a4f27803f4f23f66e6fdbe62120abfaf774ff9d1f9095b0bd10af8f6a5\",\"license\":\"MIT\"},\"contracts/FundsManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./GuardiansManager.sol\\\";\\nimport \\\"./Errors.sol\\\";\\n\\ncontract FundsManager is GuardiansManager {\\n    // * STATE VARIABLES\\n    uint256 private dailyTransferLimit;\\n    uint256 private tempDailyTransferLimit;\\n    uint256 private lastDailyTransferUpdateRequestTime;\\n    uint256 private dailyTransferLimitUpdateConfirmationTime;\\n\\n    bool private isDailyTransferLimitUpdateRequested;\\n\\n    mapping(address => bool) private isConfirmedByGuardian;\\n\\n    AggregatorV3Interface private priceFeed;\\n\\n    // * FUNCTIONS\\n    constructor(address _priceFeed) {\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n        dailyTransferLimit = 1 ether;\\n        dailyTransferLimitUpdateConfirmationTime = 1 days;\\n    }\\n\\n    // * FUNCTIONS - EXTERNAL\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n\\n    function send(address to, uint amount) external onlyOwner nonReentrant {\\n        if (amount <= 0) {\\n            revert Error__InvalidAmount(\\\"FundsManager\\\", amount);\\n        }\\n\\n        if (amount > dailyTransferLimit) {\\n            revert Error__DailyTransferLimitExceed(\\\"FundsManager\\\", amount);\\n        }\\n\\n        (bool success, ) = to.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Error__TransactionFailed(\\\"FundsManager\\\");\\n        }\\n    }\\n\\n    function sendAll(address to) external onlyOwner nonReentrant {\\n        uint256 balance = address(this).balance;\\n\\n        if (balance <= 0) {\\n            revert Error__BalanceIsZero(\\\"FundsManager\\\", balance);\\n        }\\n\\n        if (balance > dailyTransferLimit) {\\n            revert Error__DailyTransferLimitExceed(\\\"FundsManager\\\", balance);\\n        }\\n\\n        (bool success, ) = to.call{value: balance}(\\\"\\\");\\n        if (!success) {\\n            revert Error__TransactionFailed(\\\"FundsManager\\\");\\n        }\\n    }\\n\\n    function requestToUpdateDailyTransferLimit(\\n        uint256 limit\\n    ) external onlyOwner {\\n        if (limit <= 0) {\\n            revert Error__InvalidLimit(\\\"FundsManager\\\", limit);\\n        }\\n\\n        lastDailyTransferUpdateRequestTime = block.timestamp;\\n        tempDailyTransferLimit = limit;\\n        isDailyTransferLimitUpdateRequested = true;\\n    }\\n\\n    function confirmDailyTransferLimitRequest() external {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"FundsManager\\\");\\n        }\\n\\n        if (!isDailyTransferLimitUpdateRequested) {\\n            revert Error__UpdateNotRequestedByOwner(\\\"FundsManager\\\");\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastDailyTransferUpdateRequestTime +\\n                dailyTransferLimitUpdateConfirmationTime\\n        ) {\\n            resetDailyTransferLimitVariables();\\n            revert Error__RequestTimeExpired(\\\"FundsManager\\\");\\n        }\\n\\n        if (isConfirmedByGuardian[msg.sender]) {\\n            revert Error__AlreadyConfirmedByGuardian(\\n                \\\"FundsManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\\"FundsManager\\\", msg.sender);\\n        }\\n\\n        isConfirmedByGuardian[msg.sender] = true;\\n    }\\n\\n    function confirmAndUpdate() external onlyOwner {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"FundsManager\\\");\\n        }\\n\\n        if (!isDailyTransferLimitUpdateRequested) {\\n            revert Error__UpdateNotRequestedByOwner(\\\"FundsManager\\\");\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastDailyTransferUpdateRequestTime +\\n                dailyTransferLimitUpdateConfirmationTime\\n        ) {\\n            resetDailyTransferLimitVariables();\\n            revert Error__RequestTimeExpired(\\\"FundsManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n        uint256 counter = 0;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isConfirmedByGuardian[guardiansCopy[i]]) {\\n                counter++;\\n            }\\n        }\\n\\n        if (counter < requiredConfirmations) {\\n            revert Error__RequiredConfirmationsNotMet(\\n                \\\"FundsManager\\\",\\n                requiredConfirmations\\n            );\\n        }\\n\\n        dailyTransferLimit = tempDailyTransferLimit;\\n\\n        resetDailyTransferLimitVariables();\\n    }\\n\\n    function updateETHUSDPriceFeed(address _priceFeed) external onlyOwner {\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n    }\\n\\n    // * FUNCTIONS - PRIVATE\\n\\n    function resetDailyTransferLimitVariables() private {\\n        isDailyTransferLimitUpdateRequested = false;\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isConfirmedByGuardian[guardiansCopy[i]]) {\\n                isConfirmedByGuardian[guardiansCopy[i]] = false;\\n            }\\n        }\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - EXTERNAL\\n\\n    function getBalance() external view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function getBalanceInUSD() external view returns (uint256) {\\n        uint256 ethPrice = getPrice();\\n        uint256 balanceInUSD = (ethPrice * address(this).balance) /\\n            1000000000000000000;\\n        return balanceInUSD;\\n    }\\n\\n    function getDailyTransferLimit() external view returns (uint256) {\\n        return dailyTransferLimit;\\n    }\\n\\n    function getDailyTransferLimitInUSD() external view returns (uint256) {\\n        uint256 ethPrice = getPrice();\\n        uint256 dailyTransferLimitInUSD = (ethPrice * dailyTransferLimit) /\\n            1000000000000000000;\\n        return dailyTransferLimitInUSD;\\n    }\\n\\n    function getRequiredConfirmations() external view returns (uint256) {\\n        return requiredConfirmations;\\n    }\\n\\n    function getDailyTransferLimitUpdateRequestStatus()\\n        external\\n        view\\n        returns (bool)\\n    {\\n        return isDailyTransferLimitUpdateRequested;\\n    }\\n\\n    function getDailyTransferLimitUpdateConfirmationTime()\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return dailyTransferLimitUpdateConfirmationTime;\\n    }\\n\\n    function getLastDailyTransferUpdateRequestTime()\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return lastDailyTransferUpdateRequestTime;\\n    }\\n\\n    function getGuardianConfirmationStatus(\\n        address guardian\\n    ) external view returns (bool) {\\n        return isConfirmedByGuardian[guardian];\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - PRIVATE\\n\\n    function getPrice() private view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n}\\n\",\"keccak256\":\"0xf60ca8580a79c20c8fcbed095319be041e9aa872c77ebeead4cf0afedd62da4f\",\"license\":\"MIT\"},\"contracts/Guardian.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"./FundsManager.sol\\\";\\nimport \\\"./OwnershipManager.sol\\\";\\n\\ncontract Guardian is FundsManager, OwnershipManager {\\n    constructor(address priceFeed) FundsManager(priceFeed) {}\\n}\\n\",\"keccak256\":\"0x2bd1fb648be989241428c7de5e79d13252100f1a219a55624c3142724be6fb90\",\"license\":\"MIT\"},\"contracts/GuardiansManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./Errors.sol\\\";\\n\\ncontract GuardiansManager is Ownable, ReentrancyGuard {\\n    // * STATE VARIABLES\\n    uint256 private addGuardianDelay;\\n    uint256 private lastGuardianAddTime;\\n    uint256 private changeGuardianDelay;\\n    uint256 private lastGuardianChangeTime;\\n    uint256 private removeGuardianDelay;\\n    uint256 private lastGuardianRemovalTime;\\n\\n    uint256 internal requiredConfirmations;\\n\\n    address[] internal guardians;\\n\\n    // * FUNCTIONS\\n    constructor() {\\n        lastGuardianAddTime = block.timestamp;\\n        addGuardianDelay = 1 days;\\n        lastGuardianChangeTime = block.timestamp;\\n        changeGuardianDelay = 1 days;\\n        lastGuardianRemovalTime = block.timestamp;\\n        removeGuardianDelay = 3 days;\\n    }\\n\\n    // * FUNCTIONS - EXTERNAL\\n    function addGuardian(address guardian) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianAddTime + addGuardianDelay) {\\n            revert Error__CanOnlyAddAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        guardians.push(guardian);\\n        lastGuardianAddTime = block.timestamp;\\n        updateRequiredConfirmations();\\n    }\\n\\n    function changeGuardian(\\n        address from,\\n        address to\\n    ) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianChangeTime + changeGuardianDelay) {\\n            revert Error__CanOnlyChangeAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        // * using this variable so we should not update the state variable if address does not exits.\\n        bool exist = false;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (guardiansCopy[i] == from) {\\n                exist = true;\\n                guardiansCopy[i] = to;\\n                break;\\n            }\\n        }\\n\\n        if (exist) {\\n            guardians = guardiansCopy;\\n            lastGuardianChangeTime = block.timestamp;\\n        } else {\\n            revert Error__GuardianDoesNotExist(\\\"GuardiansManager\\\");\\n        }\\n    }\\n\\n    function removeGuardian(address guardian) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianRemovalTime + removeGuardianDelay) {\\n            revert Error__CanOnlyRemoveAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"GuardiansManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        // * for local arrays we need to declare the size at the initialization time.\\n        // * we are removing the 1 guardian so the updated array will be less than 1 the length of existing array.\\n        address[] memory updatedCopy = new address[](guardiansCopy.length - 1);\\n        uint256 index = 0;\\n\\n        // * using this variable so we should not update the state variable if address does not exits.\\n        bool exist = false;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (guardiansCopy[i] == guardian) {\\n                exist = true;\\n                continue;\\n            } else if (i != updatedCopy.length) {\\n                updatedCopy[index] = guardiansCopy[i];\\n                index++;\\n            }\\n        }\\n\\n        if (exist) {\\n            guardians = updatedCopy;\\n            lastGuardianRemovalTime = block.timestamp;\\n        } else {\\n            revert Error__GuardianDoesNotExist(\\\"GuardiansManager\\\");\\n        }\\n    }\\n\\n    // * FUNCTION - PRIVATE\\n\\n    function updateRequiredConfirmations() private {\\n        requiredConfirmations = (guardians.length / 2) + 1;\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - EXTERNAL\\n\\n    function getLastGuardianAddTime() external view returns (uint256) {\\n        return lastGuardianAddTime;\\n    }\\n\\n    function getAddGuardianDelay() external view returns (uint256) {\\n        return addGuardianDelay;\\n    }\\n\\n    function getLastGuardianChangeTime() external view returns (uint256) {\\n        return lastGuardianChangeTime;\\n    }\\n\\n    function getChangeGuardianDelay() external view returns (uint256) {\\n        return changeGuardianDelay;\\n    }\\n\\n    function getLastGuardianRemovalTime() external view returns (uint256) {\\n        return lastGuardianRemovalTime;\\n    }\\n\\n    function getRemoveGuardianDelay() external view returns (uint256) {\\n        return removeGuardianDelay;\\n    }\\n\\n    function getGuardians() external view returns (address[] memory) {\\n        return guardians;\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - INTERNAL\\n\\n    function doesGuardianExist(address caller) internal view returns (bool) {\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (caller == guardiansCopy[i]) {\\n                return true;\\n            }\\n        }\\n\\n        return false;\\n    }\\n}\\n\",\"keccak256\":\"0xb0a544360367aa821cff0249b5cbdf6dd164365569223ce097f7d7a22ab4fc81\",\"license\":\"MIT\"},\"contracts/OwnershipManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport \\\"./GuardiansManager.sol\\\";\\nimport \\\"./Errors.sol\\\";\\n\\npragma solidity ^0.8.17;\\n\\ncontract OwnershipManager is GuardiansManager {\\n    // * STATE VARIABLES\\n    uint256 private lastOwnerUpdateRequestTime;\\n    uint256 private ownerUpdateConfirmationTime;\\n    uint256 private noOfConfirmations;\\n\\n    bool private isOwnerUpdateRequested;\\n\\n    address private tempAddress;\\n\\n    mapping(address => bool) private isOwnershipConfimedByGuardian;\\n\\n    // * FUNCTIONS\\n    constructor() {\\n        ownerUpdateConfirmationTime = 2 hours;\\n    }\\n\\n    function requestToUpdateOwner(address newOwnerAddress) external {\\n        if (newOwnerAddress == owner()) {\\n            revert Error__AddressAlreadyAnOwner(\\n                \\\"OwnershipManager\\\",\\n                newOwnerAddress\\n            );\\n        }\\n\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        lastOwnerUpdateRequestTime = block.timestamp;\\n        tempAddress = newOwnerAddress;\\n        isOwnershipConfimedByGuardian[msg.sender] = true;\\n        noOfConfirmations++;\\n        isOwnerUpdateRequested = true;\\n    }\\n\\n    function confirmUpdateOwnerRequest() external {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!isOwnerUpdateRequested) {\\n            revert Error__UpdateNotRequested(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (isOwnershipConfimedByGuardian[msg.sender]) {\\n            revert Error__AlreadyConfirmedByGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastOwnerUpdateRequestTime + ownerUpdateConfirmationTime\\n        ) {\\n            resetOwnershipVariables();\\n            revert Error__RequestTimeExpired(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        isOwnershipConfimedByGuardian[msg.sender] = true;\\n        noOfConfirmations++;\\n\\n        if (noOfConfirmations >= requiredConfirmations) {\\n            // * Ownable internal function without access restriction.\\n            _transferOwnership(tempAddress);\\n            resetOwnershipVariables();\\n        }\\n    }\\n\\n    // * FUNCTION - PRIVATE\\n    function resetOwnershipVariables() private {\\n        isOwnerUpdateRequested = false;\\n        noOfConfirmations = 0;\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isOwnershipConfimedByGuardian[guardiansCopy[i]]) {\\n                isOwnershipConfimedByGuardian[guardiansCopy[i]] = false;\\n            }\\n        }\\n    }\\n\\n    // * FUNCTION - VIEW & PURE\\n    function getIsOwnerUpdateRequested() external view returns (bool) {\\n        return isOwnerUpdateRequested;\\n    }\\n\\n    function getIsOwnershipConfimedByGuardian(\\n        address guardian\\n    ) external view returns (bool) {\\n        return isOwnershipConfimedByGuardian[guardian];\\n    }\\n\\n    function getLastOwnerUpdateRequestTime() external view returns (uint256) {\\n        return lastOwnerUpdateRequestTime;\\n    }\\n\\n    function getOwnerUpdateConfirmationTime() external view returns (uint256) {\\n        return ownerUpdateConfirmationTime;\\n    }\\n\\n    function getNoOfConfirmations() external view returns (uint256) {\\n        return noOfConfirmations;\\n    }\\n}\\n\",\"keccak256\":\"0x2bbfb872f9cd3c9be6056af97f6ad528630162cade95289ab63c88d937323b95\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200314338038062003143833981810160405281019062000037919062000233565b80620000586200004c620000fd60201b60201c565b6200010560201b60201c565b6001808190555042600381905550620151806002819055504260058190555062015180600481905550426007819055506203f48060068190555080601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a7640000600a8190555062015180600d8190555050611c206012819055505062000265565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fb82620001ce565b9050919050565b6200020d81620001ee565b81146200021957600080fd5b50565b6000815190506200022d8162000202565b92915050565b6000602082840312156200024c576200024b620001c9565b5b60006200025c848285016200021c565b91505092915050565b612ece80620002756000396000f3fe6080604052600436106102085760003560e01c80638636068c11610118578063d0679d34116100a0578063e9316a211161006f578063e9316a21146106f3578063ecfba8f51461071e578063ef64924914610749578063f2fde38b14610774578063fb5497881461079d5761020f565b8063d0679d341461063b578063d237736114610664578063d660c45d1461068d578063daf3ce6a146106b65761020f565b8063a526d83b116100e7578063a526d83b14610554578063a85ae3771461057d578063af630ad3146105a8578063b9e1c798146105d3578063bbe4424a146106105761020f565b80638636068c146104bc5780638da5cb5b146104d35780638fc270b7146104fe5780639204f477146105295761020f565b80632ad2ed901161019b578063715018a61161016a578063715018a6146103fd5780637388fe861461041457806379f9c22f1461043f5780637d09f5dd1461046857806383b40cc9146104935761020f565b80632ad2ed90146103535780632b28d0cc1461037e578063673d4ec8146103a957806371404156146103d45761020f565b806314cbc763116101d757806314cbc763146102bb57806315c1bc3e146102e657806324cb76041461031157806326c886df1461033c5761020f565b80630665f04b1461021157806306c4df831461023c57806310a0cf171461026757806312065fe0146102905761020f565b3661020f57005b005b34801561021d57600080fd5b506102266107b4565b60405161023391906125bd565b60405180910390f35b34801561024857600080fd5b50610251610842565b60405161025e91906125f8565b60405180910390f35b34801561027357600080fd5b5061028e60048036038101906102899190612644565b61084c565b005b34801561029c57600080fd5b506102a5610a2b565b6040516102b291906125f8565b60405180910390f35b3480156102c757600080fd5b506102d0610a33565b6040516102dd91906125f8565b60405180910390f35b3480156102f257600080fd5b506102fb610a3d565b60405161030891906125f8565b60405180910390f35b34801561031d57600080fd5b50610326610a47565b60405161033391906125f8565b60405180910390f35b34801561034857600080fd5b50610351610a51565b005b34801561035f57600080fd5b50610368610c75565b60405161037591906125f8565b60405180910390f35b34801561038a57600080fd5b50610393610c7f565b6040516103a091906125f8565b60405180910390f35b3480156103b557600080fd5b506103be610c89565b6040516103cb919061268c565b60405180910390f35b3480156103e057600080fd5b506103fb60048036038101906103f69190612644565b610ca0565b005b34801561040957600080fd5b50610412610f9b565b005b34801561042057600080fd5b50610429610faf565b60405161043691906125f8565b60405180910390f35b34801561044b57600080fd5b5061046660048036038101906104619190612644565b610fb9565b005b34801561047457600080fd5b5061047d611005565b60405161048a91906125f8565b60405180910390f35b34801561049f57600080fd5b506104ba60048036038101906104b591906126a7565b61100f565b005b3480156104c857600080fd5b506104d1611233565b005b3480156104df57600080fd5b506104e86114ae565b6040516104f591906126f6565b60405180910390f35b34801561050a57600080fd5b506105136114d7565b604051610520919061268c565b60405180910390f35b34801561053557600080fd5b5061053e6114ee565b60405161054b91906125f8565b60405180910390f35b34801561056057600080fd5b5061057b60048036038101906105769190612644565b611528565b005b34801561058957600080fd5b50610592611607565b60405161059f91906125f8565b60405180910390f35b3480156105b457600080fd5b506105bd611611565b6040516105ca91906125f8565b60405180910390f35b3480156105df57600080fd5b506105fa60048036038101906105f59190612644565b61161b565b604051610607919061268c565b60405180910390f35b34801561061c57600080fd5b50610625611671565b60405161063291906125f8565b60405180910390f35b34801561064757600080fd5b50610662600480360381019061065d919061273d565b61167b565b005b34801561067057600080fd5b5061068b6004803603810190610686919061277d565b6117d0565b005b34801561069957600080fd5b506106b460048036038101906106af9190612644565b611849565b005b3480156106c257600080fd5b506106dd60048036038101906106d89190612644565b6119a3565b6040516106ea919061268c565b60405180910390f35b3480156106ff57600080fd5b506107086119f9565b60405161071591906125f8565b60405180910390f35b34801561072a57600080fd5b50610733611a03565b60405161074091906125f8565b60405180910390f35b34801561075557600080fd5b5061075e611a0d565b60405161076b91906125f8565b60405180910390f35b34801561078057600080fd5b5061079b60048036038101906107969190612644565b611a45565b005b3480156107a957600080fd5b506107b2611ac8565b005b6060600980548060200260200160405190810160405280929190818152602001828054801561083857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107ee575b5050505050905090565b6000601154905090565b6108546114ae565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108c357806040517fa4f2199f0000000000000000000000000000000000000000000000000000000081526004016108ba9190612807565b60405180910390fd5b60006009805490501161090b576040517fe9e10a6400000000000000000000000000000000000000000000000000000000815260040161090290612835565b60405180910390fd5b61091433611d46565b61095557336040517f8e8bbab900000000000000000000000000000000000000000000000000000000815260040161094c9190612807565b60405180910390fd5b4260118190555080601460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060136000815480929190610a0890612884565b91905055506001601460006101000a81548160ff02191690831515021790555050565b600047905090565b6000600654905090565b6000600a54905090565b6000600854905090565b600060098054905011610a99576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610a9090612918565b60405180910390fd5b600e60009054906101000a900460ff16610ae8576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401610adf90612918565b60405180910390fd5b600d54600c54610af89190612938565b421115610b4257610b07611e55565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401610b3990612918565b60405180910390fd5b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610bd157336040517f40b28742000000000000000000000000000000000000000000000000000000008152600401610bc8919061296c565b60405180910390fd5b610bda33611d46565b610c1b57336040517f8e8bbab9000000000000000000000000000000000000000000000000000000008152600401610c12919061296c565b60405180910390fd5b6001600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b6000600754905090565b6000601254905090565b6000601460009054906101000a900460ff16905090565b610ca8611ffd565b610cb061207b565b600654600754610cc09190612938565b421015610d02576040517f2ab71fd6000000000000000000000000000000000000000000000000000000008152600401610cf9906129e6565b60405180910390fd5b600060098054905011610d4a576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610d41906129e6565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015610dce57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d84575b50505050509050600060018251610de59190612a06565b67ffffffffffffffff811115610dfe57610dfd612a3a565b5b604051908082528060200260200182016040528015610e2c5781602001602082028036833780820191505090505b50905060008060005b8451811015610f27578573ffffffffffffffffffffffffffffffffffffffff16858281518110610e6857610e67612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610e945760019150610f14565b83518114610f1357848181518110610eaf57610eae612a69565b5b6020026020010151848481518110610eca57610ec9612a69565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610f0f90612884565b9350505b5b8080610f1f90612884565b915050610e35565b508015610f51578260099080519060200190610f44929190612426565b5042600781905550610f8c565b6040517f47637222000000000000000000000000000000000000000000000000000000008152600401610f83906129e6565b60405180910390fd5b50505050610f986120ca565b50565b610fa3611ffd565b610fad60006120d3565b565b6000600354905090565b610fc1611ffd565b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600c54905090565b611017611ffd565b61101f61207b565b60045460055461102f9190612938565b421015611071576040517f0e7f7d15000000000000000000000000000000000000000000000000000000008152600401611068906129e6565b60405180910390fd5b600060098054806020026020016040519081016040528092919081815260200182805480156110f557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116110ab575b505050505090506000805b82518110156111c0578473ffffffffffffffffffffffffffffffffffffffff1683828151811061113357611132612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036111ad57600191508383828151811061116e5761116d612a69565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506111c0565b80806111b890612884565b915050611100565b5080156111ea5781600990805190602001906111dd929190612426565b5042600581905550611225565b6040517f4763722200000000000000000000000000000000000000000000000000000000815260040161121c906129e6565b60405180910390fd5b505061122f6120ca565b5050565b60006009805490501161127b576040517fe9e10a6400000000000000000000000000000000000000000000000000000000815260040161127290612835565b60405180910390fd5b601460009054906101000a900460ff166112ca576040517f7bd1f7a20000000000000000000000000000000000000000000000000000000081526004016112c190612835565b60405180910390fd5b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561135957336040517f40b287420000000000000000000000000000000000000000000000000000000081526004016113509190612807565b60405180910390fd5b6012546011546113699190612938565b4211156113b357611378612197565b6040517f5130ce4e0000000000000000000000000000000000000000000000000000000081526004016113aa90612835565b60405180910390fd5b6113bc33611d46565b6113fd57336040517f8e8bbab90000000000000000000000000000000000000000000000000000000081526004016113f49190612807565b60405180910390fd5b6001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506013600081548092919061146890612884565b9190505550600854601354106114ac576114a3601460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff166120d3565b6114ab612197565b5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600e60009054906101000a900460ff16905090565b6000806114f9612347565b90506000670de0b6b3a7640000600a54836115149190612a98565b61151e9190612b09565b9050809250505090565b611530611ffd565b61153861207b565b6002546003546115489190612938565b42101561158a576040517fdd49edf8000000000000000000000000000000000000000000000000000000008152600401611581906129e6565b60405180910390fd5b6009819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003819055506115fc6123f8565b6116046120ca565b50565b6000600254905090565b6000600d54905090565b6000601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000601354905090565b611683611ffd565b61168b61207b565b600081116116d057806040517fc816f5c80000000000000000000000000000000000000000000000000000000081526004016116c79190612b3a565b60405180910390fd5b600a5481111561171757806040517fd8dde22d00000000000000000000000000000000000000000000000000000000815260040161170e9190612b3a565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161173d90612b99565b60006040518083038185875af1925050503d806000811461177a576040519150601f19603f3d011682016040523d82523d6000602084013e61177f565b606091505b50509050806117c3576040517f5b0ecddc0000000000000000000000000000000000000000000000000000000081526004016117ba90612918565b60405180910390fd5b506117cc6120ca565b5050565b6117d8611ffd565b6000811161181d57806040517f60fe2e4f0000000000000000000000000000000000000000000000000000000081526004016118149190612b3a565b60405180910390fd5b42600c8190555080600b819055506001600e60006101000a81548160ff02191690831515021790555050565b611851611ffd565b61185961207b565b6000479050600081116118a357806040517f25ba08f500000000000000000000000000000000000000000000000000000000815260040161189a9190612b3a565b60405180910390fd5b600a548111156118ea57806040517fd8dde22d0000000000000000000000000000000000000000000000000000000081526004016118e19190612b3a565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161191090612b99565b60006040518083038185875af1925050503d806000811461194d576040519150601f19603f3d011682016040523d82523d6000602084013e611952565b606091505b5050905080611996576040517f5b0ecddc00000000000000000000000000000000000000000000000000000000815260040161198d90612918565b60405180910390fd5b50506119a06120ca565b50565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600554905090565b6000600454905090565b600080611a18612347565b90506000670de0b6b3a76400004783611a319190612a98565b611a3b9190612b09565b9050809250505090565b611a4d611ffd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611abc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab390612c20565b60405180910390fd5b611ac5816120d3565b50565b611ad0611ffd565b600060098054905011611b18576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401611b0f90612918565b60405180910390fd5b600e60009054906101000a900460ff16611b67576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401611b5e90612918565b60405180910390fd5b600d54600c54611b779190612938565b421115611bc157611b86611e55565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401611bb890612918565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015611c4557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611bfb575b505050505090506000805b8251811015611ce757600f6000848381518110611c7057611c6f612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611cd4578180611cd090612884565b9250505b8080611cdf90612884565b915050611c50565b50600854811015611d31576008546040517f9dd75b3a000000000000000000000000000000000000000000000000000000008152600401611d289190612b3a565b60405180910390fd5b600b54600a81905550611d42611e55565b5050565b6000806009805480602002602001604051908101604052809291908181526020018280548015611dcb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d81575b5050505050905060005b8151811015611e4957818181518110611df157611df0612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611e3657600192505050611e50565b8080611e4190612884565b915050611dd5565b5060009150505b919050565b6000600e60006101000a81548160ff02191690831515021790555060006009805480602002602001604051908101604052809291908181526020018280548015611ef457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611eaa575b5050505050905060005b8151811015611ff957600f6000838381518110611f1e57611f1d612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611fe6576000600f6000848481518110611f8c57611f8b612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8080611ff190612884565b915050611efe565b5050565b61200561241e565b73ffffffffffffffffffffffffffffffffffffffff166120236114ae565b73ffffffffffffffffffffffffffffffffffffffff1614612079576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207090612c8c565b60405180910390fd5b565b6002600154036120c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120b790612cf8565b60405180910390fd5b6002600181905550565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000601460006101000a81548160ff02191690831515021790555060006013819055506000600980548060200260200160405190810160405280929190818152602001828054801561223e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116121f4575b5050505050905060005b8151811015612343576015600083838151811061226857612267612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612330576000601560008484815181106122d6576122d5612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b808061233b90612884565b915050612248565b5050565b600080601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156123b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123db9190612da5565b5050509150506402540be400816123f29190612e20565b91505090565b6001600260098054905061240c9190612b09565b6124169190612938565b600881905550565b600033905090565b82805482825590600052602060002090810192821561249f579160200282015b8281111561249e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612446565b5b5090506124ac91906124b0565b5090565b5b808211156124c95760008160009055506001016124b1565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612524826124f9565b9050919050565b61253481612519565b82525050565b6000612546838361252b565b60208301905092915050565b6000602082019050919050565b600061256a826124cd565b61257481856124d8565b935061257f836124e9565b8060005b838110156125b0578151612597888261253a565b97506125a283612552565b925050600181019050612583565b5085935050505092915050565b600060208201905081810360008301526125d7818461255f565b905092915050565b6000819050919050565b6125f2816125df565b82525050565b600060208201905061260d60008301846125e9565b92915050565b600080fd5b61262181612519565b811461262c57600080fd5b50565b60008135905061263e81612618565b92915050565b60006020828403121561265a57612659612613565b5b60006126688482850161262f565b91505092915050565b60008115159050919050565b61268681612671565b82525050565b60006020820190506126a1600083018461267d565b92915050565b600080604083850312156126be576126bd612613565b5b60006126cc8582860161262f565b92505060206126dd8582860161262f565b9150509250929050565b6126f081612519565b82525050565b600060208201905061270b60008301846126e7565b92915050565b61271a816125df565b811461272557600080fd5b50565b60008135905061273781612711565b92915050565b6000806040838503121561275457612753612613565b5b60006127628582860161262f565b925050602061277385828601612728565b9150509250929050565b60006020828403121561279357612792612613565b5b60006127a184828501612728565b91505092915050565b600082825260208201905092915050565b7f4f776e6572736869704d616e6167657200000000000000000000000000000000600082015250565b60006127f16010836127aa565b91506127fc826127bb565b602082019050919050565b60006040820190508181036000830152612820816127e4565b905061282f60208301846126e7565b92915050565b6000602082019050818103600083015261284e816127e4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061288f826125df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128c1576128c0612855565b5b600182019050919050565b7f46756e64734d616e616765720000000000000000000000000000000000000000600082015250565b6000612902600c836127aa565b915061290d826128cc565b602082019050919050565b60006020820190508181036000830152612931816128f5565b9050919050565b6000612943826125df565b915061294e836125df565b925082820190508082111561296657612965612855565b5b92915050565b60006040820190508181036000830152612985816128f5565b905061299460208301846126e7565b92915050565b7f477561726469616e734d616e6167657200000000000000000000000000000000600082015250565b60006129d06010836127aa565b91506129db8261299a565b602082019050919050565b600060208201905081810360008301526129ff816129c3565b9050919050565b6000612a11826125df565b9150612a1c836125df565b9250828203905081811115612a3457612a33612855565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612aa3826125df565b9150612aae836125df565b9250828202612abc816125df565b91508282048414831517612ad357612ad2612855565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b14826125df565b9150612b1f836125df565b925082612b2f57612b2e612ada565b5b828204905092915050565b60006040820190508181036000830152612b53816128f5565b9050612b6260208301846125e9565b92915050565b600081905092915050565b50565b6000612b83600083612b68565b9150612b8e82612b73565b600082019050919050565b6000612ba482612b76565b9150819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612c0a6026836127aa565b9150612c1582612bae565b604082019050919050565b60006020820190508181036000830152612c3981612bfd565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612c766020836127aa565b9150612c8182612c40565b602082019050919050565b60006020820190508181036000830152612ca581612c69565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612ce2601f836127aa565b9150612ced82612cac565b602082019050919050565b60006020820190508181036000830152612d1181612cd5565b9050919050565b600069ffffffffffffffffffff82169050919050565b612d3781612d18565b8114612d4257600080fd5b50565b600081519050612d5481612d2e565b92915050565b6000819050919050565b612d6d81612d5a565b8114612d7857600080fd5b50565b600081519050612d8a81612d64565b92915050565b600081519050612d9f81612711565b92915050565b600080600080600060a08688031215612dc157612dc0612613565b5b6000612dcf88828901612d45565b9550506020612de088828901612d7b565b9450506040612df188828901612d90565b9350506060612e0288828901612d90565b9250506080612e1388828901612d45565b9150509295509295909350565b6000612e2b82612d5a565b9150612e3683612d5a565b9250828202612e4481612d5a565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615612e7c57612e7b612855565b5b8282058414831517612e9157612e90612855565b5b509291505056fea264697066735822122007bfd03106d3cda9cc732ebf47440b7fa7c41ac800ebed9c5578d39f5f75db4664736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106102085760003560e01c80638636068c11610118578063d0679d34116100a0578063e9316a211161006f578063e9316a21146106f3578063ecfba8f51461071e578063ef64924914610749578063f2fde38b14610774578063fb5497881461079d5761020f565b8063d0679d341461063b578063d237736114610664578063d660c45d1461068d578063daf3ce6a146106b65761020f565b8063a526d83b116100e7578063a526d83b14610554578063a85ae3771461057d578063af630ad3146105a8578063b9e1c798146105d3578063bbe4424a146106105761020f565b80638636068c146104bc5780638da5cb5b146104d35780638fc270b7146104fe5780639204f477146105295761020f565b80632ad2ed901161019b578063715018a61161016a578063715018a6146103fd5780637388fe861461041457806379f9c22f1461043f5780637d09f5dd1461046857806383b40cc9146104935761020f565b80632ad2ed90146103535780632b28d0cc1461037e578063673d4ec8146103a957806371404156146103d45761020f565b806314cbc763116101d757806314cbc763146102bb57806315c1bc3e146102e657806324cb76041461031157806326c886df1461033c5761020f565b80630665f04b1461021157806306c4df831461023c57806310a0cf171461026757806312065fe0146102905761020f565b3661020f57005b005b34801561021d57600080fd5b506102266107b4565b60405161023391906125bd565b60405180910390f35b34801561024857600080fd5b50610251610842565b60405161025e91906125f8565b60405180910390f35b34801561027357600080fd5b5061028e60048036038101906102899190612644565b61084c565b005b34801561029c57600080fd5b506102a5610a2b565b6040516102b291906125f8565b60405180910390f35b3480156102c757600080fd5b506102d0610a33565b6040516102dd91906125f8565b60405180910390f35b3480156102f257600080fd5b506102fb610a3d565b60405161030891906125f8565b60405180910390f35b34801561031d57600080fd5b50610326610a47565b60405161033391906125f8565b60405180910390f35b34801561034857600080fd5b50610351610a51565b005b34801561035f57600080fd5b50610368610c75565b60405161037591906125f8565b60405180910390f35b34801561038a57600080fd5b50610393610c7f565b6040516103a091906125f8565b60405180910390f35b3480156103b557600080fd5b506103be610c89565b6040516103cb919061268c565b60405180910390f35b3480156103e057600080fd5b506103fb60048036038101906103f69190612644565b610ca0565b005b34801561040957600080fd5b50610412610f9b565b005b34801561042057600080fd5b50610429610faf565b60405161043691906125f8565b60405180910390f35b34801561044b57600080fd5b5061046660048036038101906104619190612644565b610fb9565b005b34801561047457600080fd5b5061047d611005565b60405161048a91906125f8565b60405180910390f35b34801561049f57600080fd5b506104ba60048036038101906104b591906126a7565b61100f565b005b3480156104c857600080fd5b506104d1611233565b005b3480156104df57600080fd5b506104e86114ae565b6040516104f591906126f6565b60405180910390f35b34801561050a57600080fd5b506105136114d7565b604051610520919061268c565b60405180910390f35b34801561053557600080fd5b5061053e6114ee565b60405161054b91906125f8565b60405180910390f35b34801561056057600080fd5b5061057b60048036038101906105769190612644565b611528565b005b34801561058957600080fd5b50610592611607565b60405161059f91906125f8565b60405180910390f35b3480156105b457600080fd5b506105bd611611565b6040516105ca91906125f8565b60405180910390f35b3480156105df57600080fd5b506105fa60048036038101906105f59190612644565b61161b565b604051610607919061268c565b60405180910390f35b34801561061c57600080fd5b50610625611671565b60405161063291906125f8565b60405180910390f35b34801561064757600080fd5b50610662600480360381019061065d919061273d565b61167b565b005b34801561067057600080fd5b5061068b6004803603810190610686919061277d565b6117d0565b005b34801561069957600080fd5b506106b460048036038101906106af9190612644565b611849565b005b3480156106c257600080fd5b506106dd60048036038101906106d89190612644565b6119a3565b6040516106ea919061268c565b60405180910390f35b3480156106ff57600080fd5b506107086119f9565b60405161071591906125f8565b60405180910390f35b34801561072a57600080fd5b50610733611a03565b60405161074091906125f8565b60405180910390f35b34801561075557600080fd5b5061075e611a0d565b60405161076b91906125f8565b60405180910390f35b34801561078057600080fd5b5061079b60048036038101906107969190612644565b611a45565b005b3480156107a957600080fd5b506107b2611ac8565b005b6060600980548060200260200160405190810160405280929190818152602001828054801561083857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107ee575b5050505050905090565b6000601154905090565b6108546114ae565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108c357806040517fa4f2199f0000000000000000000000000000000000000000000000000000000081526004016108ba9190612807565b60405180910390fd5b60006009805490501161090b576040517fe9e10a6400000000000000000000000000000000000000000000000000000000815260040161090290612835565b60405180910390fd5b61091433611d46565b61095557336040517f8e8bbab900000000000000000000000000000000000000000000000000000000815260040161094c9190612807565b60405180910390fd5b4260118190555080601460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060136000815480929190610a0890612884565b91905055506001601460006101000a81548160ff02191690831515021790555050565b600047905090565b6000600654905090565b6000600a54905090565b6000600854905090565b600060098054905011610a99576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610a9090612918565b60405180910390fd5b600e60009054906101000a900460ff16610ae8576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401610adf90612918565b60405180910390fd5b600d54600c54610af89190612938565b421115610b4257610b07611e55565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401610b3990612918565b60405180910390fd5b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610bd157336040517f40b28742000000000000000000000000000000000000000000000000000000008152600401610bc8919061296c565b60405180910390fd5b610bda33611d46565b610c1b57336040517f8e8bbab9000000000000000000000000000000000000000000000000000000008152600401610c12919061296c565b60405180910390fd5b6001600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b6000600754905090565b6000601254905090565b6000601460009054906101000a900460ff16905090565b610ca8611ffd565b610cb061207b565b600654600754610cc09190612938565b421015610d02576040517f2ab71fd6000000000000000000000000000000000000000000000000000000008152600401610cf9906129e6565b60405180910390fd5b600060098054905011610d4a576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610d41906129e6565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015610dce57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d84575b50505050509050600060018251610de59190612a06565b67ffffffffffffffff811115610dfe57610dfd612a3a565b5b604051908082528060200260200182016040528015610e2c5781602001602082028036833780820191505090505b50905060008060005b8451811015610f27578573ffffffffffffffffffffffffffffffffffffffff16858281518110610e6857610e67612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610e945760019150610f14565b83518114610f1357848181518110610eaf57610eae612a69565b5b6020026020010151848481518110610eca57610ec9612a69565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610f0f90612884565b9350505b5b8080610f1f90612884565b915050610e35565b508015610f51578260099080519060200190610f44929190612426565b5042600781905550610f8c565b6040517f47637222000000000000000000000000000000000000000000000000000000008152600401610f83906129e6565b60405180910390fd5b50505050610f986120ca565b50565b610fa3611ffd565b610fad60006120d3565b565b6000600354905090565b610fc1611ffd565b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600c54905090565b611017611ffd565b61101f61207b565b60045460055461102f9190612938565b421015611071576040517f0e7f7d15000000000000000000000000000000000000000000000000000000008152600401611068906129e6565b60405180910390fd5b600060098054806020026020016040519081016040528092919081815260200182805480156110f557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116110ab575b505050505090506000805b82518110156111c0578473ffffffffffffffffffffffffffffffffffffffff1683828151811061113357611132612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036111ad57600191508383828151811061116e5761116d612a69565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506111c0565b80806111b890612884565b915050611100565b5080156111ea5781600990805190602001906111dd929190612426565b5042600581905550611225565b6040517f4763722200000000000000000000000000000000000000000000000000000000815260040161121c906129e6565b60405180910390fd5b505061122f6120ca565b5050565b60006009805490501161127b576040517fe9e10a6400000000000000000000000000000000000000000000000000000000815260040161127290612835565b60405180910390fd5b601460009054906101000a900460ff166112ca576040517f7bd1f7a20000000000000000000000000000000000000000000000000000000081526004016112c190612835565b60405180910390fd5b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561135957336040517f40b287420000000000000000000000000000000000000000000000000000000081526004016113509190612807565b60405180910390fd5b6012546011546113699190612938565b4211156113b357611378612197565b6040517f5130ce4e0000000000000000000000000000000000000000000000000000000081526004016113aa90612835565b60405180910390fd5b6113bc33611d46565b6113fd57336040517f8e8bbab90000000000000000000000000000000000000000000000000000000081526004016113f49190612807565b60405180910390fd5b6001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506013600081548092919061146890612884565b9190505550600854601354106114ac576114a3601460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff166120d3565b6114ab612197565b5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600e60009054906101000a900460ff16905090565b6000806114f9612347565b90506000670de0b6b3a7640000600a54836115149190612a98565b61151e9190612b09565b9050809250505090565b611530611ffd565b61153861207b565b6002546003546115489190612938565b42101561158a576040517fdd49edf8000000000000000000000000000000000000000000000000000000008152600401611581906129e6565b60405180910390fd5b6009819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003819055506115fc6123f8565b6116046120ca565b50565b6000600254905090565b6000600d54905090565b6000601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000601354905090565b611683611ffd565b61168b61207b565b600081116116d057806040517fc816f5c80000000000000000000000000000000000000000000000000000000081526004016116c79190612b3a565b60405180910390fd5b600a5481111561171757806040517fd8dde22d00000000000000000000000000000000000000000000000000000000815260040161170e9190612b3a565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161173d90612b99565b60006040518083038185875af1925050503d806000811461177a576040519150601f19603f3d011682016040523d82523d6000602084013e61177f565b606091505b50509050806117c3576040517f5b0ecddc0000000000000000000000000000000000000000000000000000000081526004016117ba90612918565b60405180910390fd5b506117cc6120ca565b5050565b6117d8611ffd565b6000811161181d57806040517f60fe2e4f0000000000000000000000000000000000000000000000000000000081526004016118149190612b3a565b60405180910390fd5b42600c8190555080600b819055506001600e60006101000a81548160ff02191690831515021790555050565b611851611ffd565b61185961207b565b6000479050600081116118a357806040517f25ba08f500000000000000000000000000000000000000000000000000000000815260040161189a9190612b3a565b60405180910390fd5b600a548111156118ea57806040517fd8dde22d0000000000000000000000000000000000000000000000000000000081526004016118e19190612b3a565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161191090612b99565b60006040518083038185875af1925050503d806000811461194d576040519150601f19603f3d011682016040523d82523d6000602084013e611952565b606091505b5050905080611996576040517f5b0ecddc00000000000000000000000000000000000000000000000000000000815260040161198d90612918565b60405180910390fd5b50506119a06120ca565b50565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600554905090565b6000600454905090565b600080611a18612347565b90506000670de0b6b3a76400004783611a319190612a98565b611a3b9190612b09565b9050809250505090565b611a4d611ffd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611abc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab390612c20565b60405180910390fd5b611ac5816120d3565b50565b611ad0611ffd565b600060098054905011611b18576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401611b0f90612918565b60405180910390fd5b600e60009054906101000a900460ff16611b67576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401611b5e90612918565b60405180910390fd5b600d54600c54611b779190612938565b421115611bc157611b86611e55565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401611bb890612918565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015611c4557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611bfb575b505050505090506000805b8251811015611ce757600f6000848381518110611c7057611c6f612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611cd4578180611cd090612884565b9250505b8080611cdf90612884565b915050611c50565b50600854811015611d31576008546040517f9dd75b3a000000000000000000000000000000000000000000000000000000008152600401611d289190612b3a565b60405180910390fd5b600b54600a81905550611d42611e55565b5050565b6000806009805480602002602001604051908101604052809291908181526020018280548015611dcb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d81575b5050505050905060005b8151811015611e4957818181518110611df157611df0612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611e3657600192505050611e50565b8080611e4190612884565b915050611dd5565b5060009150505b919050565b6000600e60006101000a81548160ff02191690831515021790555060006009805480602002602001604051908101604052809291908181526020018280548015611ef457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611eaa575b5050505050905060005b8151811015611ff957600f6000838381518110611f1e57611f1d612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611fe6576000600f6000848481518110611f8c57611f8b612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8080611ff190612884565b915050611efe565b5050565b61200561241e565b73ffffffffffffffffffffffffffffffffffffffff166120236114ae565b73ffffffffffffffffffffffffffffffffffffffff1614612079576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207090612c8c565b60405180910390fd5b565b6002600154036120c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120b790612cf8565b60405180910390fd5b6002600181905550565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000601460006101000a81548160ff02191690831515021790555060006013819055506000600980548060200260200160405190810160405280929190818152602001828054801561223e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116121f4575b5050505050905060005b8151811015612343576015600083838151811061226857612267612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612330576000601560008484815181106122d6576122d5612a69565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b808061233b90612884565b915050612248565b5050565b600080601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156123b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123db9190612da5565b5050509150506402540be400816123f29190612e20565b91505090565b6001600260098054905061240c9190612b09565b6124169190612938565b600881905550565b600033905090565b82805482825590600052602060002090810192821561249f579160200282015b8281111561249e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612446565b5b5090506124ac91906124b0565b5090565b5b808211156124c95760008160009055506001016124b1565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612524826124f9565b9050919050565b61253481612519565b82525050565b6000612546838361252b565b60208301905092915050565b6000602082019050919050565b600061256a826124cd565b61257481856124d8565b935061257f836124e9565b8060005b838110156125b0578151612597888261253a565b97506125a283612552565b925050600181019050612583565b5085935050505092915050565b600060208201905081810360008301526125d7818461255f565b905092915050565b6000819050919050565b6125f2816125df565b82525050565b600060208201905061260d60008301846125e9565b92915050565b600080fd5b61262181612519565b811461262c57600080fd5b50565b60008135905061263e81612618565b92915050565b60006020828403121561265a57612659612613565b5b60006126688482850161262f565b91505092915050565b60008115159050919050565b61268681612671565b82525050565b60006020820190506126a1600083018461267d565b92915050565b600080604083850312156126be576126bd612613565b5b60006126cc8582860161262f565b92505060206126dd8582860161262f565b9150509250929050565b6126f081612519565b82525050565b600060208201905061270b60008301846126e7565b92915050565b61271a816125df565b811461272557600080fd5b50565b60008135905061273781612711565b92915050565b6000806040838503121561275457612753612613565b5b60006127628582860161262f565b925050602061277385828601612728565b9150509250929050565b60006020828403121561279357612792612613565b5b60006127a184828501612728565b91505092915050565b600082825260208201905092915050565b7f4f776e6572736869704d616e6167657200000000000000000000000000000000600082015250565b60006127f16010836127aa565b91506127fc826127bb565b602082019050919050565b60006040820190508181036000830152612820816127e4565b905061282f60208301846126e7565b92915050565b6000602082019050818103600083015261284e816127e4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061288f826125df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128c1576128c0612855565b5b600182019050919050565b7f46756e64734d616e616765720000000000000000000000000000000000000000600082015250565b6000612902600c836127aa565b915061290d826128cc565b602082019050919050565b60006020820190508181036000830152612931816128f5565b9050919050565b6000612943826125df565b915061294e836125df565b925082820190508082111561296657612965612855565b5b92915050565b60006040820190508181036000830152612985816128f5565b905061299460208301846126e7565b92915050565b7f477561726469616e734d616e6167657200000000000000000000000000000000600082015250565b60006129d06010836127aa565b91506129db8261299a565b602082019050919050565b600060208201905081810360008301526129ff816129c3565b9050919050565b6000612a11826125df565b9150612a1c836125df565b9250828203905081811115612a3457612a33612855565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612aa3826125df565b9150612aae836125df565b9250828202612abc816125df565b91508282048414831517612ad357612ad2612855565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b14826125df565b9150612b1f836125df565b925082612b2f57612b2e612ada565b5b828204905092915050565b60006040820190508181036000830152612b53816128f5565b9050612b6260208301846125e9565b92915050565b600081905092915050565b50565b6000612b83600083612b68565b9150612b8e82612b73565b600082019050919050565b6000612ba482612b76565b9150819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612c0a6026836127aa565b9150612c1582612bae565b604082019050919050565b60006020820190508181036000830152612c3981612bfd565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612c766020836127aa565b9150612c8182612c40565b602082019050919050565b60006020820190508181036000830152612ca581612c69565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612ce2601f836127aa565b9150612ced82612cac565b602082019050919050565b60006020820190508181036000830152612d1181612cd5565b9050919050565b600069ffffffffffffffffffff82169050919050565b612d3781612d18565b8114612d4257600080fd5b50565b600081519050612d5481612d2e565b92915050565b6000819050919050565b612d6d81612d5a565b8114612d7857600080fd5b50565b600081519050612d8a81612d64565b92915050565b600081519050612d9f81612711565b92915050565b600080600080600060a08688031215612dc157612dc0612613565b5b6000612dcf88828901612d45565b9550506020612de088828901612d7b565b9450506040612df188828901612d90565b9350506060612e0288828901612d90565b9250506080612e1388828901612d45565b9150509295509295909350565b6000612e2b82612d5a565b9150612e3683612d5a565b9250828202612e4481612d5a565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615612e7c57612e7b612855565b5b8282058414831517612e9157612e90612855565b5b509291505056fea264697066735822122007bfd03106d3cda9cc732ebf47440b7fa7c41ac800ebed9c5578d39f5f75db4664736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 169,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 891,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "addGuardianDelay",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 893,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianAddTime",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 895,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "changeGuardianDelay",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 897,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianChangeTime",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 899,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "removeGuardianDelay",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 901,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianRemovalTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 903,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "requiredConfirmations",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 906,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "guardians",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 336,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "dailyTransferLimit",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 338,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "tempDailyTransferLimit",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 340,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastDailyTransferUpdateRequestTime",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 342,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "dailyTransferLimitUpdateConfirmationTime",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 344,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isDailyTransferLimitUpdateRequested",
        "offset": 0,
        "slot": "14",
        "type": "t_bool"
      },
      {
        "astId": 348,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isConfirmedByGuardian",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 351,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "priceFeed",
        "offset": 0,
        "slot": "16",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 1295,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastOwnerUpdateRequestTime",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 1297,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "ownerUpdateConfirmationTime",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 1299,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "noOfConfirmations",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 1301,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isOwnerUpdateRequested",
        "offset": 0,
        "slot": "20",
        "type": "t_bool"
      },
      {
        "astId": 1303,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "tempAddress",
        "offset": 1,
        "slot": "20",
        "type": "t_address"
      },
      {
        "astId": 1307,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isOwnershipConfimedByGuardian",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}