{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Error__AddressAlreadyAnOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Error__AddressNotFoundAsGuardian",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "Error__AlreadyConfirmedByGuardian",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Error__BalanceIsZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyAddAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyChangeAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyRemoveAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Error__DailyTransferLimitExceed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__GuardianDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__GuardiansListIsEmpty",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Error__InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "Error__InvalidLimit",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__RequestTimeExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "confirmations",
          "type": "uint256"
        }
      ],
      "name": "Error__RequiredConfirmationsNotMet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__TransactionFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__UpdateNotRequested",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__UpdateNotRequestedByOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "addGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "changeGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmAndUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmDailyTransferLimitRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmUpdateOwnerRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalanceInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChangeGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimitInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimitUpdateConfirmationTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimitUpdateRequestStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "getGuardianConfirmationStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGuardians",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIsOwnerUpdateRequested",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "getIsOwnershipConfimedByGuardian",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastDailyTransferUpdateRequestTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianAddTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianChangeTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianRemovalTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastOwnerUpdateRequestTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNoOfConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwnerUpdateConfirmationTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRemoveGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRequiredConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "removeGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "requestToUpdateDailyTransferLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwnerAddress",
          "type": "address"
        }
      ],
      "name": "requestToUpdateOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sendAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "updateETHUSDPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf5b1b4fd169097b19556b06e2f3330d4f99767adb6a8685e357051883940c5af",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "2914931",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000100000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000001000000000002000000000000000000020000000000000000000000000000000000000000000000000800000000000000000",
    "blockHash": "0x578cc04b5db0ba7f37ee6c6e0338175baba2461ac83bc348f7a9f40f5ddc1695",
    "transactionHash": "0xf5b1b4fd169097b19556b06e2f3330d4f99767adb6a8685e357051883940c5af",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0xf5b1b4fd169097b19556b06e2f3330d4f99767adb6a8685e357051883940c5af",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x578cc04b5db0ba7f37ee6c6e0338175baba2461ac83bc348f7a9f40f5ddc1695"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "2914931",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "0ba5f9e2b7a0de3a0453749bb3e01a3e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Error__AddressAlreadyAnOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Error__AddressNotFoundAsGuardian\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"Error__AlreadyConfirmedByGuardian\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Error__BalanceIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyAddAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyChangeAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyRemoveAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Error__DailyTransferLimitExceed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__GuardianDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__GuardiansListIsEmpty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Error__InvalidAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"Error__InvalidLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__RequestTimeExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"confirmations\",\"type\":\"uint256\"}],\"name\":\"Error__RequiredConfirmationsNotMet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__TransactionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__UpdateNotRequested\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__UpdateNotRequestedByOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"addGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"changeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmAndUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmDailyTransferLimitRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmUpdateOwnerRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChangeGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimitInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimitUpdateConfirmationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimitUpdateRequestStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"getGuardianConfirmationStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGuardians\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIsOwnerUpdateRequested\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"getIsOwnershipConfimedByGuardian\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastDailyTransferUpdateRequestTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianAddTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianChangeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianRemovalTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastOwnerUpdateRequestTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNoOfConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerUpdateConfirmationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemoveGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequiredConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"removeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"requestToUpdateDailyTransferLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwnerAddress\",\"type\":\"address\"}],\"name\":\"requestToUpdateOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sendAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"updateETHUSDPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Guardian.sol\":\"Guardian\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nerror Error__AddressAlreadyAnOwner(string location, address addr);\\nerror Error__GuardiansListIsEmpty(string location);\\nerror Error__AddressNotFoundAsGuardian(string location, address addr);\\nerror Error__UpdateNotRequested(string location);\\nerror Error__AlreadyConfirmedByGuardian(string location, address guardian);\\nerror Error__RequestTimeExpired(string location);\\nerror Error__InvalidAmount(string location, uint amount);\\nerror Error__DailyTransferLimitExceed(string location, uint amount);\\nerror Error__TransactionFailed(string location);\\nerror Error__BalanceIsZero(string location, uint balance);\\nerror Error__InvalidLimit(string location, uint256 limit);\\nerror Error__UpdateNotRequestedByOwner(string location);\\nerror Error__RequiredConfirmationsNotMet(\\n    string location,\\n    uint256 confirmations\\n);\\nerror Error__InvalidGuardiansList(string location, address[] addressesList);\\nerror Error__CanOnlyChangeAfterDelayPeriod(string location);\\nerror Error__GuardianDoesNotExist(string location);\\nerror Error__CanOnlyRemoveAfterDelayPeriod(string location);\\nerror Error__CanOnlyAddAfterDelayPeriod(string location);\\n\",\"keccak256\":\"0x9e7e43a4f27803f4f23f66e6fdbe62120abfaf774ff9d1f9095b0bd10af8f6a5\",\"license\":\"MIT\"},\"contracts/FundsManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./GuardiansManager.sol\\\";\\nimport \\\"./Errors.sol\\\";\\n\\ncontract FundsManager is GuardiansManager {\\n    // * STATE VARIABLES\\n    uint256 private dailyTransferLimit;\\n    uint256 private tempDailyTransferLimit;\\n    uint256 private lastDailyTransferUpdateRequestTime;\\n    uint256 private dailyTransferLimitUpdateConfirmationTime;\\n\\n    bool private isDailyTransferLimitUpdateRequested;\\n\\n    mapping(address => bool) private isConfirmedByGuardian;\\n\\n    AggregatorV3Interface private priceFeed;\\n\\n    // * FUNCTIONS\\n    constructor(address _priceFeed) {\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n        dailyTransferLimit = 1 ether;\\n        dailyTransferLimitUpdateConfirmationTime = 1 days;\\n    }\\n\\n    // * FUNCTIONS - EXTERNAL\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n\\n    function send(address to, uint amount) external onlyOwner nonReentrant {\\n        if (amount <= 0) {\\n            revert Error__InvalidAmount(\\\"FundsManager\\\", amount);\\n        }\\n\\n        if (amount > dailyTransferLimit) {\\n            revert Error__DailyTransferLimitExceed(\\\"FundsManager\\\", amount);\\n        }\\n\\n        (bool success, ) = to.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Error__TransactionFailed(\\\"FundsManager\\\");\\n        }\\n    }\\n\\n    function sendAll(address to) external onlyOwner nonReentrant {\\n        uint256 balance = address(this).balance;\\n\\n        if (balance <= 0) {\\n            revert Error__BalanceIsZero(\\\"FundsManager\\\", balance);\\n        }\\n\\n        if (balance > dailyTransferLimit) {\\n            revert Error__DailyTransferLimitExceed(\\\"FundsManager\\\", balance);\\n        }\\n\\n        (bool success, ) = to.call{value: balance}(\\\"\\\");\\n        if (!success) {\\n            revert Error__TransactionFailed(\\\"FundsManager\\\");\\n        }\\n    }\\n\\n    function requestToUpdateDailyTransferLimit(\\n        uint256 limit\\n    ) external onlyOwner {\\n        if (limit <= 0) {\\n            revert Error__InvalidLimit(\\\"FundsManager\\\", limit);\\n        }\\n\\n        lastDailyTransferUpdateRequestTime = block.timestamp;\\n        tempDailyTransferLimit = limit;\\n        isDailyTransferLimitUpdateRequested = true;\\n    }\\n\\n    function confirmDailyTransferLimitRequest() external {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"FundsManager\\\");\\n        }\\n\\n        if (!isDailyTransferLimitUpdateRequested) {\\n            revert Error__UpdateNotRequestedByOwner(\\\"FundsManager\\\");\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastDailyTransferUpdateRequestTime +\\n                dailyTransferLimitUpdateConfirmationTime\\n        ) {\\n            resetDailyTransferLimitVariables();\\n            revert Error__RequestTimeExpired(\\\"FundsManager\\\");\\n        }\\n\\n        if (isConfirmedByGuardian[msg.sender]) {\\n            revert Error__AlreadyConfirmedByGuardian(\\n                \\\"FundsManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\\"FundsManager\\\", msg.sender);\\n        }\\n\\n        isConfirmedByGuardian[msg.sender] = true;\\n    }\\n\\n    function confirmAndUpdate() external onlyOwner {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"FundsManager\\\");\\n        }\\n\\n        if (!isDailyTransferLimitUpdateRequested) {\\n            revert Error__UpdateNotRequestedByOwner(\\\"FundsManager\\\");\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastDailyTransferUpdateRequestTime +\\n                dailyTransferLimitUpdateConfirmationTime\\n        ) {\\n            resetDailyTransferLimitVariables();\\n            revert Error__RequestTimeExpired(\\\"FundsManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n        uint256 counter = 0;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isConfirmedByGuardian[guardiansCopy[i]]) {\\n                counter++;\\n            }\\n        }\\n\\n        if (counter < requiredConfirmations) {\\n            revert Error__RequiredConfirmationsNotMet(\\n                \\\"FundsManager\\\",\\n                requiredConfirmations\\n            );\\n        }\\n\\n        dailyTransferLimit = tempDailyTransferLimit;\\n\\n        resetDailyTransferLimitVariables();\\n    }\\n\\n    function updateETHUSDPriceFeed(address _priceFeed) external onlyOwner {\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n    }\\n\\n    // * FUNCTIONS - PRIVATE\\n\\n    function resetDailyTransferLimitVariables() private {\\n        isDailyTransferLimitUpdateRequested = false;\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isConfirmedByGuardian[guardiansCopy[i]]) {\\n                isConfirmedByGuardian[guardiansCopy[i]] = false;\\n            }\\n        }\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - EXTERNAL\\n\\n    function getBalance() external view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function getBalanceInUSD() external view returns (uint256) {\\n        uint256 ethPrice = getPrice();\\n        uint256 balanceInUSD = (ethPrice * address(this).balance) /\\n            1000000000000000000;\\n        return balanceInUSD;\\n    }\\n\\n    function getDailyTransferLimit() external view returns (uint256) {\\n        return dailyTransferLimit;\\n    }\\n\\n    function getDailyTransferLimitInUSD() external view returns (uint256) {\\n        uint256 ethPrice = getPrice();\\n        uint256 dailyTransferLimitInUSD = (ethPrice * dailyTransferLimit) /\\n            1000000000000000000;\\n        return dailyTransferLimitInUSD;\\n    }\\n\\n    function getRequiredConfirmations() external view returns (uint256) {\\n        return requiredConfirmations;\\n    }\\n\\n    function getDailyTransferLimitUpdateRequestStatus()\\n        external\\n        view\\n        returns (bool)\\n    {\\n        return isDailyTransferLimitUpdateRequested;\\n    }\\n\\n    function getDailyTransferLimitUpdateConfirmationTime()\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return dailyTransferLimitUpdateConfirmationTime;\\n    }\\n\\n    function getLastDailyTransferUpdateRequestTime()\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return lastDailyTransferUpdateRequestTime;\\n    }\\n\\n    function getGuardianConfirmationStatus(\\n        address guardian\\n    ) external view returns (bool) {\\n        return isConfirmedByGuardian[guardian];\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - PUBLIC\\n\\n    function getPrice() public view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n}\\n\",\"keccak256\":\"0x523289a5ec6ec69005cbb5e2ff5961f264e27e0aebaae6c76de67afc89020b21\",\"license\":\"MIT\"},\"contracts/Guardian.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"./FundsManager.sol\\\";\\nimport \\\"./OwnershipManager.sol\\\";\\n\\ncontract Guardian is FundsManager, OwnershipManager {\\n    constructor(address priceFeed) FundsManager(priceFeed) {}\\n}\\n\",\"keccak256\":\"0x2bd1fb648be989241428c7de5e79d13252100f1a219a55624c3142724be6fb90\",\"license\":\"MIT\"},\"contracts/GuardiansManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./Errors.sol\\\";\\n\\ncontract GuardiansManager is Ownable, ReentrancyGuard {\\n    // * STATE VARIABLES\\n    uint256 private addGuardianDelay;\\n    uint256 private lastGuardianAddTime;\\n    uint256 private changeGuardianDelay;\\n    uint256 private lastGuardianChangeTime;\\n    uint256 private removeGuardianDelay;\\n    uint256 private lastGuardianRemovalTime;\\n\\n    uint256 internal requiredConfirmations;\\n\\n    address[] internal guardians;\\n\\n    // * FUNCTIONS\\n    constructor() {\\n        lastGuardianAddTime = block.timestamp;\\n        addGuardianDelay = 1 days;\\n        lastGuardianChangeTime = block.timestamp;\\n        changeGuardianDelay = 1 days;\\n        lastGuardianRemovalTime = block.timestamp;\\n        removeGuardianDelay = 3 days;\\n    }\\n\\n    // * FUNCTIONS - EXTERNAL\\n    function addGuardian(address guardian) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianAddTime + addGuardianDelay) {\\n            revert Error__CanOnlyAddAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        guardians.push(guardian);\\n        lastGuardianAddTime = block.timestamp;\\n        updateRequiredConfirmations();\\n    }\\n\\n    function changeGuardian(\\n        address from,\\n        address to\\n    ) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianChangeTime + changeGuardianDelay) {\\n            revert Error__CanOnlyChangeAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        // * using this variable so we should not update the state variable if address does not exits.\\n        bool exist = false;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (guardiansCopy[i] == from) {\\n                exist = true;\\n                guardiansCopy[i] = to;\\n                break;\\n            }\\n        }\\n\\n        if (exist) {\\n            guardians = guardiansCopy;\\n            lastGuardianChangeTime = block.timestamp;\\n        } else {\\n            revert Error__GuardianDoesNotExist(\\\"GuardiansManager\\\");\\n        }\\n    }\\n\\n    function removeGuardian(address guardian) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianRemovalTime + removeGuardianDelay) {\\n            revert Error__CanOnlyRemoveAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"GuardiansManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        // * for local arrays we need to declare the size at the initialization time.\\n        // * we are removing the 1 guardian so the updated array will be less than 1 the length of existing array.\\n        address[] memory updatedCopy = new address[](guardiansCopy.length - 1);\\n        uint256 index = 0;\\n\\n        // * using this variable so we should not update the state variable if address does not exits.\\n        bool exist = false;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (guardiansCopy[i] == guardian) {\\n                exist = true;\\n                continue;\\n            } else if (i != updatedCopy.length) {\\n                updatedCopy[index] = guardiansCopy[i];\\n                index++;\\n            }\\n        }\\n\\n        if (exist) {\\n            guardians = updatedCopy;\\n            lastGuardianRemovalTime = block.timestamp;\\n        } else {\\n            revert Error__GuardianDoesNotExist(\\\"GuardiansManager\\\");\\n        }\\n    }\\n\\n    // * FUNCTION - PRIVATE\\n\\n    function updateRequiredConfirmations() private {\\n        requiredConfirmations = (guardians.length / 2) + 1;\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - EXTERNAL\\n\\n    function getLastGuardianAddTime() external view returns (uint256) {\\n        return lastGuardianAddTime;\\n    }\\n\\n    function getAddGuardianDelay() external view returns (uint256) {\\n        return addGuardianDelay;\\n    }\\n\\n    function getLastGuardianChangeTime() external view returns (uint256) {\\n        return lastGuardianChangeTime;\\n    }\\n\\n    function getChangeGuardianDelay() external view returns (uint256) {\\n        return changeGuardianDelay;\\n    }\\n\\n    function getLastGuardianRemovalTime() external view returns (uint256) {\\n        return lastGuardianRemovalTime;\\n    }\\n\\n    function getRemoveGuardianDelay() external view returns (uint256) {\\n        return removeGuardianDelay;\\n    }\\n\\n    function getGuardians() external view returns (address[] memory) {\\n        return guardians;\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - INTERNAL\\n\\n    function doesGuardianExist(address caller) internal view returns (bool) {\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (caller == guardiansCopy[i]) {\\n                return true;\\n            }\\n        }\\n\\n        return false;\\n    }\\n}\\n\",\"keccak256\":\"0xb0a544360367aa821cff0249b5cbdf6dd164365569223ce097f7d7a22ab4fc81\",\"license\":\"MIT\"},\"contracts/OwnershipManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport \\\"./GuardiansManager.sol\\\";\\nimport \\\"./Errors.sol\\\";\\n\\npragma solidity ^0.8.17;\\n\\ncontract OwnershipManager is GuardiansManager {\\n    // * STATE VARIABLES\\n    uint256 private lastOwnerUpdateRequestTime;\\n    uint256 private ownerUpdateConfirmationTime;\\n    uint256 private noOfConfirmations;\\n\\n    bool private isOwnerUpdateRequested;\\n\\n    address private tempAddress;\\n\\n    mapping(address => bool) private isOwnershipConfimedByGuardian;\\n\\n    // * FUNCTIONS\\n    constructor() {\\n        ownerUpdateConfirmationTime = 2 hours;\\n    }\\n\\n    function requestToUpdateOwner(address newOwnerAddress) external {\\n        if (newOwnerAddress == owner()) {\\n            revert Error__AddressAlreadyAnOwner(\\n                \\\"OwnershipManager\\\",\\n                newOwnerAddress\\n            );\\n        }\\n\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        lastOwnerUpdateRequestTime = block.timestamp;\\n        tempAddress = newOwnerAddress;\\n        isOwnershipConfimedByGuardian[msg.sender] = true;\\n        noOfConfirmations++;\\n        isOwnerUpdateRequested = true;\\n    }\\n\\n    function confirmUpdateOwnerRequest() external {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!isOwnerUpdateRequested) {\\n            revert Error__UpdateNotRequested(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (isOwnershipConfimedByGuardian[msg.sender]) {\\n            revert Error__AlreadyConfirmedByGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastOwnerUpdateRequestTime + ownerUpdateConfirmationTime\\n        ) {\\n            resetOwnershipVariables();\\n            revert Error__RequestTimeExpired(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        isOwnershipConfimedByGuardian[msg.sender] = true;\\n        noOfConfirmations++;\\n\\n        if (noOfConfirmations >= requiredConfirmations) {\\n            // * Ownable internal function without access restriction.\\n            _transferOwnership(tempAddress);\\n            resetOwnershipVariables();\\n        }\\n    }\\n\\n    // * FUNCTION - PRIVATE\\n    function resetOwnershipVariables() private {\\n        isOwnerUpdateRequested = false;\\n        noOfConfirmations = 0;\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isOwnershipConfimedByGuardian[guardiansCopy[i]]) {\\n                isOwnershipConfimedByGuardian[guardiansCopy[i]] = false;\\n            }\\n        }\\n    }\\n\\n    // * FUNCTION - VIEW & PURE\\n    function getIsOwnerUpdateRequested() external view returns (bool) {\\n        return isOwnerUpdateRequested;\\n    }\\n\\n    function getIsOwnershipConfimedByGuardian(\\n        address guardian\\n    ) external view returns (bool) {\\n        return isOwnershipConfimedByGuardian[guardian];\\n    }\\n\\n    function getLastOwnerUpdateRequestTime() external view returns (uint256) {\\n        return lastOwnerUpdateRequestTime;\\n    }\\n\\n    function getOwnerUpdateConfirmationTime() external view returns (uint256) {\\n        return ownerUpdateConfirmationTime;\\n    }\\n\\n    function getNoOfConfirmations() external view returns (uint256) {\\n        return noOfConfirmations;\\n    }\\n}\\n\",\"keccak256\":\"0x2bbfb872f9cd3c9be6056af97f6ad528630162cade95289ab63c88d937323b95\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200317938038062003179833981810160405281019062000037919062000233565b80620000586200004c620000fd60201b60201c565b6200010560201b60201c565b6001808190555042600381905550620151806002819055504260058190555062015180600481905550426007819055506203f48060068190555080601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a7640000600a8190555062015180600d8190555050611c206012819055505062000265565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fb82620001ce565b9050919050565b6200020d81620001ee565b81146200021957600080fd5b50565b6000815190506200022d8162000202565b92915050565b6000602082840312156200024c576200024b620001c9565b5b60006200025c848285016200021c565b91505092915050565b612f0480620002756000396000f3fe6080604052600436106102135760003560e01c80638da5cb5b11610118578063d0679d34116100a0578063e9316a211161006f578063e9316a2114610729578063ecfba8f514610754578063ef6492491461077f578063f2fde38b146107aa578063fb549788146107d35761021a565b8063d0679d3414610671578063d23773611461069a578063d660c45d146106c3578063daf3ce6a146106ec5761021a565b8063a526d83b116100e7578063a526d83b1461058a578063a85ae377146105b3578063af630ad3146105de578063b9e1c79814610609578063bbe4424a146106465761021a565b80638da5cb5b146104de5780638fc270b7146105095780639204f4771461053457806398d5fdca1461055f5761021a565b80632b28d0cc1161019b5780637388fe861161016a5780637388fe861461041f57806379f9c22f1461044a5780637d09f5dd1461047357806383b40cc91461049e5780638636068c146104c75761021a565b80632b28d0cc14610389578063673d4ec8146103b457806371404156146103df578063715018a6146104085761021a565b806314cbc763116101e257806314cbc763146102c657806315c1bc3e146102f157806324cb76041461031c57806326c886df146103475780632ad2ed901461035e5761021a565b80630665f04b1461021c57806306c4df831461024757806310a0cf171461027257806312065fe01461029b5761021a565b3661021a57005b005b34801561022857600080fd5b506102316107ea565b60405161023e91906125f3565b60405180910390f35b34801561025357600080fd5b5061025c610878565b604051610269919061262e565b60405180910390f35b34801561027e57600080fd5b506102996004803603810190610294919061267a565b610882565b005b3480156102a757600080fd5b506102b0610a61565b6040516102bd919061262e565b60405180910390f35b3480156102d257600080fd5b506102db610a69565b6040516102e8919061262e565b60405180910390f35b3480156102fd57600080fd5b50610306610a73565b604051610313919061262e565b60405180910390f35b34801561032857600080fd5b50610331610a7d565b60405161033e919061262e565b60405180910390f35b34801561035357600080fd5b5061035c610a87565b005b34801561036a57600080fd5b50610373610cab565b604051610380919061262e565b60405180910390f35b34801561039557600080fd5b5061039e610cb5565b6040516103ab919061262e565b60405180910390f35b3480156103c057600080fd5b506103c9610cbf565b6040516103d691906126c2565b60405180910390f35b3480156103eb57600080fd5b506104066004803603810190610401919061267a565b610cd6565b005b34801561041457600080fd5b5061041d610fd1565b005b34801561042b57600080fd5b50610434610fe5565b604051610441919061262e565b60405180910390f35b34801561045657600080fd5b50610471600480360381019061046c919061267a565b610fef565b005b34801561047f57600080fd5b5061048861103b565b604051610495919061262e565b60405180910390f35b3480156104aa57600080fd5b506104c560048036038101906104c091906126dd565b611045565b005b3480156104d357600080fd5b506104dc611269565b005b3480156104ea57600080fd5b506104f36114e4565b604051610500919061272c565b60405180910390f35b34801561051557600080fd5b5061051e61150d565b60405161052b91906126c2565b60405180910390f35b34801561054057600080fd5b50610549611524565b604051610556919061262e565b60405180910390f35b34801561056b57600080fd5b5061057461155e565b604051610581919061262e565b60405180910390f35b34801561059657600080fd5b506105b160048036038101906105ac919061267a565b61160f565b005b3480156105bf57600080fd5b506105c86116ee565b6040516105d5919061262e565b60405180910390f35b3480156105ea57600080fd5b506105f36116f8565b604051610600919061262e565b60405180910390f35b34801561061557600080fd5b50610630600480360381019061062b919061267a565b611702565b60405161063d91906126c2565b60405180910390f35b34801561065257600080fd5b5061065b611758565b604051610668919061262e565b60405180910390f35b34801561067d57600080fd5b5061069860048036038101906106939190612773565b611762565b005b3480156106a657600080fd5b506106c160048036038101906106bc91906127b3565b6118b7565b005b3480156106cf57600080fd5b506106ea60048036038101906106e5919061267a565b611930565b005b3480156106f857600080fd5b50610713600480360381019061070e919061267a565b611a8a565b60405161072091906126c2565b60405180910390f35b34801561073557600080fd5b5061073e611ae0565b60405161074b919061262e565b60405180910390f35b34801561076057600080fd5b50610769611aea565b604051610776919061262e565b60405180910390f35b34801561078b57600080fd5b50610794611af4565b6040516107a1919061262e565b60405180910390f35b3480156107b657600080fd5b506107d160048036038101906107cc919061267a565b611b2c565b005b3480156107df57600080fd5b506107e8611baf565b005b6060600980548060200260200160405190810160405280929190818152602001828054801561086e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610824575b5050505050905090565b6000601154905090565b61088a6114e4565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108f957806040517fa4f2199f0000000000000000000000000000000000000000000000000000000081526004016108f0919061283d565b60405180910390fd5b600060098054905011610941576040517fe9e10a640000000000000000000000000000000000000000000000000000000081526004016109389061286b565b60405180910390fd5b61094a33611e2d565b61098b57336040517f8e8bbab9000000000000000000000000000000000000000000000000000000008152600401610982919061283d565b60405180910390fd5b4260118190555080601460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060136000815480929190610a3e906128ba565b91905055506001601460006101000a81548160ff02191690831515021790555050565b600047905090565b6000600654905090565b6000600a54905090565b6000600854905090565b600060098054905011610acf576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610ac69061294e565b60405180910390fd5b600e60009054906101000a900460ff16610b1e576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401610b159061294e565b60405180910390fd5b600d54600c54610b2e919061296e565b421115610b7857610b3d611f3c565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401610b6f9061294e565b60405180910390fd5b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610c0757336040517f40b28742000000000000000000000000000000000000000000000000000000008152600401610bfe91906129a2565b60405180910390fd5b610c1033611e2d565b610c5157336040517f8e8bbab9000000000000000000000000000000000000000000000000000000008152600401610c4891906129a2565b60405180910390fd5b6001600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b6000600754905090565b6000601254905090565b6000601460009054906101000a900460ff16905090565b610cde6120e4565b610ce6612162565b600654600754610cf6919061296e565b421015610d38576040517f2ab71fd6000000000000000000000000000000000000000000000000000000008152600401610d2f90612a1c565b60405180910390fd5b600060098054905011610d80576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610d7790612a1c565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015610e0457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610dba575b50505050509050600060018251610e1b9190612a3c565b67ffffffffffffffff811115610e3457610e33612a70565b5b604051908082528060200260200182016040528015610e625781602001602082028036833780820191505090505b50905060008060005b8451811015610f5d578573ffffffffffffffffffffffffffffffffffffffff16858281518110610e9e57610e9d612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610eca5760019150610f4a565b83518114610f4957848181518110610ee557610ee4612a9f565b5b6020026020010151848481518110610f0057610eff612a9f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610f45906128ba565b9350505b5b8080610f55906128ba565b915050610e6b565b508015610f87578260099080519060200190610f7a92919061245c565b5042600781905550610fc2565b6040517f47637222000000000000000000000000000000000000000000000000000000008152600401610fb990612a1c565b60405180910390fd5b50505050610fce6121b1565b50565b610fd96120e4565b610fe360006121ba565b565b6000600354905090565b610ff76120e4565b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600c54905090565b61104d6120e4565b611055612162565b600454600554611065919061296e565b4210156110a7576040517f0e7f7d1500000000000000000000000000000000000000000000000000000000815260040161109e90612a1c565b60405180910390fd5b6000600980548060200260200160405190810160405280929190818152602001828054801561112b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116110e1575b505050505090506000805b82518110156111f6578473ffffffffffffffffffffffffffffffffffffffff1683828151811061116957611168612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036111e35760019150838382815181106111a4576111a3612a9f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506111f6565b80806111ee906128ba565b915050611136565b50801561122057816009908051906020019061121392919061245c565b504260058190555061125b565b6040517f4763722200000000000000000000000000000000000000000000000000000000815260040161125290612a1c565b60405180910390fd5b50506112656121b1565b5050565b6000600980549050116112b1576040517fe9e10a640000000000000000000000000000000000000000000000000000000081526004016112a89061286b565b60405180910390fd5b601460009054906101000a900460ff16611300576040517f7bd1f7a20000000000000000000000000000000000000000000000000000000081526004016112f79061286b565b60405180910390fd5b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561138f57336040517f40b28742000000000000000000000000000000000000000000000000000000008152600401611386919061283d565b60405180910390fd5b60125460115461139f919061296e565b4211156113e9576113ae61227e565b6040517f5130ce4e0000000000000000000000000000000000000000000000000000000081526004016113e09061286b565b60405180910390fd5b6113f233611e2d565b61143357336040517f8e8bbab900000000000000000000000000000000000000000000000000000000815260040161142a919061283d565b60405180910390fd5b6001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506013600081548092919061149e906128ba565b9190505550600854601354106114e2576114d9601460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121ba565b6114e161227e565b5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600e60009054906101000a900460ff16905090565b60008061152f61155e565b90506000670de0b6b3a7640000600a548361154a9190612ace565b6115549190612b3f565b9050809250505090565b600080601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156115ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f29190612bfd565b5050509150506402540be400816116099190612c78565b91505090565b6116176120e4565b61161f612162565b60025460035461162f919061296e565b421015611671576040517fdd49edf800000000000000000000000000000000000000000000000000000000815260040161166890612a1c565b60405180910390fd5b6009819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003819055506116e361242e565b6116eb6121b1565b50565b6000600254905090565b6000600d54905090565b6000601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000601354905090565b61176a6120e4565b611772612162565b600081116117b757806040517fc816f5c80000000000000000000000000000000000000000000000000000000081526004016117ae9190612cf0565b60405180910390fd5b600a548111156117fe57806040517fd8dde22d0000000000000000000000000000000000000000000000000000000081526004016117f59190612cf0565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161182490612d4f565b60006040518083038185875af1925050503d8060008114611861576040519150601f19603f3d011682016040523d82523d6000602084013e611866565b606091505b50509050806118aa576040517f5b0ecddc0000000000000000000000000000000000000000000000000000000081526004016118a19061294e565b60405180910390fd5b506118b36121b1565b5050565b6118bf6120e4565b6000811161190457806040517f60fe2e4f0000000000000000000000000000000000000000000000000000000081526004016118fb9190612cf0565b60405180910390fd5b42600c8190555080600b819055506001600e60006101000a81548160ff02191690831515021790555050565b6119386120e4565b611940612162565b60004790506000811161198a57806040517f25ba08f50000000000000000000000000000000000000000000000000000000081526004016119819190612cf0565b60405180910390fd5b600a548111156119d157806040517fd8dde22d0000000000000000000000000000000000000000000000000000000081526004016119c89190612cf0565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516119f790612d4f565b60006040518083038185875af1925050503d8060008114611a34576040519150601f19603f3d011682016040523d82523d6000602084013e611a39565b606091505b5050905080611a7d576040517f5b0ecddc000000000000000000000000000000000000000000000000000000008152600401611a749061294e565b60405180910390fd5b5050611a876121b1565b50565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600554905090565b6000600454905090565b600080611aff61155e565b90506000670de0b6b3a76400004783611b189190612ace565b611b229190612b3f565b9050809250505090565b611b346120e4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9a90612dd6565b60405180910390fd5b611bac816121ba565b50565b611bb76120e4565b600060098054905011611bff576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401611bf69061294e565b60405180910390fd5b600e60009054906101000a900460ff16611c4e576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401611c459061294e565b60405180910390fd5b600d54600c54611c5e919061296e565b421115611ca857611c6d611f3c565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401611c9f9061294e565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015611d2c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611ce2575b505050505090506000805b8251811015611dce57600f6000848381518110611d5757611d56612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611dbb578180611db7906128ba565b9250505b8080611dc6906128ba565b915050611d37565b50600854811015611e18576008546040517f9dd75b3a000000000000000000000000000000000000000000000000000000008152600401611e0f9190612cf0565b60405180910390fd5b600b54600a81905550611e29611f3c565b5050565b6000806009805480602002602001604051908101604052809291908181526020018280548015611eb257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e68575b5050505050905060005b8151811015611f3057818181518110611ed857611ed7612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611f1d57600192505050611f37565b8080611f28906128ba565b915050611ebc565b5060009150505b919050565b6000600e60006101000a81548160ff02191690831515021790555060006009805480602002602001604051908101604052809291908181526020018280548015611fdb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611f91575b5050505050905060005b81518110156120e057600f600083838151811061200557612004612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156120cd576000600f600084848151811061207357612072612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b80806120d8906128ba565b915050611fe5565b5050565b6120ec612454565b73ffffffffffffffffffffffffffffffffffffffff1661210a6114e4565b73ffffffffffffffffffffffffffffffffffffffff1614612160576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215790612e42565b60405180910390fd5b565b6002600154036121a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219e90612eae565b60405180910390fd5b6002600181905550565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000601460006101000a81548160ff02191690831515021790555060006013819055506000600980548060200260200160405190810160405280929190818152602001828054801561232557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116122db575b5050505050905060005b815181101561242a576015600083838151811061234f5761234e612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612417576000601560008484815181106123bd576123bc612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8080612422906128ba565b91505061232f565b5050565b600160026009805490506124429190612b3f565b61244c919061296e565b600881905550565b600033905090565b8280548282559060005260206000209081019282156124d5579160200282015b828111156124d45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061247c565b5b5090506124e291906124e6565b5090565b5b808211156124ff5760008160009055506001016124e7565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061255a8261252f565b9050919050565b61256a8161254f565b82525050565b600061257c8383612561565b60208301905092915050565b6000602082019050919050565b60006125a082612503565b6125aa818561250e565b93506125b58361251f565b8060005b838110156125e65781516125cd8882612570565b97506125d883612588565b9250506001810190506125b9565b5085935050505092915050565b6000602082019050818103600083015261260d8184612595565b905092915050565b6000819050919050565b61262881612615565b82525050565b6000602082019050612643600083018461261f565b92915050565b600080fd5b6126578161254f565b811461266257600080fd5b50565b6000813590506126748161264e565b92915050565b6000602082840312156126905761268f612649565b5b600061269e84828501612665565b91505092915050565b60008115159050919050565b6126bc816126a7565b82525050565b60006020820190506126d760008301846126b3565b92915050565b600080604083850312156126f4576126f3612649565b5b600061270285828601612665565b925050602061271385828601612665565b9150509250929050565b6127268161254f565b82525050565b6000602082019050612741600083018461271d565b92915050565b61275081612615565b811461275b57600080fd5b50565b60008135905061276d81612747565b92915050565b6000806040838503121561278a57612789612649565b5b600061279885828601612665565b92505060206127a98582860161275e565b9150509250929050565b6000602082840312156127c9576127c8612649565b5b60006127d78482850161275e565b91505092915050565b600082825260208201905092915050565b7f4f776e6572736869704d616e6167657200000000000000000000000000000000600082015250565b60006128276010836127e0565b9150612832826127f1565b602082019050919050565b600060408201905081810360008301526128568161281a565b9050612865602083018461271d565b92915050565b600060208201905081810360008301526128848161281a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006128c582612615565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128f7576128f661288b565b5b600182019050919050565b7f46756e64734d616e616765720000000000000000000000000000000000000000600082015250565b6000612938600c836127e0565b915061294382612902565b602082019050919050565b600060208201905081810360008301526129678161292b565b9050919050565b600061297982612615565b915061298483612615565b925082820190508082111561299c5761299b61288b565b5b92915050565b600060408201905081810360008301526129bb8161292b565b90506129ca602083018461271d565b92915050565b7f477561726469616e734d616e6167657200000000000000000000000000000000600082015250565b6000612a066010836127e0565b9150612a11826129d0565b602082019050919050565b60006020820190508181036000830152612a35816129f9565b9050919050565b6000612a4782612615565b9150612a5283612615565b9250828203905081811115612a6a57612a6961288b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612ad982612615565b9150612ae483612615565b9250828202612af281612615565b91508282048414831517612b0957612b0861288b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b4a82612615565b9150612b5583612615565b925082612b6557612b64612b10565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b612b8f81612b70565b8114612b9a57600080fd5b50565b600081519050612bac81612b86565b92915050565b6000819050919050565b612bc581612bb2565b8114612bd057600080fd5b50565b600081519050612be281612bbc565b92915050565b600081519050612bf781612747565b92915050565b600080600080600060a08688031215612c1957612c18612649565b5b6000612c2788828901612b9d565b9550506020612c3888828901612bd3565b9450506040612c4988828901612be8565b9350506060612c5a88828901612be8565b9250506080612c6b88828901612b9d565b9150509295509295909350565b6000612c8382612bb2565b9150612c8e83612bb2565b9250828202612c9c81612bb2565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615612cd457612cd361288b565b5b8282058414831517612ce957612ce861288b565b5b5092915050565b60006040820190508181036000830152612d098161292b565b9050612d18602083018461261f565b92915050565b600081905092915050565b50565b6000612d39600083612d1e565b9150612d4482612d29565b600082019050919050565b6000612d5a82612d2c565b9150819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612dc06026836127e0565b9150612dcb82612d64565b604082019050919050565b60006020820190508181036000830152612def81612db3565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612e2c6020836127e0565b9150612e3782612df6565b602082019050919050565b60006020820190508181036000830152612e5b81612e1f565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612e98601f836127e0565b9150612ea382612e62565b602082019050919050565b60006020820190508181036000830152612ec781612e8b565b905091905056fea2646970667358221220a19fbd80aa2c439528c2ea7c1537c1da91ed005f70b68b989efb0475c9d57bc064736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106102135760003560e01c80638da5cb5b11610118578063d0679d34116100a0578063e9316a211161006f578063e9316a2114610729578063ecfba8f514610754578063ef6492491461077f578063f2fde38b146107aa578063fb549788146107d35761021a565b8063d0679d3414610671578063d23773611461069a578063d660c45d146106c3578063daf3ce6a146106ec5761021a565b8063a526d83b116100e7578063a526d83b1461058a578063a85ae377146105b3578063af630ad3146105de578063b9e1c79814610609578063bbe4424a146106465761021a565b80638da5cb5b146104de5780638fc270b7146105095780639204f4771461053457806398d5fdca1461055f5761021a565b80632b28d0cc1161019b5780637388fe861161016a5780637388fe861461041f57806379f9c22f1461044a5780637d09f5dd1461047357806383b40cc91461049e5780638636068c146104c75761021a565b80632b28d0cc14610389578063673d4ec8146103b457806371404156146103df578063715018a6146104085761021a565b806314cbc763116101e257806314cbc763146102c657806315c1bc3e146102f157806324cb76041461031c57806326c886df146103475780632ad2ed901461035e5761021a565b80630665f04b1461021c57806306c4df831461024757806310a0cf171461027257806312065fe01461029b5761021a565b3661021a57005b005b34801561022857600080fd5b506102316107ea565b60405161023e91906125f3565b60405180910390f35b34801561025357600080fd5b5061025c610878565b604051610269919061262e565b60405180910390f35b34801561027e57600080fd5b506102996004803603810190610294919061267a565b610882565b005b3480156102a757600080fd5b506102b0610a61565b6040516102bd919061262e565b60405180910390f35b3480156102d257600080fd5b506102db610a69565b6040516102e8919061262e565b60405180910390f35b3480156102fd57600080fd5b50610306610a73565b604051610313919061262e565b60405180910390f35b34801561032857600080fd5b50610331610a7d565b60405161033e919061262e565b60405180910390f35b34801561035357600080fd5b5061035c610a87565b005b34801561036a57600080fd5b50610373610cab565b604051610380919061262e565b60405180910390f35b34801561039557600080fd5b5061039e610cb5565b6040516103ab919061262e565b60405180910390f35b3480156103c057600080fd5b506103c9610cbf565b6040516103d691906126c2565b60405180910390f35b3480156103eb57600080fd5b506104066004803603810190610401919061267a565b610cd6565b005b34801561041457600080fd5b5061041d610fd1565b005b34801561042b57600080fd5b50610434610fe5565b604051610441919061262e565b60405180910390f35b34801561045657600080fd5b50610471600480360381019061046c919061267a565b610fef565b005b34801561047f57600080fd5b5061048861103b565b604051610495919061262e565b60405180910390f35b3480156104aa57600080fd5b506104c560048036038101906104c091906126dd565b611045565b005b3480156104d357600080fd5b506104dc611269565b005b3480156104ea57600080fd5b506104f36114e4565b604051610500919061272c565b60405180910390f35b34801561051557600080fd5b5061051e61150d565b60405161052b91906126c2565b60405180910390f35b34801561054057600080fd5b50610549611524565b604051610556919061262e565b60405180910390f35b34801561056b57600080fd5b5061057461155e565b604051610581919061262e565b60405180910390f35b34801561059657600080fd5b506105b160048036038101906105ac919061267a565b61160f565b005b3480156105bf57600080fd5b506105c86116ee565b6040516105d5919061262e565b60405180910390f35b3480156105ea57600080fd5b506105f36116f8565b604051610600919061262e565b60405180910390f35b34801561061557600080fd5b50610630600480360381019061062b919061267a565b611702565b60405161063d91906126c2565b60405180910390f35b34801561065257600080fd5b5061065b611758565b604051610668919061262e565b60405180910390f35b34801561067d57600080fd5b5061069860048036038101906106939190612773565b611762565b005b3480156106a657600080fd5b506106c160048036038101906106bc91906127b3565b6118b7565b005b3480156106cf57600080fd5b506106ea60048036038101906106e5919061267a565b611930565b005b3480156106f857600080fd5b50610713600480360381019061070e919061267a565b611a8a565b60405161072091906126c2565b60405180910390f35b34801561073557600080fd5b5061073e611ae0565b60405161074b919061262e565b60405180910390f35b34801561076057600080fd5b50610769611aea565b604051610776919061262e565b60405180910390f35b34801561078b57600080fd5b50610794611af4565b6040516107a1919061262e565b60405180910390f35b3480156107b657600080fd5b506107d160048036038101906107cc919061267a565b611b2c565b005b3480156107df57600080fd5b506107e8611baf565b005b6060600980548060200260200160405190810160405280929190818152602001828054801561086e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610824575b5050505050905090565b6000601154905090565b61088a6114e4565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108f957806040517fa4f2199f0000000000000000000000000000000000000000000000000000000081526004016108f0919061283d565b60405180910390fd5b600060098054905011610941576040517fe9e10a640000000000000000000000000000000000000000000000000000000081526004016109389061286b565b60405180910390fd5b61094a33611e2d565b61098b57336040517f8e8bbab9000000000000000000000000000000000000000000000000000000008152600401610982919061283d565b60405180910390fd5b4260118190555080601460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060136000815480929190610a3e906128ba565b91905055506001601460006101000a81548160ff02191690831515021790555050565b600047905090565b6000600654905090565b6000600a54905090565b6000600854905090565b600060098054905011610acf576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610ac69061294e565b60405180910390fd5b600e60009054906101000a900460ff16610b1e576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401610b159061294e565b60405180910390fd5b600d54600c54610b2e919061296e565b421115610b7857610b3d611f3c565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401610b6f9061294e565b60405180910390fd5b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610c0757336040517f40b28742000000000000000000000000000000000000000000000000000000008152600401610bfe91906129a2565b60405180910390fd5b610c1033611e2d565b610c5157336040517f8e8bbab9000000000000000000000000000000000000000000000000000000008152600401610c4891906129a2565b60405180910390fd5b6001600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b6000600754905090565b6000601254905090565b6000601460009054906101000a900460ff16905090565b610cde6120e4565b610ce6612162565b600654600754610cf6919061296e565b421015610d38576040517f2ab71fd6000000000000000000000000000000000000000000000000000000008152600401610d2f90612a1c565b60405180910390fd5b600060098054905011610d80576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610d7790612a1c565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015610e0457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610dba575b50505050509050600060018251610e1b9190612a3c565b67ffffffffffffffff811115610e3457610e33612a70565b5b604051908082528060200260200182016040528015610e625781602001602082028036833780820191505090505b50905060008060005b8451811015610f5d578573ffffffffffffffffffffffffffffffffffffffff16858281518110610e9e57610e9d612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610eca5760019150610f4a565b83518114610f4957848181518110610ee557610ee4612a9f565b5b6020026020010151848481518110610f0057610eff612a9f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610f45906128ba565b9350505b5b8080610f55906128ba565b915050610e6b565b508015610f87578260099080519060200190610f7a92919061245c565b5042600781905550610fc2565b6040517f47637222000000000000000000000000000000000000000000000000000000008152600401610fb990612a1c565b60405180910390fd5b50505050610fce6121b1565b50565b610fd96120e4565b610fe360006121ba565b565b6000600354905090565b610ff76120e4565b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600c54905090565b61104d6120e4565b611055612162565b600454600554611065919061296e565b4210156110a7576040517f0e7f7d1500000000000000000000000000000000000000000000000000000000815260040161109e90612a1c565b60405180910390fd5b6000600980548060200260200160405190810160405280929190818152602001828054801561112b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116110e1575b505050505090506000805b82518110156111f6578473ffffffffffffffffffffffffffffffffffffffff1683828151811061116957611168612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036111e35760019150838382815181106111a4576111a3612a9f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506111f6565b80806111ee906128ba565b915050611136565b50801561122057816009908051906020019061121392919061245c565b504260058190555061125b565b6040517f4763722200000000000000000000000000000000000000000000000000000000815260040161125290612a1c565b60405180910390fd5b50506112656121b1565b5050565b6000600980549050116112b1576040517fe9e10a640000000000000000000000000000000000000000000000000000000081526004016112a89061286b565b60405180910390fd5b601460009054906101000a900460ff16611300576040517f7bd1f7a20000000000000000000000000000000000000000000000000000000081526004016112f79061286b565b60405180910390fd5b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561138f57336040517f40b28742000000000000000000000000000000000000000000000000000000008152600401611386919061283d565b60405180910390fd5b60125460115461139f919061296e565b4211156113e9576113ae61227e565b6040517f5130ce4e0000000000000000000000000000000000000000000000000000000081526004016113e09061286b565b60405180910390fd5b6113f233611e2d565b61143357336040517f8e8bbab900000000000000000000000000000000000000000000000000000000815260040161142a919061283d565b60405180910390fd5b6001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506013600081548092919061149e906128ba565b9190505550600854601354106114e2576114d9601460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121ba565b6114e161227e565b5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600e60009054906101000a900460ff16905090565b60008061152f61155e565b90506000670de0b6b3a7640000600a548361154a9190612ace565b6115549190612b3f565b9050809250505090565b600080601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156115ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f29190612bfd565b5050509150506402540be400816116099190612c78565b91505090565b6116176120e4565b61161f612162565b60025460035461162f919061296e565b421015611671576040517fdd49edf800000000000000000000000000000000000000000000000000000000815260040161166890612a1c565b60405180910390fd5b6009819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003819055506116e361242e565b6116eb6121b1565b50565b6000600254905090565b6000600d54905090565b6000601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000601354905090565b61176a6120e4565b611772612162565b600081116117b757806040517fc816f5c80000000000000000000000000000000000000000000000000000000081526004016117ae9190612cf0565b60405180910390fd5b600a548111156117fe57806040517fd8dde22d0000000000000000000000000000000000000000000000000000000081526004016117f59190612cf0565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161182490612d4f565b60006040518083038185875af1925050503d8060008114611861576040519150601f19603f3d011682016040523d82523d6000602084013e611866565b606091505b50509050806118aa576040517f5b0ecddc0000000000000000000000000000000000000000000000000000000081526004016118a19061294e565b60405180910390fd5b506118b36121b1565b5050565b6118bf6120e4565b6000811161190457806040517f60fe2e4f0000000000000000000000000000000000000000000000000000000081526004016118fb9190612cf0565b60405180910390fd5b42600c8190555080600b819055506001600e60006101000a81548160ff02191690831515021790555050565b6119386120e4565b611940612162565b60004790506000811161198a57806040517f25ba08f50000000000000000000000000000000000000000000000000000000081526004016119819190612cf0565b60405180910390fd5b600a548111156119d157806040517fd8dde22d0000000000000000000000000000000000000000000000000000000081526004016119c89190612cf0565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516119f790612d4f565b60006040518083038185875af1925050503d8060008114611a34576040519150601f19603f3d011682016040523d82523d6000602084013e611a39565b606091505b5050905080611a7d576040517f5b0ecddc000000000000000000000000000000000000000000000000000000008152600401611a749061294e565b60405180910390fd5b5050611a876121b1565b50565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600554905090565b6000600454905090565b600080611aff61155e565b90506000670de0b6b3a76400004783611b189190612ace565b611b229190612b3f565b9050809250505090565b611b346120e4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9a90612dd6565b60405180910390fd5b611bac816121ba565b50565b611bb76120e4565b600060098054905011611bff576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401611bf69061294e565b60405180910390fd5b600e60009054906101000a900460ff16611c4e576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401611c459061294e565b60405180910390fd5b600d54600c54611c5e919061296e565b421115611ca857611c6d611f3c565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401611c9f9061294e565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015611d2c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611ce2575b505050505090506000805b8251811015611dce57600f6000848381518110611d5757611d56612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611dbb578180611db7906128ba565b9250505b8080611dc6906128ba565b915050611d37565b50600854811015611e18576008546040517f9dd75b3a000000000000000000000000000000000000000000000000000000008152600401611e0f9190612cf0565b60405180910390fd5b600b54600a81905550611e29611f3c565b5050565b6000806009805480602002602001604051908101604052809291908181526020018280548015611eb257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e68575b5050505050905060005b8151811015611f3057818181518110611ed857611ed7612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611f1d57600192505050611f37565b8080611f28906128ba565b915050611ebc565b5060009150505b919050565b6000600e60006101000a81548160ff02191690831515021790555060006009805480602002602001604051908101604052809291908181526020018280548015611fdb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611f91575b5050505050905060005b81518110156120e057600f600083838151811061200557612004612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156120cd576000600f600084848151811061207357612072612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b80806120d8906128ba565b915050611fe5565b5050565b6120ec612454565b73ffffffffffffffffffffffffffffffffffffffff1661210a6114e4565b73ffffffffffffffffffffffffffffffffffffffff1614612160576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215790612e42565b60405180910390fd5b565b6002600154036121a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219e90612eae565b60405180910390fd5b6002600181905550565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000601460006101000a81548160ff02191690831515021790555060006013819055506000600980548060200260200160405190810160405280929190818152602001828054801561232557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116122db575b5050505050905060005b815181101561242a576015600083838151811061234f5761234e612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612417576000601560008484815181106123bd576123bc612a9f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8080612422906128ba565b91505061232f565b5050565b600160026009805490506124429190612b3f565b61244c919061296e565b600881905550565b600033905090565b8280548282559060005260206000209081019282156124d5579160200282015b828111156124d45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061247c565b5b5090506124e291906124e6565b5090565b5b808211156124ff5760008160009055506001016124e7565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061255a8261252f565b9050919050565b61256a8161254f565b82525050565b600061257c8383612561565b60208301905092915050565b6000602082019050919050565b60006125a082612503565b6125aa818561250e565b93506125b58361251f565b8060005b838110156125e65781516125cd8882612570565b97506125d883612588565b9250506001810190506125b9565b5085935050505092915050565b6000602082019050818103600083015261260d8184612595565b905092915050565b6000819050919050565b61262881612615565b82525050565b6000602082019050612643600083018461261f565b92915050565b600080fd5b6126578161254f565b811461266257600080fd5b50565b6000813590506126748161264e565b92915050565b6000602082840312156126905761268f612649565b5b600061269e84828501612665565b91505092915050565b60008115159050919050565b6126bc816126a7565b82525050565b60006020820190506126d760008301846126b3565b92915050565b600080604083850312156126f4576126f3612649565b5b600061270285828601612665565b925050602061271385828601612665565b9150509250929050565b6127268161254f565b82525050565b6000602082019050612741600083018461271d565b92915050565b61275081612615565b811461275b57600080fd5b50565b60008135905061276d81612747565b92915050565b6000806040838503121561278a57612789612649565b5b600061279885828601612665565b92505060206127a98582860161275e565b9150509250929050565b6000602082840312156127c9576127c8612649565b5b60006127d78482850161275e565b91505092915050565b600082825260208201905092915050565b7f4f776e6572736869704d616e6167657200000000000000000000000000000000600082015250565b60006128276010836127e0565b9150612832826127f1565b602082019050919050565b600060408201905081810360008301526128568161281a565b9050612865602083018461271d565b92915050565b600060208201905081810360008301526128848161281a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006128c582612615565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128f7576128f661288b565b5b600182019050919050565b7f46756e64734d616e616765720000000000000000000000000000000000000000600082015250565b6000612938600c836127e0565b915061294382612902565b602082019050919050565b600060208201905081810360008301526129678161292b565b9050919050565b600061297982612615565b915061298483612615565b925082820190508082111561299c5761299b61288b565b5b92915050565b600060408201905081810360008301526129bb8161292b565b90506129ca602083018461271d565b92915050565b7f477561726469616e734d616e6167657200000000000000000000000000000000600082015250565b6000612a066010836127e0565b9150612a11826129d0565b602082019050919050565b60006020820190508181036000830152612a35816129f9565b9050919050565b6000612a4782612615565b9150612a5283612615565b9250828203905081811115612a6a57612a6961288b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612ad982612615565b9150612ae483612615565b9250828202612af281612615565b91508282048414831517612b0957612b0861288b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b4a82612615565b9150612b5583612615565b925082612b6557612b64612b10565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b612b8f81612b70565b8114612b9a57600080fd5b50565b600081519050612bac81612b86565b92915050565b6000819050919050565b612bc581612bb2565b8114612bd057600080fd5b50565b600081519050612be281612bbc565b92915050565b600081519050612bf781612747565b92915050565b600080600080600060a08688031215612c1957612c18612649565b5b6000612c2788828901612b9d565b9550506020612c3888828901612bd3565b9450506040612c4988828901612be8565b9350506060612c5a88828901612be8565b9250506080612c6b88828901612b9d565b9150509295509295909350565b6000612c8382612bb2565b9150612c8e83612bb2565b9250828202612c9c81612bb2565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615612cd457612cd361288b565b5b8282058414831517612ce957612ce861288b565b5b5092915050565b60006040820190508181036000830152612d098161292b565b9050612d18602083018461261f565b92915050565b600081905092915050565b50565b6000612d39600083612d1e565b9150612d4482612d29565b600082019050919050565b6000612d5a82612d2c565b9150819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612dc06026836127e0565b9150612dcb82612d64565b604082019050919050565b60006020820190508181036000830152612def81612db3565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612e2c6020836127e0565b9150612e3782612df6565b602082019050919050565b60006020820190508181036000830152612e5b81612e1f565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612e98601f836127e0565b9150612ea382612e62565b602082019050919050565b60006020820190508181036000830152612ec781612e8b565b905091905056fea2646970667358221220a19fbd80aa2c439528c2ea7c1537c1da91ed005f70b68b989efb0475c9d57bc064736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 169,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 891,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "addGuardianDelay",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 893,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianAddTime",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 895,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "changeGuardianDelay",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 897,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianChangeTime",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 899,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "removeGuardianDelay",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 901,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianRemovalTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 903,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "requiredConfirmations",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 906,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "guardians",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 336,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "dailyTransferLimit",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 338,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "tempDailyTransferLimit",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 340,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastDailyTransferUpdateRequestTime",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 342,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "dailyTransferLimitUpdateConfirmationTime",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 344,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isDailyTransferLimitUpdateRequested",
        "offset": 0,
        "slot": "14",
        "type": "t_bool"
      },
      {
        "astId": 348,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isConfirmedByGuardian",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 351,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "priceFeed",
        "offset": 0,
        "slot": "16",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 1295,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastOwnerUpdateRequestTime",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 1297,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "ownerUpdateConfirmationTime",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 1299,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "noOfConfirmations",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 1301,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isOwnerUpdateRequested",
        "offset": 0,
        "slot": "20",
        "type": "t_bool"
      },
      {
        "astId": 1303,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "tempAddress",
        "offset": 1,
        "slot": "20",
        "type": "t_address"
      },
      {
        "astId": 1307,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isOwnershipConfimedByGuardian",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}