{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Error__AddressAlreadyAnOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Error__AddressNotFoundAsGuardian",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "Error__AlreadyConfirmedByGuardian",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Error__BalanceIsZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyAddAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyChangeAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyRemoveAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Error__DailyTransferLimitExceed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__GuardianDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__GuardiansListIsEmpty",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Error__InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "Error__InvalidLimit",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__RequestTimeExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "confirmations",
          "type": "uint256"
        }
      ],
      "name": "Error__RequiredConfirmationsNotMet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__TransactionFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__UpdateNotRequested",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__UpdateNotRequestedByOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "addGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "changeGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmAndUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmDailyTransferLimitRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmUpdateOwnerRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChangeGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimitUpdateConfirmationTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimitUpdateRequestStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "getGuardianConfirmationStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGuardians",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIsOwnerUpdateRequested",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "getIsOwnershipConfimedByGuardian",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastDailyTransferUpdateRequestTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianAddTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianChangeTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianRemovalTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastOwnerUpdateRequestTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNoOfConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwnerUpdateConfirmationTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRemoveGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRequiredConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "removeGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "requestToUpdateDailyTransferLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwnerAddress",
          "type": "address"
        }
      ],
      "name": "requestToUpdateOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sendAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "updateETHUSDPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x110251d4cf55832333c52348e80ff356d41b27429441867e41de8dd8779fd7e3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "2839393",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000100000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000001000000000002000000000000000000020000000000000000000000000000000000000000000000000800000000000000000",
    "blockHash": "0xc09403a611f78f24176db49296d33c884b18d7a7a36d01aaa26d616c212ddbf0",
    "transactionHash": "0x110251d4cf55832333c52348e80ff356d41b27429441867e41de8dd8779fd7e3",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0x110251d4cf55832333c52348e80ff356d41b27429441867e41de8dd8779fd7e3",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xc09403a611f78f24176db49296d33c884b18d7a7a36d01aaa26d616c212ddbf0"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "2839393",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "3af017cd0628e40bbbc6714008e5477d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Error__AddressAlreadyAnOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Error__AddressNotFoundAsGuardian\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"Error__AlreadyConfirmedByGuardian\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Error__BalanceIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyAddAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyChangeAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyRemoveAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Error__DailyTransferLimitExceed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__GuardianDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__GuardiansListIsEmpty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Error__InvalidAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"Error__InvalidLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__RequestTimeExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"confirmations\",\"type\":\"uint256\"}],\"name\":\"Error__RequiredConfirmationsNotMet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__TransactionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__UpdateNotRequested\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__UpdateNotRequestedByOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"addGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"changeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmAndUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmDailyTransferLimitRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmUpdateOwnerRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChangeGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimitUpdateConfirmationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimitUpdateRequestStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"getGuardianConfirmationStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGuardians\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIsOwnerUpdateRequested\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"getIsOwnershipConfimedByGuardian\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastDailyTransferUpdateRequestTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianAddTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianChangeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianRemovalTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastOwnerUpdateRequestTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNoOfConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerUpdateConfirmationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemoveGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequiredConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"removeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"requestToUpdateDailyTransferLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwnerAddress\",\"type\":\"address\"}],\"name\":\"requestToUpdateOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sendAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"updateETHUSDPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Guardian.sol\":\"Guardian\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nerror Error__AddressAlreadyAnOwner(string location, address addr);\\nerror Error__GuardiansListIsEmpty(string location);\\nerror Error__AddressNotFoundAsGuardian(string location, address addr);\\nerror Error__UpdateNotRequested(string location);\\nerror Error__AlreadyConfirmedByGuardian(string location, address guardian);\\nerror Error__RequestTimeExpired(string location);\\nerror Error__InvalidAmount(string location, uint amount);\\nerror Error__DailyTransferLimitExceed(string location, uint amount);\\nerror Error__TransactionFailed(string location);\\nerror Error__BalanceIsZero(string location, uint balance);\\nerror Error__InvalidLimit(string location, uint256 limit);\\nerror Error__UpdateNotRequestedByOwner(string location);\\nerror Error__RequiredConfirmationsNotMet(\\n    string location,\\n    uint256 confirmations\\n);\\nerror Error__InvalidGuardiansList(string location, address[] addressesList);\\nerror Error__CanOnlyChangeAfterDelayPeriod(string location);\\nerror Error__GuardianDoesNotExist(string location);\\nerror Error__CanOnlyRemoveAfterDelayPeriod(string location);\\nerror Error__CanOnlyAddAfterDelayPeriod(string location);\\n\",\"keccak256\":\"0x9e7e43a4f27803f4f23f66e6fdbe62120abfaf774ff9d1f9095b0bd10af8f6a5\",\"license\":\"MIT\"},\"contracts/FundsManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./GuardiansManager.sol\\\";\\nimport \\\"./Errors.sol\\\";\\n\\ncontract FundsManager is GuardiansManager {\\n    // * STATE VARIABLES\\n    uint256 private dailyTransferLimit;\\n    uint256 private tempDailyTransferLimit;\\n    uint256 private lastDailyTransferUpdateRequestTime;\\n    uint256 private dailyTransferLimitUpdateConfirmationTime;\\n\\n    bool private isDailyTransferLimitUpdateRequested;\\n\\n    mapping(address => bool) private isConfirmedByGuardian;\\n\\n    AggregatorV3Interface private priceFeed;\\n\\n    // * FUNCTIONS\\n    constructor(address _priceFeed) {\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n        dailyTransferLimit = 1 ether;\\n        dailyTransferLimitUpdateConfirmationTime = 1 days;\\n    }\\n\\n    // * FUNCTIONS - EXTERNAL\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n\\n    function send(address to, uint amount) external onlyOwner nonReentrant {\\n        if (amount <= 0) {\\n            revert Error__InvalidAmount(\\\"FundsManager\\\", amount);\\n        }\\n\\n        if (amount > dailyTransferLimit) {\\n            revert Error__DailyTransferLimitExceed(\\\"FundsManager\\\", amount);\\n        }\\n\\n        (bool success, ) = to.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Error__TransactionFailed(\\\"FundsManager\\\");\\n        }\\n    }\\n\\n    function sendAll(address to) external onlyOwner nonReentrant {\\n        uint256 balance = address(this).balance;\\n\\n        if (balance <= 0) {\\n            revert Error__BalanceIsZero(\\\"FundsManager\\\", balance);\\n        }\\n\\n        if (balance > dailyTransferLimit) {\\n            revert Error__DailyTransferLimitExceed(\\\"FundsManager\\\", balance);\\n        }\\n\\n        (bool success, ) = to.call{value: balance}(\\\"\\\");\\n        if (!success) {\\n            revert Error__TransactionFailed(\\\"FundsManager\\\");\\n        }\\n    }\\n\\n    function requestToUpdateDailyTransferLimit(\\n        uint256 limit\\n    ) external onlyOwner {\\n        if (limit <= 0) {\\n            revert Error__InvalidLimit(\\\"FundsManager\\\", limit);\\n        }\\n\\n        lastDailyTransferUpdateRequestTime = block.timestamp;\\n        tempDailyTransferLimit = limit;\\n        isDailyTransferLimitUpdateRequested = true;\\n    }\\n\\n    function confirmDailyTransferLimitRequest() external {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"FundsManager\\\");\\n        }\\n\\n        if (!isDailyTransferLimitUpdateRequested) {\\n            revert Error__UpdateNotRequestedByOwner(\\\"FundsManager\\\");\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastDailyTransferUpdateRequestTime +\\n                dailyTransferLimitUpdateConfirmationTime\\n        ) {\\n            resetDailyTransferLimitVariables();\\n            revert Error__RequestTimeExpired(\\\"FundsManager\\\");\\n        }\\n\\n        if (isConfirmedByGuardian[msg.sender]) {\\n            revert Error__AlreadyConfirmedByGuardian(\\n                \\\"FundsManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\\"FundsManager\\\", msg.sender);\\n        }\\n\\n        isConfirmedByGuardian[msg.sender] = true;\\n    }\\n\\n    function confirmAndUpdate() external onlyOwner {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"FundsManager\\\");\\n        }\\n\\n        if (!isDailyTransferLimitUpdateRequested) {\\n            revert Error__UpdateNotRequestedByOwner(\\\"FundsManager\\\");\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastDailyTransferUpdateRequestTime +\\n                dailyTransferLimitUpdateConfirmationTime\\n        ) {\\n            resetDailyTransferLimitVariables();\\n            revert Error__RequestTimeExpired(\\\"FundsManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n        uint256 counter = 0;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isConfirmedByGuardian[guardiansCopy[i]]) {\\n                counter++;\\n            }\\n        }\\n\\n        if (counter < requiredConfirmations) {\\n            revert Error__RequiredConfirmationsNotMet(\\n                \\\"FundsManager\\\",\\n                requiredConfirmations\\n            );\\n        }\\n\\n        dailyTransferLimit = tempDailyTransferLimit;\\n\\n        resetDailyTransferLimitVariables();\\n    }\\n\\n    function updateETHUSDPriceFeed(address _priceFeed) external onlyOwner {\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n    }\\n\\n    // * FUNCTIONS - PRIVATE\\n\\n    function resetDailyTransferLimitVariables() private {\\n        isDailyTransferLimitUpdateRequested = false;\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isConfirmedByGuardian[guardiansCopy[i]]) {\\n                isConfirmedByGuardian[guardiansCopy[i]] = false;\\n            }\\n        }\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - EXTERNAL\\n\\n    function getPrice() external view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getDailyTransferLimit() external view returns (uint256) {\\n        return dailyTransferLimit;\\n    }\\n\\n    function getRequiredConfirmations() external view returns (uint256) {\\n        return requiredConfirmations;\\n    }\\n\\n    function getDailyTransferLimitUpdateRequestStatus()\\n        external\\n        view\\n        returns (bool)\\n    {\\n        return isDailyTransferLimitUpdateRequested;\\n    }\\n\\n    function getDailyTransferLimitUpdateConfirmationTime()\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return dailyTransferLimitUpdateConfirmationTime;\\n    }\\n\\n    function getLastDailyTransferUpdateRequestTime()\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return lastDailyTransferUpdateRequestTime;\\n    }\\n\\n    function getGuardianConfirmationStatus(\\n        address guardian\\n    ) external view returns (bool) {\\n        return isConfirmedByGuardian[guardian];\\n    }\\n}\\n\",\"keccak256\":\"0x31a79a12eca7e40f0def2b7f3a41c8f984441e689247821c8cb96bf02983463a\",\"license\":\"MIT\"},\"contracts/Guardian.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"./FundsManager.sol\\\";\\nimport \\\"./OwnershipManager.sol\\\";\\n\\ncontract Guardian is FundsManager, OwnershipManager {\\n    constructor(address priceFeed) FundsManager(priceFeed) {}\\n}\\n\",\"keccak256\":\"0x2bd1fb648be989241428c7de5e79d13252100f1a219a55624c3142724be6fb90\",\"license\":\"MIT\"},\"contracts/GuardiansManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./Errors.sol\\\";\\n\\ncontract GuardiansManager is Ownable, ReentrancyGuard {\\n    // * STATE VARIABLES\\n    uint256 private addGuardianDelay;\\n    uint256 private lastGuardianAddTime;\\n    uint256 private changeGuardianDelay;\\n    uint256 private lastGuardianChangeTime;\\n    uint256 private removeGuardianDelay;\\n    uint256 private lastGuardianRemovalTime;\\n\\n    uint256 internal requiredConfirmations;\\n\\n    address[] internal guardians;\\n\\n    // * FUNCTIONS\\n    constructor() {\\n        lastGuardianAddTime = block.timestamp;\\n        addGuardianDelay = 1 days;\\n        lastGuardianChangeTime = block.timestamp;\\n        changeGuardianDelay = 1 days;\\n        lastGuardianRemovalTime = block.timestamp;\\n        removeGuardianDelay = 3 days;\\n    }\\n\\n    // * FUNCTIONS - EXTERNAL\\n    function addGuardian(address guardian) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianAddTime + addGuardianDelay) {\\n            revert Error__CanOnlyAddAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        guardians.push(guardian);\\n        lastGuardianAddTime = block.timestamp;\\n        updateRequiredConfirmations();\\n    }\\n\\n    function changeGuardian(\\n        address from,\\n        address to\\n    ) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianChangeTime + changeGuardianDelay) {\\n            revert Error__CanOnlyChangeAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        // * using this variable so we should not update the state variable if address does not exits.\\n        bool exist = false;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (guardiansCopy[i] == from) {\\n                exist = true;\\n                guardiansCopy[i] = to;\\n                break;\\n            }\\n        }\\n\\n        if (exist) {\\n            guardians = guardiansCopy;\\n            lastGuardianChangeTime = block.timestamp;\\n        } else {\\n            revert Error__GuardianDoesNotExist(\\\"GuardiansManager\\\");\\n        }\\n    }\\n\\n    function removeGuardian(address guardian) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianRemovalTime + removeGuardianDelay) {\\n            revert Error__CanOnlyRemoveAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"GuardiansManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        // * for local arrays we need to declare the size at the initialization time.\\n        // * we are removing the 1 guardian so the updated array will be less than 1 the length of existing array.\\n        address[] memory updatedCopy = new address[](guardiansCopy.length - 1);\\n        uint256 index = 0;\\n\\n        // * using this variable so we should not update the state variable if address does not exits.\\n        bool exist = false;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (guardiansCopy[i] == guardian) {\\n                exist = true;\\n                continue;\\n            } else if (i != updatedCopy.length) {\\n                updatedCopy[index] = guardiansCopy[i];\\n                index++;\\n            }\\n        }\\n\\n        if (exist) {\\n            guardians = updatedCopy;\\n            lastGuardianRemovalTime = block.timestamp;\\n        } else {\\n            revert Error__GuardianDoesNotExist(\\\"GuardiansManager\\\");\\n        }\\n    }\\n\\n    // * FUNCTION - PRIVATE\\n\\n    function updateRequiredConfirmations() private {\\n        requiredConfirmations = (guardians.length / 2) + 1;\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - EXTERNAL\\n\\n    function getLastGuardianAddTime() external view returns (uint256) {\\n        return lastGuardianAddTime;\\n    }\\n\\n    function getAddGuardianDelay() external view returns (uint256) {\\n        return addGuardianDelay;\\n    }\\n\\n    function getLastGuardianChangeTime() external view returns (uint256) {\\n        return lastGuardianChangeTime;\\n    }\\n\\n    function getChangeGuardianDelay() external view returns (uint256) {\\n        return changeGuardianDelay;\\n    }\\n\\n    function getLastGuardianRemovalTime() external view returns (uint256) {\\n        return lastGuardianRemovalTime;\\n    }\\n\\n    function getRemoveGuardianDelay() external view returns (uint256) {\\n        return removeGuardianDelay;\\n    }\\n\\n    function getGuardians() external view returns (address[] memory) {\\n        return guardians;\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - INTERNAL\\n\\n    function doesGuardianExist(address caller) internal view returns (bool) {\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (caller == guardiansCopy[i]) {\\n                return true;\\n            }\\n        }\\n\\n        return false;\\n    }\\n}\\n\",\"keccak256\":\"0xb0a544360367aa821cff0249b5cbdf6dd164365569223ce097f7d7a22ab4fc81\",\"license\":\"MIT\"},\"contracts/OwnershipManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport \\\"./GuardiansManager.sol\\\";\\nimport \\\"./Errors.sol\\\";\\n\\npragma solidity ^0.8.17;\\n\\ncontract OwnershipManager is GuardiansManager {\\n    // * STATE VARIABLES\\n    uint256 private lastOwnerUpdateRequestTime;\\n    uint256 private ownerUpdateConfirmationTime;\\n    uint256 private noOfConfirmations;\\n\\n    bool private isOwnerUpdateRequested;\\n\\n    address private tempAddress;\\n\\n    mapping(address => bool) private isOwnershipConfimedByGuardian;\\n\\n    // * FUNCTIONS\\n    constructor() {\\n        ownerUpdateConfirmationTime = 2 hours;\\n    }\\n\\n    function requestToUpdateOwner(address newOwnerAddress) external {\\n        if (newOwnerAddress == owner()) {\\n            revert Error__AddressAlreadyAnOwner(\\n                \\\"OwnershipManager\\\",\\n                newOwnerAddress\\n            );\\n        }\\n\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        lastOwnerUpdateRequestTime = block.timestamp;\\n        tempAddress = newOwnerAddress;\\n        isOwnershipConfimedByGuardian[msg.sender] = true;\\n        noOfConfirmations++;\\n        isOwnerUpdateRequested = true;\\n    }\\n\\n    function confirmUpdateOwnerRequest() external {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!isOwnerUpdateRequested) {\\n            revert Error__UpdateNotRequested(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (isOwnershipConfimedByGuardian[msg.sender]) {\\n            revert Error__AlreadyConfirmedByGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastOwnerUpdateRequestTime + ownerUpdateConfirmationTime\\n        ) {\\n            resetOwnershipVariables();\\n            revert Error__RequestTimeExpired(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        isOwnershipConfimedByGuardian[msg.sender] = true;\\n        noOfConfirmations++;\\n\\n        if (noOfConfirmations >= requiredConfirmations) {\\n            // * Ownable internal function without access restriction.\\n            _transferOwnership(tempAddress);\\n            resetOwnershipVariables();\\n        }\\n    }\\n\\n    // * FUNCTION - PRIVATE\\n    function resetOwnershipVariables() private {\\n        isOwnerUpdateRequested = false;\\n        noOfConfirmations = 0;\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isOwnershipConfimedByGuardian[guardiansCopy[i]]) {\\n                isOwnershipConfimedByGuardian[guardiansCopy[i]] = false;\\n            }\\n        }\\n    }\\n\\n    // * FUNCTION - VIEW & PURE\\n    function getIsOwnerUpdateRequested() external view returns (bool) {\\n        return isOwnerUpdateRequested;\\n    }\\n\\n    function getIsOwnershipConfimedByGuardian(\\n        address guardian\\n    ) external view returns (bool) {\\n        return isOwnershipConfimedByGuardian[guardian];\\n    }\\n\\n    function getLastOwnerUpdateRequestTime() external view returns (uint256) {\\n        return lastOwnerUpdateRequestTime;\\n    }\\n\\n    function getOwnerUpdateConfirmationTime() external view returns (uint256) {\\n        return ownerUpdateConfirmationTime;\\n    }\\n\\n    function getNoOfConfirmations() external view returns (uint256) {\\n        return noOfConfirmations;\\n    }\\n}\\n\",\"keccak256\":\"0x2bbfb872f9cd3c9be6056af97f6ad528630162cade95289ab63c88d937323b95\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200301b3803806200301b833981810160405281019062000037919062000233565b80620000586200004c620000fd60201b60201c565b6200010560201b60201c565b6001808190555042600381905550620151806002819055504260058190555062015180600481905550426007819055506203f48060068190555080601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a7640000600a8190555062015180600d8190555050611c206012819055505062000265565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fb82620001ce565b9050919050565b6200020d81620001ee565b81146200021957600080fd5b50565b6000815190506200022d8162000202565b92915050565b6000602082840312156200024c576200024b620001c9565b5b60006200025c848285016200021c565b91505092915050565b612da680620002756000396000f3fe6080604052600436106101f25760003560e01c80638636068c1161010d578063bbe4424a116100a0578063daf3ce6a1161006f578063daf3ce6a14610675578063e9316a21146106b2578063ecfba8f5146106dd578063f2fde38b14610708578063fb54978814610731576101f9565b8063bbe4424a146105cf578063d0679d34146105fa578063d237736114610623578063d660c45d1461064c576101f9565b8063a526d83b116100dc578063a526d83b14610513578063a85ae3771461053c578063af630ad314610567578063b9e1c79814610592576101f9565b80638636068c1461047b5780638da5cb5b146104925780638fc270b7146104bd57806398d5fdca146104e8576101f9565b80632b28d0cc116101855780637388fe86116101545780637388fe86146103d357806379f9c22f146103fe5780637d09f5dd1461042757806383b40cc914610452576101f9565b80632b28d0cc1461033d578063673d4ec8146103685780637140415614610393578063715018a6146103bc576101f9565b806315c1bc3e116101c157806315c1bc3e146102a557806324cb7604146102d057806326c886df146102fb5780632ad2ed9014610312576101f9565b80630665f04b146101fb57806306c4df831461022657806310a0cf171461025157806314cbc7631461027a576101f9565b366101f957005b005b34801561020757600080fd5b50610210610748565b60405161021d91906124d7565b60405180910390f35b34801561023257600080fd5b5061023b6107d6565b6040516102489190612512565b60405180910390f35b34801561025d57600080fd5b506102786004803603810190610273919061255e565b6107e0565b005b34801561028657600080fd5b5061028f6109bf565b60405161029c9190612512565b60405180910390f35b3480156102b157600080fd5b506102ba6109c9565b6040516102c79190612512565b60405180910390f35b3480156102dc57600080fd5b506102e56109d3565b6040516102f29190612512565b60405180910390f35b34801561030757600080fd5b506103106109dd565b005b34801561031e57600080fd5b50610327610c01565b6040516103349190612512565b60405180910390f35b34801561034957600080fd5b50610352610c0b565b60405161035f9190612512565b60405180910390f35b34801561037457600080fd5b5061037d610c15565b60405161038a91906125a6565b60405180910390f35b34801561039f57600080fd5b506103ba60048036038101906103b5919061255e565b610c2c565b005b3480156103c857600080fd5b506103d1610f27565b005b3480156103df57600080fd5b506103e8610f3b565b6040516103f59190612512565b60405180910390f35b34801561040a57600080fd5b506104256004803603810190610420919061255e565b610f45565b005b34801561043357600080fd5b5061043c610f91565b6040516104499190612512565b60405180910390f35b34801561045e57600080fd5b50610479600480360381019061047491906125c1565b610f9b565b005b34801561048757600080fd5b506104906111bf565b005b34801561049e57600080fd5b506104a761143a565b6040516104b49190612610565b60405180910390f35b3480156104c957600080fd5b506104d2611463565b6040516104df91906125a6565b60405180910390f35b3480156104f457600080fd5b506104fd61147a565b60405161050a9190612512565b60405180910390f35b34801561051f57600080fd5b5061053a6004803603810190610535919061255e565b61152b565b005b34801561054857600080fd5b5061055161160a565b60405161055e9190612512565b60405180910390f35b34801561057357600080fd5b5061057c611614565b6040516105899190612512565b60405180910390f35b34801561059e57600080fd5b506105b960048036038101906105b4919061255e565b61161e565b6040516105c691906125a6565b60405180910390f35b3480156105db57600080fd5b506105e4611674565b6040516105f19190612512565b60405180910390f35b34801561060657600080fd5b50610621600480360381019061061c9190612657565b61167e565b005b34801561062f57600080fd5b5061064a60048036038101906106459190612697565b6117d3565b005b34801561065857600080fd5b50610673600480360381019061066e919061255e565b61184c565b005b34801561068157600080fd5b5061069c6004803603810190610697919061255e565b6119a6565b6040516106a991906125a6565b60405180910390f35b3480156106be57600080fd5b506106c76119fc565b6040516106d49190612512565b60405180910390f35b3480156106e957600080fd5b506106f2611a06565b6040516106ff9190612512565b60405180910390f35b34801561071457600080fd5b5061072f600480360381019061072a919061255e565b611a10565b005b34801561073d57600080fd5b50610746611a93565b005b606060098054806020026020016040519081016040528092919081815260200182805480156107cc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610782575b5050505050905090565b6000601154905090565b6107e861143a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361085757806040517fa4f2199f00000000000000000000000000000000000000000000000000000000815260040161084e9190612721565b60405180910390fd5b60006009805490501161089f576040517fe9e10a640000000000000000000000000000000000000000000000000000000081526004016108969061274f565b60405180910390fd5b6108a833611d11565b6108e957336040517f8e8bbab90000000000000000000000000000000000000000000000000000000081526004016108e09190612721565b60405180910390fd5b4260118190555080601460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506013600081548092919061099c9061279e565b91905055506001601460006101000a81548160ff02191690831515021790555050565b6000600654905090565b6000600a54905090565b6000600854905090565b600060098054905011610a25576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610a1c90612832565b60405180910390fd5b600e60009054906101000a900460ff16610a74576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401610a6b90612832565b60405180910390fd5b600d54600c54610a849190612852565b421115610ace57610a93611e20565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401610ac590612832565b60405180910390fd5b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b5d57336040517f40b28742000000000000000000000000000000000000000000000000000000008152600401610b549190612886565b60405180910390fd5b610b6633611d11565b610ba757336040517f8e8bbab9000000000000000000000000000000000000000000000000000000008152600401610b9e9190612886565b60405180910390fd5b6001600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b6000600754905090565b6000601254905090565b6000601460009054906101000a900460ff16905090565b610c34611fc8565b610c3c612046565b600654600754610c4c9190612852565b421015610c8e576040517f2ab71fd6000000000000000000000000000000000000000000000000000000008152600401610c8590612900565b60405180910390fd5b600060098054905011610cd6576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610ccd90612900565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015610d5a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d10575b50505050509050600060018251610d719190612920565b67ffffffffffffffff811115610d8a57610d89612954565b5b604051908082528060200260200182016040528015610db85781602001602082028036833780820191505090505b50905060008060005b8451811015610eb3578573ffffffffffffffffffffffffffffffffffffffff16858281518110610df457610df3612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610e205760019150610ea0565b83518114610e9f57848181518110610e3b57610e3a612983565b5b6020026020010151848481518110610e5657610e55612983565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610e9b9061279e565b9350505b5b8080610eab9061279e565b915050610dc1565b508015610edd578260099080519060200190610ed0929190612340565b5042600781905550610f18565b6040517f47637222000000000000000000000000000000000000000000000000000000008152600401610f0f90612900565b60405180910390fd5b50505050610f24612095565b50565b610f2f611fc8565b610f39600061209e565b565b6000600354905090565b610f4d611fc8565b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600c54905090565b610fa3611fc8565b610fab612046565b600454600554610fbb9190612852565b421015610ffd576040517f0e7f7d15000000000000000000000000000000000000000000000000000000008152600401610ff490612900565b60405180910390fd5b6000600980548060200260200160405190810160405280929190818152602001828054801561108157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611037575b505050505090506000805b825181101561114c578473ffffffffffffffffffffffffffffffffffffffff168382815181106110bf576110be612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036111395760019150838382815181106110fa576110f9612983565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061114c565b80806111449061279e565b91505061108c565b508015611176578160099080519060200190611169929190612340565b50426005819055506111b1565b6040517f476372220000000000000000000000000000000000000000000000000000000081526004016111a890612900565b60405180910390fd5b50506111bb612095565b5050565b600060098054905011611207576040517fe9e10a640000000000000000000000000000000000000000000000000000000081526004016111fe9061274f565b60405180910390fd5b601460009054906101000a900460ff16611256576040517f7bd1f7a200000000000000000000000000000000000000000000000000000000815260040161124d9061274f565b60405180910390fd5b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156112e557336040517f40b287420000000000000000000000000000000000000000000000000000000081526004016112dc9190612721565b60405180910390fd5b6012546011546112f59190612852565b42111561133f57611304612162565b6040517f5130ce4e0000000000000000000000000000000000000000000000000000000081526004016113369061274f565b60405180910390fd5b61134833611d11565b61138957336040517f8e8bbab90000000000000000000000000000000000000000000000000000000081526004016113809190612721565b60405180910390fd5b6001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550601360008154809291906113f49061279e565b9190505550600854601354106114385761142f601460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661209e565b611437612162565b5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600e60009054906101000a900460ff16905090565b600080601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156114ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150e9190612a3f565b5050509150506402540be400816115259190612aba565b91505090565b611533611fc8565b61153b612046565b60025460035461154b9190612852565b42101561158d576040517fdd49edf800000000000000000000000000000000000000000000000000000000815260040161158490612900565b60405180910390fd5b6009819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003819055506115ff612312565b611607612095565b50565b6000600254905090565b6000600d54905090565b6000601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000601354905090565b611686611fc8565b61168e612046565b600081116116d357806040517fc816f5c80000000000000000000000000000000000000000000000000000000081526004016116ca9190612b32565b60405180910390fd5b600a5481111561171a57806040517fd8dde22d0000000000000000000000000000000000000000000000000000000081526004016117119190612b32565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161174090612b91565b60006040518083038185875af1925050503d806000811461177d576040519150601f19603f3d011682016040523d82523d6000602084013e611782565b606091505b50509050806117c6576040517f5b0ecddc0000000000000000000000000000000000000000000000000000000081526004016117bd90612832565b60405180910390fd5b506117cf612095565b5050565b6117db611fc8565b6000811161182057806040517f60fe2e4f0000000000000000000000000000000000000000000000000000000081526004016118179190612b32565b60405180910390fd5b42600c8190555080600b819055506001600e60006101000a81548160ff02191690831515021790555050565b611854611fc8565b61185c612046565b6000479050600081116118a657806040517f25ba08f500000000000000000000000000000000000000000000000000000000815260040161189d9190612b32565b60405180910390fd5b600a548111156118ed57806040517fd8dde22d0000000000000000000000000000000000000000000000000000000081526004016118e49190612b32565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161191390612b91565b60006040518083038185875af1925050503d8060008114611950576040519150601f19603f3d011682016040523d82523d6000602084013e611955565b606091505b5050905080611999576040517f5b0ecddc00000000000000000000000000000000000000000000000000000000815260040161199090612832565b60405180910390fd5b50506119a3612095565b50565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600554905090565b6000600454905090565b611a18611fc8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7e90612c18565b60405180910390fd5b611a908161209e565b50565b611a9b611fc8565b600060098054905011611ae3576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401611ada90612832565b60405180910390fd5b600e60009054906101000a900460ff16611b32576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401611b2990612832565b60405180910390fd5b600d54600c54611b429190612852565b421115611b8c57611b51611e20565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401611b8390612832565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015611c1057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611bc6575b505050505090506000805b8251811015611cb257600f6000848381518110611c3b57611c3a612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611c9f578180611c9b9061279e565b9250505b8080611caa9061279e565b915050611c1b565b50600854811015611cfc576008546040517f9dd75b3a000000000000000000000000000000000000000000000000000000008152600401611cf39190612b32565b60405180910390fd5b600b54600a81905550611d0d611e20565b5050565b6000806009805480602002602001604051908101604052809291908181526020018280548015611d9657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d4c575b5050505050905060005b8151811015611e1457818181518110611dbc57611dbb612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611e0157600192505050611e1b565b8080611e0c9061279e565b915050611da0565b5060009150505b919050565b6000600e60006101000a81548160ff02191690831515021790555060006009805480602002602001604051908101604052809291908181526020018280548015611ebf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e75575b5050505050905060005b8151811015611fc457600f6000838381518110611ee957611ee8612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611fb1576000600f6000848481518110611f5757611f56612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8080611fbc9061279e565b915050611ec9565b5050565b611fd0612338565b73ffffffffffffffffffffffffffffffffffffffff16611fee61143a565b73ffffffffffffffffffffffffffffffffffffffff1614612044576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161203b90612c84565b60405180910390fd5b565b60026001540361208b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161208290612cf0565b60405180910390fd5b6002600181905550565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000601460006101000a81548160ff02191690831515021790555060006013819055506000600980548060200260200160405190810160405280929190818152602001828054801561220957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116121bf575b5050505050905060005b815181101561230e576015600083838151811061223357612232612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156122fb576000601560008484815181106122a1576122a0612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b80806123069061279e565b915050612213565b5050565b600160026009805490506123269190612d3f565b6123309190612852565b600881905550565b600033905090565b8280548282559060005260206000209081019282156123b9579160200282015b828111156123b85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612360565b5b5090506123c691906123ca565b5090565b5b808211156123e35760008160009055506001016123cb565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061243e82612413565b9050919050565b61244e81612433565b82525050565b60006124608383612445565b60208301905092915050565b6000602082019050919050565b6000612484826123e7565b61248e81856123f2565b935061249983612403565b8060005b838110156124ca5781516124b18882612454565b97506124bc8361246c565b92505060018101905061249d565b5085935050505092915050565b600060208201905081810360008301526124f18184612479565b905092915050565b6000819050919050565b61250c816124f9565b82525050565b60006020820190506125276000830184612503565b92915050565b600080fd5b61253b81612433565b811461254657600080fd5b50565b60008135905061255881612532565b92915050565b6000602082840312156125745761257361252d565b5b600061258284828501612549565b91505092915050565b60008115159050919050565b6125a08161258b565b82525050565b60006020820190506125bb6000830184612597565b92915050565b600080604083850312156125d8576125d761252d565b5b60006125e685828601612549565b92505060206125f785828601612549565b9150509250929050565b61260a81612433565b82525050565b60006020820190506126256000830184612601565b92915050565b612634816124f9565b811461263f57600080fd5b50565b6000813590506126518161262b565b92915050565b6000806040838503121561266e5761266d61252d565b5b600061267c85828601612549565b925050602061268d85828601612642565b9150509250929050565b6000602082840312156126ad576126ac61252d565b5b60006126bb84828501612642565b91505092915050565b600082825260208201905092915050565b7f4f776e6572736869704d616e6167657200000000000000000000000000000000600082015250565b600061270b6010836126c4565b9150612716826126d5565b602082019050919050565b6000604082019050818103600083015261273a816126fe565b90506127496020830184612601565b92915050565b60006020820190508181036000830152612768816126fe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006127a9826124f9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036127db576127da61276f565b5b600182019050919050565b7f46756e64734d616e616765720000000000000000000000000000000000000000600082015250565b600061281c600c836126c4565b9150612827826127e6565b602082019050919050565b6000602082019050818103600083015261284b8161280f565b9050919050565b600061285d826124f9565b9150612868836124f9565b92508282019050808211156128805761287f61276f565b5b92915050565b6000604082019050818103600083015261289f8161280f565b90506128ae6020830184612601565b92915050565b7f477561726469616e734d616e6167657200000000000000000000000000000000600082015250565b60006128ea6010836126c4565b91506128f5826128b4565b602082019050919050565b60006020820190508181036000830152612919816128dd565b9050919050565b600061292b826124f9565b9150612936836124f9565b925082820390508181111561294e5761294d61276f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600069ffffffffffffffffffff82169050919050565b6129d1816129b2565b81146129dc57600080fd5b50565b6000815190506129ee816129c8565b92915050565b6000819050919050565b612a07816129f4565b8114612a1257600080fd5b50565b600081519050612a24816129fe565b92915050565b600081519050612a398161262b565b92915050565b600080600080600060a08688031215612a5b57612a5a61252d565b5b6000612a69888289016129df565b9550506020612a7a88828901612a15565b9450506040612a8b88828901612a2a565b9350506060612a9c88828901612a2a565b9250506080612aad888289016129df565b9150509295509295909350565b6000612ac5826129f4565b9150612ad0836129f4565b9250828202612ade816129f4565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615612b1657612b1561276f565b5b8282058414831517612b2b57612b2a61276f565b5b5092915050565b60006040820190508181036000830152612b4b8161280f565b9050612b5a6020830184612503565b92915050565b600081905092915050565b50565b6000612b7b600083612b60565b9150612b8682612b6b565b600082019050919050565b6000612b9c82612b6e565b9150819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612c026026836126c4565b9150612c0d82612ba6565b604082019050919050565b60006020820190508181036000830152612c3181612bf5565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612c6e6020836126c4565b9150612c7982612c38565b602082019050919050565b60006020820190508181036000830152612c9d81612c61565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612cda601f836126c4565b9150612ce582612ca4565b602082019050919050565b60006020820190508181036000830152612d0981612ccd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612d4a826124f9565b9150612d55836124f9565b925082612d6557612d64612d10565b5b82820490509291505056fea2646970667358221220d41fbf2f1861875f49d6d97e8c2395be9ca4febd951cc00d3c12fe4ee8be5b5964736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106101f25760003560e01c80638636068c1161010d578063bbe4424a116100a0578063daf3ce6a1161006f578063daf3ce6a14610675578063e9316a21146106b2578063ecfba8f5146106dd578063f2fde38b14610708578063fb54978814610731576101f9565b8063bbe4424a146105cf578063d0679d34146105fa578063d237736114610623578063d660c45d1461064c576101f9565b8063a526d83b116100dc578063a526d83b14610513578063a85ae3771461053c578063af630ad314610567578063b9e1c79814610592576101f9565b80638636068c1461047b5780638da5cb5b146104925780638fc270b7146104bd57806398d5fdca146104e8576101f9565b80632b28d0cc116101855780637388fe86116101545780637388fe86146103d357806379f9c22f146103fe5780637d09f5dd1461042757806383b40cc914610452576101f9565b80632b28d0cc1461033d578063673d4ec8146103685780637140415614610393578063715018a6146103bc576101f9565b806315c1bc3e116101c157806315c1bc3e146102a557806324cb7604146102d057806326c886df146102fb5780632ad2ed9014610312576101f9565b80630665f04b146101fb57806306c4df831461022657806310a0cf171461025157806314cbc7631461027a576101f9565b366101f957005b005b34801561020757600080fd5b50610210610748565b60405161021d91906124d7565b60405180910390f35b34801561023257600080fd5b5061023b6107d6565b6040516102489190612512565b60405180910390f35b34801561025d57600080fd5b506102786004803603810190610273919061255e565b6107e0565b005b34801561028657600080fd5b5061028f6109bf565b60405161029c9190612512565b60405180910390f35b3480156102b157600080fd5b506102ba6109c9565b6040516102c79190612512565b60405180910390f35b3480156102dc57600080fd5b506102e56109d3565b6040516102f29190612512565b60405180910390f35b34801561030757600080fd5b506103106109dd565b005b34801561031e57600080fd5b50610327610c01565b6040516103349190612512565b60405180910390f35b34801561034957600080fd5b50610352610c0b565b60405161035f9190612512565b60405180910390f35b34801561037457600080fd5b5061037d610c15565b60405161038a91906125a6565b60405180910390f35b34801561039f57600080fd5b506103ba60048036038101906103b5919061255e565b610c2c565b005b3480156103c857600080fd5b506103d1610f27565b005b3480156103df57600080fd5b506103e8610f3b565b6040516103f59190612512565b60405180910390f35b34801561040a57600080fd5b506104256004803603810190610420919061255e565b610f45565b005b34801561043357600080fd5b5061043c610f91565b6040516104499190612512565b60405180910390f35b34801561045e57600080fd5b50610479600480360381019061047491906125c1565b610f9b565b005b34801561048757600080fd5b506104906111bf565b005b34801561049e57600080fd5b506104a761143a565b6040516104b49190612610565b60405180910390f35b3480156104c957600080fd5b506104d2611463565b6040516104df91906125a6565b60405180910390f35b3480156104f457600080fd5b506104fd61147a565b60405161050a9190612512565b60405180910390f35b34801561051f57600080fd5b5061053a6004803603810190610535919061255e565b61152b565b005b34801561054857600080fd5b5061055161160a565b60405161055e9190612512565b60405180910390f35b34801561057357600080fd5b5061057c611614565b6040516105899190612512565b60405180910390f35b34801561059e57600080fd5b506105b960048036038101906105b4919061255e565b61161e565b6040516105c691906125a6565b60405180910390f35b3480156105db57600080fd5b506105e4611674565b6040516105f19190612512565b60405180910390f35b34801561060657600080fd5b50610621600480360381019061061c9190612657565b61167e565b005b34801561062f57600080fd5b5061064a60048036038101906106459190612697565b6117d3565b005b34801561065857600080fd5b50610673600480360381019061066e919061255e565b61184c565b005b34801561068157600080fd5b5061069c6004803603810190610697919061255e565b6119a6565b6040516106a991906125a6565b60405180910390f35b3480156106be57600080fd5b506106c76119fc565b6040516106d49190612512565b60405180910390f35b3480156106e957600080fd5b506106f2611a06565b6040516106ff9190612512565b60405180910390f35b34801561071457600080fd5b5061072f600480360381019061072a919061255e565b611a10565b005b34801561073d57600080fd5b50610746611a93565b005b606060098054806020026020016040519081016040528092919081815260200182805480156107cc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610782575b5050505050905090565b6000601154905090565b6107e861143a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361085757806040517fa4f2199f00000000000000000000000000000000000000000000000000000000815260040161084e9190612721565b60405180910390fd5b60006009805490501161089f576040517fe9e10a640000000000000000000000000000000000000000000000000000000081526004016108969061274f565b60405180910390fd5b6108a833611d11565b6108e957336040517f8e8bbab90000000000000000000000000000000000000000000000000000000081526004016108e09190612721565b60405180910390fd5b4260118190555080601460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506013600081548092919061099c9061279e565b91905055506001601460006101000a81548160ff02191690831515021790555050565b6000600654905090565b6000600a54905090565b6000600854905090565b600060098054905011610a25576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610a1c90612832565b60405180910390fd5b600e60009054906101000a900460ff16610a74576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401610a6b90612832565b60405180910390fd5b600d54600c54610a849190612852565b421115610ace57610a93611e20565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401610ac590612832565b60405180910390fd5b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b5d57336040517f40b28742000000000000000000000000000000000000000000000000000000008152600401610b549190612886565b60405180910390fd5b610b6633611d11565b610ba757336040517f8e8bbab9000000000000000000000000000000000000000000000000000000008152600401610b9e9190612886565b60405180910390fd5b6001600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b6000600754905090565b6000601254905090565b6000601460009054906101000a900460ff16905090565b610c34611fc8565b610c3c612046565b600654600754610c4c9190612852565b421015610c8e576040517f2ab71fd6000000000000000000000000000000000000000000000000000000008152600401610c8590612900565b60405180910390fd5b600060098054905011610cd6576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610ccd90612900565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015610d5a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d10575b50505050509050600060018251610d719190612920565b67ffffffffffffffff811115610d8a57610d89612954565b5b604051908082528060200260200182016040528015610db85781602001602082028036833780820191505090505b50905060008060005b8451811015610eb3578573ffffffffffffffffffffffffffffffffffffffff16858281518110610df457610df3612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610e205760019150610ea0565b83518114610e9f57848181518110610e3b57610e3a612983565b5b6020026020010151848481518110610e5657610e55612983565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610e9b9061279e565b9350505b5b8080610eab9061279e565b915050610dc1565b508015610edd578260099080519060200190610ed0929190612340565b5042600781905550610f18565b6040517f47637222000000000000000000000000000000000000000000000000000000008152600401610f0f90612900565b60405180910390fd5b50505050610f24612095565b50565b610f2f611fc8565b610f39600061209e565b565b6000600354905090565b610f4d611fc8565b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600c54905090565b610fa3611fc8565b610fab612046565b600454600554610fbb9190612852565b421015610ffd576040517f0e7f7d15000000000000000000000000000000000000000000000000000000008152600401610ff490612900565b60405180910390fd5b6000600980548060200260200160405190810160405280929190818152602001828054801561108157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611037575b505050505090506000805b825181101561114c578473ffffffffffffffffffffffffffffffffffffffff168382815181106110bf576110be612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036111395760019150838382815181106110fa576110f9612983565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061114c565b80806111449061279e565b91505061108c565b508015611176578160099080519060200190611169929190612340565b50426005819055506111b1565b6040517f476372220000000000000000000000000000000000000000000000000000000081526004016111a890612900565b60405180910390fd5b50506111bb612095565b5050565b600060098054905011611207576040517fe9e10a640000000000000000000000000000000000000000000000000000000081526004016111fe9061274f565b60405180910390fd5b601460009054906101000a900460ff16611256576040517f7bd1f7a200000000000000000000000000000000000000000000000000000000815260040161124d9061274f565b60405180910390fd5b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156112e557336040517f40b287420000000000000000000000000000000000000000000000000000000081526004016112dc9190612721565b60405180910390fd5b6012546011546112f59190612852565b42111561133f57611304612162565b6040517f5130ce4e0000000000000000000000000000000000000000000000000000000081526004016113369061274f565b60405180910390fd5b61134833611d11565b61138957336040517f8e8bbab90000000000000000000000000000000000000000000000000000000081526004016113809190612721565b60405180910390fd5b6001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550601360008154809291906113f49061279e565b9190505550600854601354106114385761142f601460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661209e565b611437612162565b5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600e60009054906101000a900460ff16905090565b600080601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156114ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150e9190612a3f565b5050509150506402540be400816115259190612aba565b91505090565b611533611fc8565b61153b612046565b60025460035461154b9190612852565b42101561158d576040517fdd49edf800000000000000000000000000000000000000000000000000000000815260040161158490612900565b60405180910390fd5b6009819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003819055506115ff612312565b611607612095565b50565b6000600254905090565b6000600d54905090565b6000601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000601354905090565b611686611fc8565b61168e612046565b600081116116d357806040517fc816f5c80000000000000000000000000000000000000000000000000000000081526004016116ca9190612b32565b60405180910390fd5b600a5481111561171a57806040517fd8dde22d0000000000000000000000000000000000000000000000000000000081526004016117119190612b32565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161174090612b91565b60006040518083038185875af1925050503d806000811461177d576040519150601f19603f3d011682016040523d82523d6000602084013e611782565b606091505b50509050806117c6576040517f5b0ecddc0000000000000000000000000000000000000000000000000000000081526004016117bd90612832565b60405180910390fd5b506117cf612095565b5050565b6117db611fc8565b6000811161182057806040517f60fe2e4f0000000000000000000000000000000000000000000000000000000081526004016118179190612b32565b60405180910390fd5b42600c8190555080600b819055506001600e60006101000a81548160ff02191690831515021790555050565b611854611fc8565b61185c612046565b6000479050600081116118a657806040517f25ba08f500000000000000000000000000000000000000000000000000000000815260040161189d9190612b32565b60405180910390fd5b600a548111156118ed57806040517fd8dde22d0000000000000000000000000000000000000000000000000000000081526004016118e49190612b32565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161191390612b91565b60006040518083038185875af1925050503d8060008114611950576040519150601f19603f3d011682016040523d82523d6000602084013e611955565b606091505b5050905080611999576040517f5b0ecddc00000000000000000000000000000000000000000000000000000000815260040161199090612832565b60405180910390fd5b50506119a3612095565b50565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600554905090565b6000600454905090565b611a18611fc8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7e90612c18565b60405180910390fd5b611a908161209e565b50565b611a9b611fc8565b600060098054905011611ae3576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401611ada90612832565b60405180910390fd5b600e60009054906101000a900460ff16611b32576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401611b2990612832565b60405180910390fd5b600d54600c54611b429190612852565b421115611b8c57611b51611e20565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401611b8390612832565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015611c1057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611bc6575b505050505090506000805b8251811015611cb257600f6000848381518110611c3b57611c3a612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611c9f578180611c9b9061279e565b9250505b8080611caa9061279e565b915050611c1b565b50600854811015611cfc576008546040517f9dd75b3a000000000000000000000000000000000000000000000000000000008152600401611cf39190612b32565b60405180910390fd5b600b54600a81905550611d0d611e20565b5050565b6000806009805480602002602001604051908101604052809291908181526020018280548015611d9657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d4c575b5050505050905060005b8151811015611e1457818181518110611dbc57611dbb612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611e0157600192505050611e1b565b8080611e0c9061279e565b915050611da0565b5060009150505b919050565b6000600e60006101000a81548160ff02191690831515021790555060006009805480602002602001604051908101604052809291908181526020018280548015611ebf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e75575b5050505050905060005b8151811015611fc457600f6000838381518110611ee957611ee8612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611fb1576000600f6000848481518110611f5757611f56612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8080611fbc9061279e565b915050611ec9565b5050565b611fd0612338565b73ffffffffffffffffffffffffffffffffffffffff16611fee61143a565b73ffffffffffffffffffffffffffffffffffffffff1614612044576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161203b90612c84565b60405180910390fd5b565b60026001540361208b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161208290612cf0565b60405180910390fd5b6002600181905550565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000601460006101000a81548160ff02191690831515021790555060006013819055506000600980548060200260200160405190810160405280929190818152602001828054801561220957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116121bf575b5050505050905060005b815181101561230e576015600083838151811061223357612232612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156122fb576000601560008484815181106122a1576122a0612983565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b80806123069061279e565b915050612213565b5050565b600160026009805490506123269190612d3f565b6123309190612852565b600881905550565b600033905090565b8280548282559060005260206000209081019282156123b9579160200282015b828111156123b85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612360565b5b5090506123c691906123ca565b5090565b5b808211156123e35760008160009055506001016123cb565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061243e82612413565b9050919050565b61244e81612433565b82525050565b60006124608383612445565b60208301905092915050565b6000602082019050919050565b6000612484826123e7565b61248e81856123f2565b935061249983612403565b8060005b838110156124ca5781516124b18882612454565b97506124bc8361246c565b92505060018101905061249d565b5085935050505092915050565b600060208201905081810360008301526124f18184612479565b905092915050565b6000819050919050565b61250c816124f9565b82525050565b60006020820190506125276000830184612503565b92915050565b600080fd5b61253b81612433565b811461254657600080fd5b50565b60008135905061255881612532565b92915050565b6000602082840312156125745761257361252d565b5b600061258284828501612549565b91505092915050565b60008115159050919050565b6125a08161258b565b82525050565b60006020820190506125bb6000830184612597565b92915050565b600080604083850312156125d8576125d761252d565b5b60006125e685828601612549565b92505060206125f785828601612549565b9150509250929050565b61260a81612433565b82525050565b60006020820190506126256000830184612601565b92915050565b612634816124f9565b811461263f57600080fd5b50565b6000813590506126518161262b565b92915050565b6000806040838503121561266e5761266d61252d565b5b600061267c85828601612549565b925050602061268d85828601612642565b9150509250929050565b6000602082840312156126ad576126ac61252d565b5b60006126bb84828501612642565b91505092915050565b600082825260208201905092915050565b7f4f776e6572736869704d616e6167657200000000000000000000000000000000600082015250565b600061270b6010836126c4565b9150612716826126d5565b602082019050919050565b6000604082019050818103600083015261273a816126fe565b90506127496020830184612601565b92915050565b60006020820190508181036000830152612768816126fe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006127a9826124f9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036127db576127da61276f565b5b600182019050919050565b7f46756e64734d616e616765720000000000000000000000000000000000000000600082015250565b600061281c600c836126c4565b9150612827826127e6565b602082019050919050565b6000602082019050818103600083015261284b8161280f565b9050919050565b600061285d826124f9565b9150612868836124f9565b92508282019050808211156128805761287f61276f565b5b92915050565b6000604082019050818103600083015261289f8161280f565b90506128ae6020830184612601565b92915050565b7f477561726469616e734d616e6167657200000000000000000000000000000000600082015250565b60006128ea6010836126c4565b91506128f5826128b4565b602082019050919050565b60006020820190508181036000830152612919816128dd565b9050919050565b600061292b826124f9565b9150612936836124f9565b925082820390508181111561294e5761294d61276f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600069ffffffffffffffffffff82169050919050565b6129d1816129b2565b81146129dc57600080fd5b50565b6000815190506129ee816129c8565b92915050565b6000819050919050565b612a07816129f4565b8114612a1257600080fd5b50565b600081519050612a24816129fe565b92915050565b600081519050612a398161262b565b92915050565b600080600080600060a08688031215612a5b57612a5a61252d565b5b6000612a69888289016129df565b9550506020612a7a88828901612a15565b9450506040612a8b88828901612a2a565b9350506060612a9c88828901612a2a565b9250506080612aad888289016129df565b9150509295509295909350565b6000612ac5826129f4565b9150612ad0836129f4565b9250828202612ade816129f4565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615612b1657612b1561276f565b5b8282058414831517612b2b57612b2a61276f565b5b5092915050565b60006040820190508181036000830152612b4b8161280f565b9050612b5a6020830184612503565b92915050565b600081905092915050565b50565b6000612b7b600083612b60565b9150612b8682612b6b565b600082019050919050565b6000612b9c82612b6e565b9150819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612c026026836126c4565b9150612c0d82612ba6565b604082019050919050565b60006020820190508181036000830152612c3181612bf5565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612c6e6020836126c4565b9150612c7982612c38565b602082019050919050565b60006020820190508181036000830152612c9d81612c61565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612cda601f836126c4565b9150612ce582612ca4565b602082019050919050565b60006020820190508181036000830152612d0981612ccd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612d4a826124f9565b9150612d55836124f9565b925082612d6557612d64612d10565b5b82820490509291505056fea2646970667358221220d41fbf2f1861875f49d6d97e8c2395be9ca4febd951cc00d3c12fe4ee8be5b5964736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 169,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 831,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "addGuardianDelay",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 833,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianAddTime",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 835,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "changeGuardianDelay",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 837,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianChangeTime",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 839,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "removeGuardianDelay",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 841,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianRemovalTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 843,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "requiredConfirmations",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 846,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "guardians",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 336,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "dailyTransferLimit",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 338,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "tempDailyTransferLimit",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 340,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastDailyTransferUpdateRequestTime",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 342,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "dailyTransferLimitUpdateConfirmationTime",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 344,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isDailyTransferLimitUpdateRequested",
        "offset": 0,
        "slot": "14",
        "type": "t_bool"
      },
      {
        "astId": 348,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isConfirmedByGuardian",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 351,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "priceFeed",
        "offset": 0,
        "slot": "16",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 1235,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastOwnerUpdateRequestTime",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 1237,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "ownerUpdateConfirmationTime",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 1239,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "noOfConfirmations",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 1241,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isOwnerUpdateRequested",
        "offset": 0,
        "slot": "20",
        "type": "t_bool"
      },
      {
        "astId": 1243,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "tempAddress",
        "offset": 1,
        "slot": "20",
        "type": "t_address"
      },
      {
        "astId": 1247,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isOwnershipConfimedByGuardian",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}