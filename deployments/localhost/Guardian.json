{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Error__AddressAlreadyAnOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Error__AddressNotFoundAsGuardian",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "Error__AlreadyConfirmedByGuardian",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Error__BalanceIsZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyAddAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyChangeAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyRemoveAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Error__DailyTransferLimitExceed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__GuardianDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__GuardiansListIsEmpty",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Error__InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "Error__InvalidLimit",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__RequestTimeExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "confirmations",
          "type": "uint256"
        }
      ],
      "name": "Error__RequiredConfirmationsNotMet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__TransactionFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__UpdateNotRequested",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__UpdateNotRequestedByOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "addGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "changeGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmAndUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmDailyTransferLimitRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmUpdateOwnerRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalanceInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChangeGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimitUpdateConfirmationTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimitUpdateRequestStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "getGuardianConfirmationStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGuardians",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIsOwnerUpdateRequested",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "getIsOwnershipConfimedByGuardian",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastDailyTransferUpdateRequestTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianAddTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianChangeTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianRemovalTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastOwnerUpdateRequestTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNoOfConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwnerUpdateConfirmationTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRemoveGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRequiredConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "removeGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "requestToUpdateDailyTransferLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwnerAddress",
          "type": "address"
        }
      ],
      "name": "requestToUpdateOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sendAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "updateETHUSDPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x29634a01a3e01c8a10bb735c416275f5d0f806ad7e0a95b35751cdc1fe445b2c",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "2879126",
    "logsBloom": "0x
    "blockHash": "0xf065de932ae165ddccc7371ead7d42f9a18cd6c0dde3a1656b9392a606da85e6",
    "transactionHash": "0x29634a01a3e01c8a10bb735c416275f5d0f806ad7e0a95b35751cdc1fe445b2c",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0x29634a01a3e01c8a10bb735c416275f5d0f806ad7e0a95b35751cdc1fe445b2c",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xf065de932ae165ddccc7371ead7d42f9a18cd6c0dde3a1656b9392a606da85e6"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "2879126",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "45909b4e166caf16d0495bac0c5ff60c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Error__AddressAlreadyAnOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Error__AddressNotFoundAsGuardian\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"Error__AlreadyConfirmedByGuardian\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Error__BalanceIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyAddAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyChangeAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyRemoveAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Error__DailyTransferLimitExceed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__GuardianDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__GuardiansListIsEmpty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Error__InvalidAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"Error__InvalidLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__RequestTimeExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"confirmations\",\"type\":\"uint256\"}],\"name\":\"Error__RequiredConfirmationsNotMet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__TransactionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__UpdateNotRequested\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__UpdateNotRequestedByOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"addGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"changeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmAndUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmDailyTransferLimitRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmUpdateOwnerRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChangeGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimitUpdateConfirmationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimitUpdateRequestStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"getGuardianConfirmationStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGuardians\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIsOwnerUpdateRequested\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"getIsOwnershipConfimedByGuardian\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastDailyTransferUpdateRequestTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianAddTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianChangeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianRemovalTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastOwnerUpdateRequestTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNoOfConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerUpdateConfirmationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemoveGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequiredConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"removeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"requestToUpdateDailyTransferLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwnerAddress\",\"type\":\"address\"}],\"name\":\"requestToUpdateOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sendAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"updateETHUSDPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Guardian.sol\":\"Guardian\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nerror Error__AddressAlreadyAnOwner(string location, address addr);\\nerror Error__GuardiansListIsEmpty(string location);\\nerror Error__AddressNotFoundAsGuardian(string location, address addr);\\nerror Error__UpdateNotRequested(string location);\\nerror Error__AlreadyConfirmedByGuardian(string location, address guardian);\\nerror Error__RequestTimeExpired(string location);\\nerror Error__InvalidAmount(string location, uint amount);\\nerror Error__DailyTransferLimitExceed(string location, uint amount);\\nerror Error__TransactionFailed(string location);\\nerror Error__BalanceIsZero(string location, uint balance);\\nerror Error__InvalidLimit(string location, uint256 limit);\\nerror Error__UpdateNotRequestedByOwner(string location);\\nerror Error__RequiredConfirmationsNotMet(\\n    string location,\\n    uint256 confirmations\\n);\\nerror Error__InvalidGuardiansList(string location, address[] addressesList);\\nerror Error__CanOnlyChangeAfterDelayPeriod(string location);\\nerror Error__GuardianDoesNotExist(string location);\\nerror Error__CanOnlyRemoveAfterDelayPeriod(string location);\\nerror Error__CanOnlyAddAfterDelayPeriod(string location);\\n\",\"keccak256\":\"0x9e7e43a4f27803f4f23f66e6fdbe62120abfaf774ff9d1f9095b0bd10af8f6a5\",\"license\":\"MIT\"},\"contracts/FundsManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./GuardiansManager.sol\\\";\\nimport \\\"./Errors.sol\\\";\\n\\ncontract FundsManager is GuardiansManager {\\n    // * STATE VARIABLES\\n    uint256 private dailyTransferLimit;\\n    uint256 private tempDailyTransferLimit;\\n    uint256 private lastDailyTransferUpdateRequestTime;\\n    uint256 private dailyTransferLimitUpdateConfirmationTime;\\n\\n    bool private isDailyTransferLimitUpdateRequested;\\n\\n    mapping(address => bool) private isConfirmedByGuardian;\\n\\n    AggregatorV3Interface private priceFeed;\\n\\n    // * FUNCTIONS\\n    constructor(address _priceFeed) {\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n        dailyTransferLimit = 1 ether;\\n        dailyTransferLimitUpdateConfirmationTime = 1 days;\\n    }\\n\\n    // * FUNCTIONS - EXTERNAL\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n\\n    function send(address to, uint amount) external onlyOwner nonReentrant {\\n        if (amount <= 0) {\\n            revert Error__InvalidAmount(\\\"FundsManager\\\", amount);\\n        }\\n\\n        if (amount > dailyTransferLimit) {\\n            revert Error__DailyTransferLimitExceed(\\\"FundsManager\\\", amount);\\n        }\\n\\n        (bool success, ) = to.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Error__TransactionFailed(\\\"FundsManager\\\");\\n        }\\n    }\\n\\n    function sendAll(address to) external onlyOwner nonReentrant {\\n        uint256 balance = address(this).balance;\\n\\n        if (balance <= 0) {\\n            revert Error__BalanceIsZero(\\\"FundsManager\\\", balance);\\n        }\\n\\n        if (balance > dailyTransferLimit) {\\n            revert Error__DailyTransferLimitExceed(\\\"FundsManager\\\", balance);\\n        }\\n\\n        (bool success, ) = to.call{value: balance}(\\\"\\\");\\n        if (!success) {\\n            revert Error__TransactionFailed(\\\"FundsManager\\\");\\n        }\\n    }\\n\\n    function requestToUpdateDailyTransferLimit(\\n        uint256 limit\\n    ) external onlyOwner {\\n        if (limit <= 0) {\\n            revert Error__InvalidLimit(\\\"FundsManager\\\", limit);\\n        }\\n\\n        lastDailyTransferUpdateRequestTime = block.timestamp;\\n        tempDailyTransferLimit = limit;\\n        isDailyTransferLimitUpdateRequested = true;\\n    }\\n\\n    function confirmDailyTransferLimitRequest() external {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"FundsManager\\\");\\n        }\\n\\n        if (!isDailyTransferLimitUpdateRequested) {\\n            revert Error__UpdateNotRequestedByOwner(\\\"FundsManager\\\");\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastDailyTransferUpdateRequestTime +\\n                dailyTransferLimitUpdateConfirmationTime\\n        ) {\\n            resetDailyTransferLimitVariables();\\n            revert Error__RequestTimeExpired(\\\"FundsManager\\\");\\n        }\\n\\n        if (isConfirmedByGuardian[msg.sender]) {\\n            revert Error__AlreadyConfirmedByGuardian(\\n                \\\"FundsManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\\"FundsManager\\\", msg.sender);\\n        }\\n\\n        isConfirmedByGuardian[msg.sender] = true;\\n    }\\n\\n    function confirmAndUpdate() external onlyOwner {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"FundsManager\\\");\\n        }\\n\\n        if (!isDailyTransferLimitUpdateRequested) {\\n            revert Error__UpdateNotRequestedByOwner(\\\"FundsManager\\\");\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastDailyTransferUpdateRequestTime +\\n                dailyTransferLimitUpdateConfirmationTime\\n        ) {\\n            resetDailyTransferLimitVariables();\\n            revert Error__RequestTimeExpired(\\\"FundsManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n        uint256 counter = 0;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isConfirmedByGuardian[guardiansCopy[i]]) {\\n                counter++;\\n            }\\n        }\\n\\n        if (counter < requiredConfirmations) {\\n            revert Error__RequiredConfirmationsNotMet(\\n                \\\"FundsManager\\\",\\n                requiredConfirmations\\n            );\\n        }\\n\\n        dailyTransferLimit = tempDailyTransferLimit;\\n\\n        resetDailyTransferLimitVariables();\\n    }\\n\\n    function updateETHUSDPriceFeed(address _priceFeed) external onlyOwner {\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n    }\\n\\n    // * FUNCTIONS - PRIVATE\\n\\n    function resetDailyTransferLimitVariables() private {\\n        isDailyTransferLimitUpdateRequested = false;\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isConfirmedByGuardian[guardiansCopy[i]]) {\\n                isConfirmedByGuardian[guardiansCopy[i]] = false;\\n            }\\n        }\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - EXTERNAL\\n\\n    function getBalance() external view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function getBalanceInUSD() external view returns (uint256) {\\n        uint256 ethPrice = getPrice();\\n        uint256 balanceInUSD = (ethPrice * address(this).balance) /\\n            1000000000000000000;\\n        return balanceInUSD;\\n    }\\n\\n    function getDailyTransferLimit() external view returns (uint256) {\\n        return dailyTransferLimit;\\n    }\\n\\n    function getRequiredConfirmations() external view returns (uint256) {\\n        return requiredConfirmations;\\n    }\\n\\n    function getDailyTransferLimitUpdateRequestStatus()\\n        external\\n        view\\n        returns (bool)\\n    {\\n        return isDailyTransferLimitUpdateRequested;\\n    }\\n\\n    function getDailyTransferLimitUpdateConfirmationTime()\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return dailyTransferLimitUpdateConfirmationTime;\\n    }\\n\\n    function getLastDailyTransferUpdateRequestTime()\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return lastDailyTransferUpdateRequestTime;\\n    }\\n\\n    function getGuardianConfirmationStatus(\\n        address guardian\\n    ) external view returns (bool) {\\n        return isConfirmedByGuardian[guardian];\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - PRIVATE\\n\\n    function getPrice() private view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n}\\n\",\"keccak256\":\"0x88b238443f69040d5c5e1a6ed7f9676751be1252979718ca876614c5d81957ae\",\"license\":\"MIT\"},\"contracts/Guardian.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"./FundsManager.sol\\\";\\nimport \\\"./OwnershipManager.sol\\\";\\n\\ncontract Guardian is FundsManager, OwnershipManager {\\n    constructor(address priceFeed) FundsManager(priceFeed) {}\\n}\\n\",\"keccak256\":\"0x2bd1fb648be989241428c7de5e79d13252100f1a219a55624c3142724be6fb90\",\"license\":\"MIT\"},\"contracts/GuardiansManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./Errors.sol\\\";\\n\\ncontract GuardiansManager is Ownable, ReentrancyGuard {\\n    // * STATE VARIABLES\\n    uint256 private addGuardianDelay;\\n    uint256 private lastGuardianAddTime;\\n    uint256 private changeGuardianDelay;\\n    uint256 private lastGuardianChangeTime;\\n    uint256 private removeGuardianDelay;\\n    uint256 private lastGuardianRemovalTime;\\n\\n    uint256 internal requiredConfirmations;\\n\\n    address[] internal guardians;\\n\\n    // * FUNCTIONS\\n    constructor() {\\n        lastGuardianAddTime = block.timestamp;\\n        addGuardianDelay = 1 days;\\n        lastGuardianChangeTime = block.timestamp;\\n        changeGuardianDelay = 1 days;\\n        lastGuardianRemovalTime = block.timestamp;\\n        removeGuardianDelay = 3 days;\\n    }\\n\\n    // * FUNCTIONS - EXTERNAL\\n    function addGuardian(address guardian) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianAddTime + addGuardianDelay) {\\n            revert Error__CanOnlyAddAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        guardians.push(guardian);\\n        lastGuardianAddTime = block.timestamp;\\n        updateRequiredConfirmations();\\n    }\\n\\n    function changeGuardian(\\n        address from,\\n        address to\\n    ) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianChangeTime + changeGuardianDelay) {\\n            revert Error__CanOnlyChangeAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        // * using this variable so we should not update the state variable if address does not exits.\\n        bool exist = false;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (guardiansCopy[i] == from) {\\n                exist = true;\\n                guardiansCopy[i] = to;\\n                break;\\n            }\\n        }\\n\\n        if (exist) {\\n            guardians = guardiansCopy;\\n            lastGuardianChangeTime = block.timestamp;\\n        } else {\\n            revert Error__GuardianDoesNotExist(\\\"GuardiansManager\\\");\\n        }\\n    }\\n\\n    function removeGuardian(address guardian) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianRemovalTime + removeGuardianDelay) {\\n            revert Error__CanOnlyRemoveAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"GuardiansManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        // * for local arrays we need to declare the size at the initialization time.\\n        // * we are removing the 1 guardian so the updated array will be less than 1 the length of existing array.\\n        address[] memory updatedCopy = new address[](guardiansCopy.length - 1);\\n        uint256 index = 0;\\n\\n        // * using this variable so we should not update the state variable if address does not exits.\\n        bool exist = false;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (guardiansCopy[i] == guardian) {\\n                exist = true;\\n                continue;\\n            } else if (i != updatedCopy.length) {\\n                updatedCopy[index] = guardiansCopy[i];\\n                index++;\\n            }\\n        }\\n\\n        if (exist) {\\n            guardians = updatedCopy;\\n            lastGuardianRemovalTime = block.timestamp;\\n        } else {\\n            revert Error__GuardianDoesNotExist(\\\"GuardiansManager\\\");\\n        }\\n    }\\n\\n    // * FUNCTION - PRIVATE\\n\\n    function updateRequiredConfirmations() private {\\n        requiredConfirmations = (guardians.length / 2) + 1;\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - EXTERNAL\\n\\n    function getLastGuardianAddTime() external view returns (uint256) {\\n        return lastGuardianAddTime;\\n    }\\n\\n    function getAddGuardianDelay() external view returns (uint256) {\\n        return addGuardianDelay;\\n    }\\n\\n    function getLastGuardianChangeTime() external view returns (uint256) {\\n        return lastGuardianChangeTime;\\n    }\\n\\n    function getChangeGuardianDelay() external view returns (uint256) {\\n        return changeGuardianDelay;\\n    }\\n\\n    function getLastGuardianRemovalTime() external view returns (uint256) {\\n        return lastGuardianRemovalTime;\\n    }\\n\\n    function getRemoveGuardianDelay() external view returns (uint256) {\\n        return removeGuardianDelay;\\n    }\\n\\n    function getGuardians() external view returns (address[] memory) {\\n        return guardians;\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - INTERNAL\\n\\n    function doesGuardianExist(address caller) internal view returns (bool) {\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (caller == guardiansCopy[i]) {\\n                return true;\\n            }\\n        }\\n\\n        return false;\\n    }\\n}\\n\",\"keccak256\":\"0xb0a544360367aa821cff0249b5cbdf6dd164365569223ce097f7d7a22ab4fc81\",\"license\":\"MIT\"},\"contracts/OwnershipManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport \\\"./GuardiansManager.sol\\\";\\nimport \\\"./Errors.sol\\\";\\n\\npragma solidity ^0.8.17;\\n\\ncontract OwnershipManager is GuardiansManager {\\n    // * STATE VARIABLES\\n    uint256 private lastOwnerUpdateRequestTime;\\n    uint256 private ownerUpdateConfirmationTime;\\n    uint256 private noOfConfirmations;\\n\\n    bool private isOwnerUpdateRequested;\\n\\n    address private tempAddress;\\n\\n    mapping(address => bool) private isOwnershipConfimedByGuardian;\\n\\n    // * FUNCTIONS\\n    constructor() {\\n        ownerUpdateConfirmationTime = 2 hours;\\n    }\\n\\n    function requestToUpdateOwner(address newOwnerAddress) external {\\n        if (newOwnerAddress == owner()) {\\n            revert Error__AddressAlreadyAnOwner(\\n                \\\"OwnershipManager\\\",\\n                newOwnerAddress\\n            );\\n        }\\n\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        lastOwnerUpdateRequestTime = block.timestamp;\\n        tempAddress = newOwnerAddress;\\n        isOwnershipConfimedByGuardian[msg.sender] = true;\\n        noOfConfirmations++;\\n        isOwnerUpdateRequested = true;\\n    }\\n\\n    function confirmUpdateOwnerRequest() external {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!isOwnerUpdateRequested) {\\n            revert Error__UpdateNotRequested(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (isOwnershipConfimedByGuardian[msg.sender]) {\\n            revert Error__AlreadyConfirmedByGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastOwnerUpdateRequestTime + ownerUpdateConfirmationTime\\n        ) {\\n            resetOwnershipVariables();\\n            revert Error__RequestTimeExpired(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        isOwnershipConfimedByGuardian[msg.sender] = true;\\n        noOfConfirmations++;\\n\\n        if (noOfConfirmations >= requiredConfirmations) {\\n            // * Ownable internal function without access restriction.\\n            _transferOwnership(tempAddress);\\n            resetOwnershipVariables();\\n        }\\n    }\\n\\n    // * FUNCTION - PRIVATE\\n    function resetOwnershipVariables() private {\\n        isOwnerUpdateRequested = false;\\n        noOfConfirmations = 0;\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isOwnershipConfimedByGuardian[guardiansCopy[i]]) {\\n                isOwnershipConfimedByGuardian[guardiansCopy[i]] = false;\\n            }\\n        }\\n    }\\n\\n    // * FUNCTION - VIEW & PURE\\n    function getIsOwnerUpdateRequested() external view returns (bool) {\\n        return isOwnerUpdateRequested;\\n    }\\n\\n    function getIsOwnershipConfimedByGuardian(\\n        address guardian\\n    ) external view returns (bool) {\\n        return isOwnershipConfimedByGuardian[guardian];\\n    }\\n\\n    function getLastOwnerUpdateRequestTime() external view returns (uint256) {\\n        return lastOwnerUpdateRequestTime;\\n    }\\n\\n    function getOwnerUpdateConfirmationTime() external view returns (uint256) {\\n        return ownerUpdateConfirmationTime;\\n    }\\n\\n    function getNoOfConfirmations() external view returns (uint256) {\\n        return noOfConfirmations;\\n    }\\n}\\n\",\"keccak256\":\"0x2bbfb872f9cd3c9be6056af97f6ad528630162cade95289ab63c88d937323b95\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620030d3380380620030d3833981810160405281019062000037919062000233565b80620000586200004c620000fd60201b60201c565b6200010560201b60201c565b6001808190555042600381905550620151806002819055504260058190555062015180600481905550426007819055506203f48060068190555080601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a7640000600a8190555062015180600d8190555050611c206012819055505062000265565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fb82620001ce565b9050919050565b6200020d81620001ee565b81146200021957600080fd5b50565b6000815190506200022d8162000202565b92915050565b6000602082840312156200024c576200024b620001c9565b5b60006200025c848285016200021c565b91505092915050565b612e5e80620002756000396000f3fe6080604052600436106101fd5760003560e01c80638636068c1161010d578063d0679d34116100a0578063e9316a211161006f578063e9316a21146106bd578063ecfba8f5146106e8578063ef64924914610713578063f2fde38b1461073e578063fb5497881461076757610204565b8063d0679d3414610605578063d23773611461062e578063d660c45d14610657578063daf3ce6a1461068057610204565b8063a85ae377116100dc578063a85ae37714610547578063af630ad314610572578063b9e1c7981461059d578063bbe4424a146105da57610204565b80638636068c146104b15780638da5cb5b146104c85780638fc270b7146104f3578063a526d83b1461051e57610204565b80632ad2ed9011610190578063715018a61161015f578063715018a6146103f25780637388fe861461040957806379f9c22f146104345780637d09f5dd1461045d57806383b40cc91461048857610204565b80632ad2ed90146103485780632b28d0cc14610373578063673d4ec81461039e57806371404156146103c957610204565b806314cbc763116101cc57806314cbc763146102b057806315c1bc3e146102db57806324cb76041461030657806326c886df1461033157610204565b80630665f04b1461020657806306c4df831461023157806310a0cf171461025c57806312065fe01461028557610204565b3661020457005b005b34801561021257600080fd5b5061021b61077e565b604051610228919061254d565b60405180910390f35b34801561023d57600080fd5b5061024661080c565b6040516102539190612588565b60405180910390f35b34801561026857600080fd5b50610283600480360381019061027e91906125d4565b610816565b005b34801561029157600080fd5b5061029a6109f5565b6040516102a79190612588565b60405180910390f35b3480156102bc57600080fd5b506102c56109fd565b6040516102d29190612588565b60405180910390f35b3480156102e757600080fd5b506102f0610a07565b6040516102fd9190612588565b60405180910390f35b34801561031257600080fd5b5061031b610a11565b6040516103289190612588565b60405180910390f35b34801561033d57600080fd5b50610346610a1b565b005b34801561035457600080fd5b5061035d610c3f565b60405161036a9190612588565b60405180910390f35b34801561037f57600080fd5b50610388610c49565b6040516103959190612588565b60405180910390f35b3480156103aa57600080fd5b506103b3610c53565b6040516103c0919061261c565b60405180910390f35b3480156103d557600080fd5b506103f060048036038101906103eb91906125d4565b610c6a565b005b3480156103fe57600080fd5b50610407610f65565b005b34801561041557600080fd5b5061041e610f79565b60405161042b9190612588565b60405180910390f35b34801561044057600080fd5b5061045b600480360381019061045691906125d4565b610f83565b005b34801561046957600080fd5b50610472610fcf565b60405161047f9190612588565b60405180910390f35b34801561049457600080fd5b506104af60048036038101906104aa9190612637565b610fd9565b005b3480156104bd57600080fd5b506104c66111fd565b005b3480156104d457600080fd5b506104dd611478565b6040516104ea9190612686565b60405180910390f35b3480156104ff57600080fd5b506105086114a1565b604051610515919061261c565b60405180910390f35b34801561052a57600080fd5b50610545600480360381019061054091906125d4565b6114b8565b005b34801561055357600080fd5b5061055c611597565b6040516105699190612588565b60405180910390f35b34801561057e57600080fd5b506105876115a1565b6040516105949190612588565b60405180910390f35b3480156105a957600080fd5b506105c460048036038101906105bf91906125d4565b6115ab565b6040516105d1919061261c565b60405180910390f35b3480156105e657600080fd5b506105ef611601565b6040516105fc9190612588565b60405180910390f35b34801561061157600080fd5b5061062c600480360381019061062791906126cd565b61160b565b005b34801561063a57600080fd5b506106556004803603810190610650919061270d565b611760565b005b34801561066357600080fd5b5061067e600480360381019061067991906125d4565b6117d9565b005b34801561068c57600080fd5b506106a760048036038101906106a291906125d4565b611933565b6040516106b4919061261c565b60405180910390f35b3480156106c957600080fd5b506106d2611989565b6040516106df9190612588565b60405180910390f35b3480156106f457600080fd5b506106fd611993565b60405161070a9190612588565b60405180910390f35b34801561071f57600080fd5b5061072861199d565b6040516107359190612588565b60405180910390f35b34801561074a57600080fd5b50610765600480360381019061076091906125d4565b6119d5565b005b34801561077357600080fd5b5061077c611a58565b005b6060600980548060200260200160405190810160405280929190818152602001828054801561080257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107b8575b5050505050905090565b6000601154905090565b61081e611478565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361088d57806040517fa4f2199f0000000000000000000000000000000000000000000000000000000081526004016108849190612797565b60405180910390fd5b6000600980549050116108d5576040517fe9e10a640000000000000000000000000000000000000000000000000000000081526004016108cc906127c5565b60405180910390fd5b6108de33611cd6565b61091f57336040517f8e8bbab90000000000000000000000000000000000000000000000000000000081526004016109169190612797565b60405180910390fd5b4260118190555080601460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550601360008154809291906109d290612814565b91905055506001601460006101000a81548160ff02191690831515021790555050565b600047905090565b6000600654905090565b6000600a54905090565b6000600854905090565b600060098054905011610a63576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610a5a906128a8565b60405180910390fd5b600e60009054906101000a900460ff16610ab2576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401610aa9906128a8565b60405180910390fd5b600d54600c54610ac291906128c8565b421115610b0c57610ad1611de5565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401610b03906128a8565b60405180910390fd5b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b9b57336040517f40b28742000000000000000000000000000000000000000000000000000000008152600401610b9291906128fc565b60405180910390fd5b610ba433611cd6565b610be557336040517f8e8bbab9000000000000000000000000000000000000000000000000000000008152600401610bdc91906128fc565b60405180910390fd5b6001600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b6000600754905090565b6000601254905090565b6000601460009054906101000a900460ff16905090565b610c72611f8d565b610c7a61200b565b600654600754610c8a91906128c8565b421015610ccc576040517f2ab71fd6000000000000000000000000000000000000000000000000000000008152600401610cc390612976565b60405180910390fd5b600060098054905011610d14576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610d0b90612976565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015610d9857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d4e575b50505050509050600060018251610daf9190612996565b67ffffffffffffffff811115610dc857610dc76129ca565b5b604051908082528060200260200182016040528015610df65781602001602082028036833780820191505090505b50905060008060005b8451811015610ef1578573ffffffffffffffffffffffffffffffffffffffff16858281518110610e3257610e316129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610e5e5760019150610ede565b83518114610edd57848181518110610e7957610e786129f9565b5b6020026020010151848481518110610e9457610e936129f9565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610ed990612814565b9350505b5b8080610ee990612814565b915050610dff565b508015610f1b578260099080519060200190610f0e9291906123b6565b5042600781905550610f56565b6040517f47637222000000000000000000000000000000000000000000000000000000008152600401610f4d90612976565b60405180910390fd5b50505050610f6261205a565b50565b610f6d611f8d565b610f776000612063565b565b6000600354905090565b610f8b611f8d565b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600c54905090565b610fe1611f8d565b610fe961200b565b600454600554610ff991906128c8565b42101561103b576040517f0e7f7d1500000000000000000000000000000000000000000000000000000000815260040161103290612976565b60405180910390fd5b600060098054806020026020016040519081016040528092919081815260200182805480156110bf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611075575b505050505090506000805b825181101561118a578473ffffffffffffffffffffffffffffffffffffffff168382815181106110fd576110fc6129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603611177576001915083838281518110611138576111376129f9565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061118a565b808061118290612814565b9150506110ca565b5080156111b45781600990805190602001906111a79291906123b6565b50426005819055506111ef565b6040517f476372220000000000000000000000000000000000000000000000000000000081526004016111e690612976565b60405180910390fd5b50506111f961205a565b5050565b600060098054905011611245576040517fe9e10a6400000000000000000000000000000000000000000000000000000000815260040161123c906127c5565b60405180910390fd5b601460009054906101000a900460ff16611294576040517f7bd1f7a200000000000000000000000000000000000000000000000000000000815260040161128b906127c5565b60405180910390fd5b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561132357336040517f40b2874200000000000000000000000000000000000000000000000000000000815260040161131a9190612797565b60405180910390fd5b60125460115461133391906128c8565b42111561137d57611342612127565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401611374906127c5565b60405180910390fd5b61138633611cd6565b6113c757336040517f8e8bbab90000000000000000000000000000000000000000000000000000000081526004016113be9190612797565b60405180910390fd5b6001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506013600081548092919061143290612814565b9190505550600854601354106114765761146d601460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612063565b611475612127565b5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600e60009054906101000a900460ff16905090565b6114c0611f8d565b6114c861200b565b6002546003546114d891906128c8565b42101561151a576040517fdd49edf800000000000000000000000000000000000000000000000000000000815260040161151190612976565b60405180910390fd5b6009819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504260038190555061158c6122d7565b61159461205a565b50565b6000600254905090565b6000600d54905090565b6000601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000601354905090565b611613611f8d565b61161b61200b565b6000811161166057806040517fc816f5c80000000000000000000000000000000000000000000000000000000081526004016116579190612a28565b60405180910390fd5b600a548111156116a757806040517fd8dde22d00000000000000000000000000000000000000000000000000000000815260040161169e9190612a28565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516116cd90612a87565b60006040518083038185875af1925050503d806000811461170a576040519150601f19603f3d011682016040523d82523d6000602084013e61170f565b606091505b5050905080611753576040517f5b0ecddc00000000000000000000000000000000000000000000000000000000815260040161174a906128a8565b60405180910390fd5b5061175c61205a565b5050565b611768611f8d565b600081116117ad57806040517f60fe2e4f0000000000000000000000000000000000000000000000000000000081526004016117a49190612a28565b60405180910390fd5b42600c8190555080600b819055506001600e60006101000a81548160ff02191690831515021790555050565b6117e1611f8d565b6117e961200b565b60004790506000811161183357806040517f25ba08f500000000000000000000000000000000000000000000000000000000815260040161182a9190612a28565b60405180910390fd5b600a5481111561187a57806040517fd8dde22d0000000000000000000000000000000000000000000000000000000081526004016118719190612a28565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516118a090612a87565b60006040518083038185875af1925050503d80600081146118dd576040519150601f19603f3d011682016040523d82523d6000602084013e6118e2565b606091505b5050905080611926576040517f5b0ecddc00000000000000000000000000000000000000000000000000000000815260040161191d906128a8565b60405180910390fd5b505061193061205a565b50565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600554905090565b6000600454905090565b6000806119a86122fd565b90506000670de0b6b3a764000047836119c19190612a9c565b6119cb9190612b0d565b9050809250505090565b6119dd611f8d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4390612bb0565b60405180910390fd5b611a5581612063565b50565b611a60611f8d565b600060098054905011611aa8576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401611a9f906128a8565b60405180910390fd5b600e60009054906101000a900460ff16611af7576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401611aee906128a8565b60405180910390fd5b600d54600c54611b0791906128c8565b421115611b5157611b16611de5565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401611b48906128a8565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015611bd557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611b8b575b505050505090506000805b8251811015611c7757600f6000848381518110611c0057611bff6129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611c64578180611c6090612814565b9250505b8080611c6f90612814565b915050611be0565b50600854811015611cc1576008546040517f9dd75b3a000000000000000000000000000000000000000000000000000000008152600401611cb89190612a28565b60405180910390fd5b600b54600a81905550611cd2611de5565b5050565b6000806009805480602002602001604051908101604052809291908181526020018280548015611d5b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d11575b5050505050905060005b8151811015611dd957818181518110611d8157611d806129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611dc657600192505050611de0565b8080611dd190612814565b915050611d65565b5060009150505b919050565b6000600e60006101000a81548160ff02191690831515021790555060006009805480602002602001604051908101604052809291908181526020018280548015611e8457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e3a575b5050505050905060005b8151811015611f8957600f6000838381518110611eae57611ead6129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611f76576000600f6000848481518110611f1c57611f1b6129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8080611f8190612814565b915050611e8e565b5050565b611f956123ae565b73ffffffffffffffffffffffffffffffffffffffff16611fb3611478565b73ffffffffffffffffffffffffffffffffffffffff1614612009576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161200090612c1c565b60405180910390fd5b565b600260015403612050576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204790612c88565b60405180910390fd5b6002600181905550565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000601460006101000a81548160ff0219169083151502179055506000601381905550600060098054806020026020016040519081016040528092919081815260200182805480156121ce57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612184575b5050505050905060005b81518110156122d357601560008383815181106121f8576121f76129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156122c057600060156000848481518110612266576122656129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b80806122cb90612814565b9150506121d8565b5050565b600160026009805490506122eb9190612b0d565b6122f591906128c8565b600881905550565b600080601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561236d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123919190612d35565b5050509150506402540be400816123a89190612db0565b91505090565b600033905090565b82805482825590600052602060002090810192821561242f579160200282015b8281111561242e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906123d6565b5b50905061243c9190612440565b5090565b5b80821115612459576000816000905550600101612441565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124b482612489565b9050919050565b6124c4816124a9565b82525050565b60006124d683836124bb565b60208301905092915050565b6000602082019050919050565b60006124fa8261245d565b6125048185612468565b935061250f83612479565b8060005b8381101561254057815161252788826124ca565b9750612532836124e2565b925050600181019050612513565b5085935050505092915050565b6000602082019050818103600083015261256781846124ef565b905092915050565b6000819050919050565b6125828161256f565b82525050565b600060208201905061259d6000830184612579565b92915050565b600080fd5b6125b1816124a9565b81146125bc57600080fd5b50565b6000813590506125ce816125a8565b92915050565b6000602082840312156125ea576125e96125a3565b5b60006125f8848285016125bf565b91505092915050565b60008115159050919050565b61261681612601565b82525050565b6000602082019050612631600083018461260d565b92915050565b6000806040838503121561264e5761264d6125a3565b5b600061265c858286016125bf565b925050602061266d858286016125bf565b9150509250929050565b612680816124a9565b82525050565b600060208201905061269b6000830184612677565b92915050565b6126aa8161256f565b81146126b557600080fd5b50565b6000813590506126c7816126a1565b92915050565b600080604083850312156126e4576126e36125a3565b5b60006126f2858286016125bf565b9250506020612703858286016126b8565b9150509250929050565b600060208284031215612723576127226125a3565b5b6000612731848285016126b8565b91505092915050565b600082825260208201905092915050565b7f4f776e6572736869704d616e6167657200000000000000000000000000000000600082015250565b600061278160108361273a565b915061278c8261274b565b602082019050919050565b600060408201905081810360008301526127b081612774565b90506127bf6020830184612677565b92915050565b600060208201905081810360008301526127de81612774565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061281f8261256f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612851576128506127e5565b5b600182019050919050565b7f46756e64734d616e616765720000000000000000000000000000000000000000600082015250565b6000612892600c8361273a565b915061289d8261285c565b602082019050919050565b600060208201905081810360008301526128c181612885565b9050919050565b60006128d38261256f565b91506128de8361256f565b92508282019050808211156128f6576128f56127e5565b5b92915050565b6000604082019050818103600083015261291581612885565b90506129246020830184612677565b92915050565b7f477561726469616e734d616e6167657200000000000000000000000000000000600082015250565b600061296060108361273a565b915061296b8261292a565b602082019050919050565b6000602082019050818103600083015261298f81612953565b9050919050565b60006129a18261256f565b91506129ac8361256f565b92508282039050818111156129c4576129c36127e5565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040820190508181036000830152612a4181612885565b9050612a506020830184612579565b92915050565b600081905092915050565b50565b6000612a71600083612a56565b9150612a7c82612a61565b600082019050919050565b6000612a9282612a64565b9150819050919050565b6000612aa78261256f565b9150612ab28361256f565b9250828202612ac08161256f565b91508282048414831517612ad757612ad66127e5565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b188261256f565b9150612b238361256f565b925082612b3357612b32612ade565b5b828204905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612b9a60268361273a565b9150612ba582612b3e565b604082019050919050565b60006020820190508181036000830152612bc981612b8d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612c0660208361273a565b9150612c1182612bd0565b602082019050919050565b60006020820190508181036000830152612c3581612bf9565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612c72601f8361273a565b9150612c7d82612c3c565b602082019050919050565b60006020820190508181036000830152612ca181612c65565b9050919050565b600069ffffffffffffffffffff82169050919050565b612cc781612ca8565b8114612cd257600080fd5b50565b600081519050612ce481612cbe565b92915050565b6000819050919050565b612cfd81612cea565b8114612d0857600080fd5b50565b600081519050612d1a81612cf4565b92915050565b600081519050612d2f816126a1565b92915050565b600080600080600060a08688031215612d5157612d506125a3565b5b6000612d5f88828901612cd5565b9550506020612d7088828901612d0b565b9450506040612d8188828901612d20565b9350506060612d9288828901612d20565b9250506080612da388828901612cd5565b9150509295509295909350565b6000612dbb82612cea565b9150612dc683612cea565b9250828202612dd481612cea565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615612e0c57612e0b6127e5565b5b8282058414831517612e2157612e206127e5565b5b509291505056fea2646970667358221220abcbd7df9e9ef39155ae6e00fb651806e5f8ef0213975eb713029f84989cf97964736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106101fd5760003560e01c80638636068c1161010d578063d0679d34116100a0578063e9316a211161006f578063e9316a21146106bd578063ecfba8f5146106e8578063ef64924914610713578063f2fde38b1461073e578063fb5497881461076757610204565b8063d0679d3414610605578063d23773611461062e578063d660c45d14610657578063daf3ce6a1461068057610204565b8063a85ae377116100dc578063a85ae37714610547578063af630ad314610572578063b9e1c7981461059d578063bbe4424a146105da57610204565b80638636068c146104b15780638da5cb5b146104c85780638fc270b7146104f3578063a526d83b1461051e57610204565b80632ad2ed9011610190578063715018a61161015f578063715018a6146103f25780637388fe861461040957806379f9c22f146104345780637d09f5dd1461045d57806383b40cc91461048857610204565b80632ad2ed90146103485780632b28d0cc14610373578063673d4ec81461039e57806371404156146103c957610204565b806314cbc763116101cc57806314cbc763146102b057806315c1bc3e146102db57806324cb76041461030657806326c886df1461033157610204565b80630665f04b1461020657806306c4df831461023157806310a0cf171461025c57806312065fe01461028557610204565b3661020457005b005b34801561021257600080fd5b5061021b61077e565b604051610228919061254d565b60405180910390f35b34801561023d57600080fd5b5061024661080c565b6040516102539190612588565b60405180910390f35b34801561026857600080fd5b50610283600480360381019061027e91906125d4565b610816565b005b34801561029157600080fd5b5061029a6109f5565b6040516102a79190612588565b60405180910390f35b3480156102bc57600080fd5b506102c56109fd565b6040516102d29190612588565b60405180910390f35b3480156102e757600080fd5b506102f0610a07565b6040516102fd9190612588565b60405180910390f35b34801561031257600080fd5b5061031b610a11565b6040516103289190612588565b60405180910390f35b34801561033d57600080fd5b50610346610a1b565b005b34801561035457600080fd5b5061035d610c3f565b60405161036a9190612588565b60405180910390f35b34801561037f57600080fd5b50610388610c49565b6040516103959190612588565b60405180910390f35b3480156103aa57600080fd5b506103b3610c53565b6040516103c0919061261c565b60405180910390f35b3480156103d557600080fd5b506103f060048036038101906103eb91906125d4565b610c6a565b005b3480156103fe57600080fd5b50610407610f65565b005b34801561041557600080fd5b5061041e610f79565b60405161042b9190612588565b60405180910390f35b34801561044057600080fd5b5061045b600480360381019061045691906125d4565b610f83565b005b34801561046957600080fd5b50610472610fcf565b60405161047f9190612588565b60405180910390f35b34801561049457600080fd5b506104af60048036038101906104aa9190612637565b610fd9565b005b3480156104bd57600080fd5b506104c66111fd565b005b3480156104d457600080fd5b506104dd611478565b6040516104ea9190612686565b60405180910390f35b3480156104ff57600080fd5b506105086114a1565b604051610515919061261c565b60405180910390f35b34801561052a57600080fd5b50610545600480360381019061054091906125d4565b6114b8565b005b34801561055357600080fd5b5061055c611597565b6040516105699190612588565b60405180910390f35b34801561057e57600080fd5b506105876115a1565b6040516105949190612588565b60405180910390f35b3480156105a957600080fd5b506105c460048036038101906105bf91906125d4565b6115ab565b6040516105d1919061261c565b60405180910390f35b3480156105e657600080fd5b506105ef611601565b6040516105fc9190612588565b60405180910390f35b34801561061157600080fd5b5061062c600480360381019061062791906126cd565b61160b565b005b34801561063a57600080fd5b506106556004803603810190610650919061270d565b611760565b005b34801561066357600080fd5b5061067e600480360381019061067991906125d4565b6117d9565b005b34801561068c57600080fd5b506106a760048036038101906106a291906125d4565b611933565b6040516106b4919061261c565b60405180910390f35b3480156106c957600080fd5b506106d2611989565b6040516106df9190612588565b60405180910390f35b3480156106f457600080fd5b506106fd611993565b60405161070a9190612588565b60405180910390f35b34801561071f57600080fd5b5061072861199d565b6040516107359190612588565b60405180910390f35b34801561074a57600080fd5b50610765600480360381019061076091906125d4565b6119d5565b005b34801561077357600080fd5b5061077c611a58565b005b6060600980548060200260200160405190810160405280929190818152602001828054801561080257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107b8575b5050505050905090565b6000601154905090565b61081e611478565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361088d57806040517fa4f2199f0000000000000000000000000000000000000000000000000000000081526004016108849190612797565b60405180910390fd5b6000600980549050116108d5576040517fe9e10a640000000000000000000000000000000000000000000000000000000081526004016108cc906127c5565b60405180910390fd5b6108de33611cd6565b61091f57336040517f8e8bbab90000000000000000000000000000000000000000000000000000000081526004016109169190612797565b60405180910390fd5b4260118190555080601460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550601360008154809291906109d290612814565b91905055506001601460006101000a81548160ff02191690831515021790555050565b600047905090565b6000600654905090565b6000600a54905090565b6000600854905090565b600060098054905011610a63576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610a5a906128a8565b60405180910390fd5b600e60009054906101000a900460ff16610ab2576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401610aa9906128a8565b60405180910390fd5b600d54600c54610ac291906128c8565b421115610b0c57610ad1611de5565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401610b03906128a8565b60405180910390fd5b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b9b57336040517f40b28742000000000000000000000000000000000000000000000000000000008152600401610b9291906128fc565b60405180910390fd5b610ba433611cd6565b610be557336040517f8e8bbab9000000000000000000000000000000000000000000000000000000008152600401610bdc91906128fc565b60405180910390fd5b6001600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b6000600754905090565b6000601254905090565b6000601460009054906101000a900460ff16905090565b610c72611f8d565b610c7a61200b565b600654600754610c8a91906128c8565b421015610ccc576040517f2ab71fd6000000000000000000000000000000000000000000000000000000008152600401610cc390612976565b60405180910390fd5b600060098054905011610d14576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610d0b90612976565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015610d9857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d4e575b50505050509050600060018251610daf9190612996565b67ffffffffffffffff811115610dc857610dc76129ca565b5b604051908082528060200260200182016040528015610df65781602001602082028036833780820191505090505b50905060008060005b8451811015610ef1578573ffffffffffffffffffffffffffffffffffffffff16858281518110610e3257610e316129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610e5e5760019150610ede565b83518114610edd57848181518110610e7957610e786129f9565b5b6020026020010151848481518110610e9457610e936129f9565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610ed990612814565b9350505b5b8080610ee990612814565b915050610dff565b508015610f1b578260099080519060200190610f0e9291906123b6565b5042600781905550610f56565b6040517f47637222000000000000000000000000000000000000000000000000000000008152600401610f4d90612976565b60405180910390fd5b50505050610f6261205a565b50565b610f6d611f8d565b610f776000612063565b565b6000600354905090565b610f8b611f8d565b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600c54905090565b610fe1611f8d565b610fe961200b565b600454600554610ff991906128c8565b42101561103b576040517f0e7f7d1500000000000000000000000000000000000000000000000000000000815260040161103290612976565b60405180910390fd5b600060098054806020026020016040519081016040528092919081815260200182805480156110bf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611075575b505050505090506000805b825181101561118a578473ffffffffffffffffffffffffffffffffffffffff168382815181106110fd576110fc6129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603611177576001915083838281518110611138576111376129f9565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061118a565b808061118290612814565b9150506110ca565b5080156111b45781600990805190602001906111a79291906123b6565b50426005819055506111ef565b6040517f476372220000000000000000000000000000000000000000000000000000000081526004016111e690612976565b60405180910390fd5b50506111f961205a565b5050565b600060098054905011611245576040517fe9e10a6400000000000000000000000000000000000000000000000000000000815260040161123c906127c5565b60405180910390fd5b601460009054906101000a900460ff16611294576040517f7bd1f7a200000000000000000000000000000000000000000000000000000000815260040161128b906127c5565b60405180910390fd5b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561132357336040517f40b2874200000000000000000000000000000000000000000000000000000000815260040161131a9190612797565b60405180910390fd5b60125460115461133391906128c8565b42111561137d57611342612127565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401611374906127c5565b60405180910390fd5b61138633611cd6565b6113c757336040517f8e8bbab90000000000000000000000000000000000000000000000000000000081526004016113be9190612797565b60405180910390fd5b6001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506013600081548092919061143290612814565b9190505550600854601354106114765761146d601460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612063565b611475612127565b5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600e60009054906101000a900460ff16905090565b6114c0611f8d565b6114c861200b565b6002546003546114d891906128c8565b42101561151a576040517fdd49edf800000000000000000000000000000000000000000000000000000000815260040161151190612976565b60405180910390fd5b6009819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504260038190555061158c6122d7565b61159461205a565b50565b6000600254905090565b6000600d54905090565b6000601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000601354905090565b611613611f8d565b61161b61200b565b6000811161166057806040517fc816f5c80000000000000000000000000000000000000000000000000000000081526004016116579190612a28565b60405180910390fd5b600a548111156116a757806040517fd8dde22d00000000000000000000000000000000000000000000000000000000815260040161169e9190612a28565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516116cd90612a87565b60006040518083038185875af1925050503d806000811461170a576040519150601f19603f3d011682016040523d82523d6000602084013e61170f565b606091505b5050905080611753576040517f5b0ecddc00000000000000000000000000000000000000000000000000000000815260040161174a906128a8565b60405180910390fd5b5061175c61205a565b5050565b611768611f8d565b600081116117ad57806040517f60fe2e4f0000000000000000000000000000000000000000000000000000000081526004016117a49190612a28565b60405180910390fd5b42600c8190555080600b819055506001600e60006101000a81548160ff02191690831515021790555050565b6117e1611f8d565b6117e961200b565b60004790506000811161183357806040517f25ba08f500000000000000000000000000000000000000000000000000000000815260040161182a9190612a28565b60405180910390fd5b600a5481111561187a57806040517fd8dde22d0000000000000000000000000000000000000000000000000000000081526004016118719190612a28565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516118a090612a87565b60006040518083038185875af1925050503d80600081146118dd576040519150601f19603f3d011682016040523d82523d6000602084013e6118e2565b606091505b5050905080611926576040517f5b0ecddc00000000000000000000000000000000000000000000000000000000815260040161191d906128a8565b60405180910390fd5b505061193061205a565b50565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600554905090565b6000600454905090565b6000806119a86122fd565b90506000670de0b6b3a764000047836119c19190612a9c565b6119cb9190612b0d565b9050809250505090565b6119dd611f8d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4390612bb0565b60405180910390fd5b611a5581612063565b50565b611a60611f8d565b600060098054905011611aa8576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401611a9f906128a8565b60405180910390fd5b600e60009054906101000a900460ff16611af7576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401611aee906128a8565b60405180910390fd5b600d54600c54611b0791906128c8565b421115611b5157611b16611de5565b6040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401611b48906128a8565b60405180910390fd5b60006009805480602002602001604051908101604052809291908181526020018280548015611bd557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611b8b575b505050505090506000805b8251811015611c7757600f6000848381518110611c0057611bff6129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611c64578180611c6090612814565b9250505b8080611c6f90612814565b915050611be0565b50600854811015611cc1576008546040517f9dd75b3a000000000000000000000000000000000000000000000000000000008152600401611cb89190612a28565b60405180910390fd5b600b54600a81905550611cd2611de5565b5050565b6000806009805480602002602001604051908101604052809291908181526020018280548015611d5b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d11575b5050505050905060005b8151811015611dd957818181518110611d8157611d806129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611dc657600192505050611de0565b8080611dd190612814565b915050611d65565b5060009150505b919050565b6000600e60006101000a81548160ff02191690831515021790555060006009805480602002602001604051908101604052809291908181526020018280548015611e8457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e3a575b5050505050905060005b8151811015611f8957600f6000838381518110611eae57611ead6129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611f76576000600f6000848481518110611f1c57611f1b6129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8080611f8190612814565b915050611e8e565b5050565b611f956123ae565b73ffffffffffffffffffffffffffffffffffffffff16611fb3611478565b73ffffffffffffffffffffffffffffffffffffffff1614612009576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161200090612c1c565b60405180910390fd5b565b600260015403612050576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204790612c88565b60405180910390fd5b6002600181905550565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000601460006101000a81548160ff0219169083151502179055506000601381905550600060098054806020026020016040519081016040528092919081815260200182805480156121ce57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612184575b5050505050905060005b81518110156122d357601560008383815181106121f8576121f76129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156122c057600060156000848481518110612266576122656129f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b80806122cb90612814565b9150506121d8565b5050565b600160026009805490506122eb9190612b0d565b6122f591906128c8565b600881905550565b600080601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561236d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123919190612d35565b5050509150506402540be400816123a89190612db0565b91505090565b600033905090565b82805482825590600052602060002090810192821561242f579160200282015b8281111561242e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906123d6565b5b50905061243c9190612440565b5090565b5b80821115612459576000816000905550600101612441565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124b482612489565b9050919050565b6124c4816124a9565b82525050565b60006124d683836124bb565b60208301905092915050565b6000602082019050919050565b60006124fa8261245d565b6125048185612468565b935061250f83612479565b8060005b8381101561254057815161252788826124ca565b9750612532836124e2565b925050600181019050612513565b5085935050505092915050565b6000602082019050818103600083015261256781846124ef565b905092915050565b6000819050919050565b6125828161256f565b82525050565b600060208201905061259d6000830184612579565b92915050565b600080fd5b6125b1816124a9565b81146125bc57600080fd5b50565b6000813590506125ce816125a8565b92915050565b6000602082840312156125ea576125e96125a3565b5b60006125f8848285016125bf565b91505092915050565b60008115159050919050565b61261681612601565b82525050565b6000602082019050612631600083018461260d565b92915050565b6000806040838503121561264e5761264d6125a3565b5b600061265c858286016125bf565b925050602061266d858286016125bf565b9150509250929050565b612680816124a9565b82525050565b600060208201905061269b6000830184612677565b92915050565b6126aa8161256f565b81146126b557600080fd5b50565b6000813590506126c7816126a1565b92915050565b600080604083850312156126e4576126e36125a3565b5b60006126f2858286016125bf565b9250506020612703858286016126b8565b9150509250929050565b600060208284031215612723576127226125a3565b5b6000612731848285016126b8565b91505092915050565b600082825260208201905092915050565b7f4f776e6572736869704d616e6167657200000000000000000000000000000000600082015250565b600061278160108361273a565b915061278c8261274b565b602082019050919050565b600060408201905081810360008301526127b081612774565b90506127bf6020830184612677565b92915050565b600060208201905081810360008301526127de81612774565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061281f8261256f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612851576128506127e5565b5b600182019050919050565b7f46756e64734d616e616765720000000000000000000000000000000000000000600082015250565b6000612892600c8361273a565b915061289d8261285c565b602082019050919050565b600060208201905081810360008301526128c181612885565b9050919050565b60006128d38261256f565b91506128de8361256f565b92508282019050808211156128f6576128f56127e5565b5b92915050565b6000604082019050818103600083015261291581612885565b90506129246020830184612677565b92915050565b7f477561726469616e734d616e6167657200000000000000000000000000000000600082015250565b600061296060108361273a565b915061296b8261292a565b602082019050919050565b6000602082019050818103600083015261298f81612953565b9050919050565b60006129a18261256f565b91506129ac8361256f565b92508282039050818111156129c4576129c36127e5565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040820190508181036000830152612a4181612885565b9050612a506020830184612579565b92915050565b600081905092915050565b50565b6000612a71600083612a56565b9150612a7c82612a61565b600082019050919050565b6000612a9282612a64565b9150819050919050565b6000612aa78261256f565b9150612ab28361256f565b9250828202612ac08161256f565b91508282048414831517612ad757612ad66127e5565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b188261256f565b9150612b238361256f565b925082612b3357612b32612ade565b5b828204905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612b9a60268361273a565b9150612ba582612b3e565b604082019050919050565b60006020820190508181036000830152612bc981612b8d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612c0660208361273a565b9150612c1182612bd0565b602082019050919050565b60006020820190508181036000830152612c3581612bf9565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612c72601f8361273a565b9150612c7d82612c3c565b602082019050919050565b60006020820190508181036000830152612ca181612c65565b9050919050565b600069ffffffffffffffffffff82169050919050565b612cc781612ca8565b8114612cd257600080fd5b50565b600081519050612ce481612cbe565b92915050565b6000819050919050565b612cfd81612cea565b8114612d0857600080fd5b50565b600081519050612d1a81612cf4565b92915050565b600081519050612d2f816126a1565b92915050565b600080600080600060a08688031215612d5157612d506125a3565b5b6000612d5f88828901612cd5565b9550506020612d7088828901612d0b565b9450506040612d8188828901612d20565b9350506060612d9288828901612d20565b9250506080612da388828901612cd5565b9150509295509295909350565b6000612dbb82612cea565b9150612dc683612cea565b9250828202612dd481612cea565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615612e0c57612e0b6127e5565b5b8282058414831517612e2157612e206127e5565b5b509291505056fea2646970667358221220abcbd7df9e9ef39155ae6e00fb651806e5f8ef0213975eb713029f84989cf97964736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 169,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 869,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "addGuardianDelay",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 871,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianAddTime",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 873,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "changeGuardianDelay",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 875,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianChangeTime",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 877,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "removeGuardianDelay",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 879,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianRemovalTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 881,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "requiredConfirmations",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 884,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "guardians",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 336,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "dailyTransferLimit",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 338,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "tempDailyTransferLimit",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 340,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastDailyTransferUpdateRequestTime",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 342,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "dailyTransferLimitUpdateConfirmationTime",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 344,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isDailyTransferLimitUpdateRequested",
        "offset": 0,
        "slot": "14",
        "type": "t_bool"
      },
      {
        "astId": 348,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isConfirmedByGuardian",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 351,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "priceFeed",
        "offset": 0,
        "slot": "16",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 1273,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastOwnerUpdateRequestTime",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 1275,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "ownerUpdateConfirmationTime",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 1277,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "noOfConfirmations",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 1279,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isOwnerUpdateRequested",
        "offset": 0,
        "slot": "20",
        "type": "t_bool"
      },
      {
        "astId": 1281,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "tempAddress",
        "offset": 1,
        "slot": "20",
        "type": "t_address"
      },
      {
        "astId": 1285,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isOwnershipConfimedByGuardian",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}