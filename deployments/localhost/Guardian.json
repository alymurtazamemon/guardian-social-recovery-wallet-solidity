{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Error__AddressAlreadyAnOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Error__AddressNotFoundAsGuardian",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "Error__AlreadyConfirmedByGuardian",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Error__BalanceIsZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyAddAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyChangeAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__CanOnlyRemoveAfterDelayPeriod",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Error__DailyTransferLimitExceed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__GuardianDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__GuardiansListIsEmpty",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Error__InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "Error__InvalidLimit",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__RequestTimeExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "confirmations",
          "type": "uint256"
        }
      ],
      "name": "Error__RequiredConfirmationsNotMet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__TransactionFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__UpdateNotRequested",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "Error__UpdateNotRequestedByOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "addGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "changeGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmAndUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmDailyTransferLimitRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmUpdateOwnerRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalanceInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChangeGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimitInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimitUpdateConfirmationTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDailyTransferLimitUpdateRequestStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "getGuardianConfirmationStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGuardians",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIsOwnerUpdateRequested",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "getIsOwnershipConfimedByGuardian",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastDailyTransferUpdateRequestTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianAddTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianChangeTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastGuardianRemovalTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastOwnerUpdateRequestTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNoOfConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwnerUpdateConfirmationTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRemoveGuardianDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRequiredConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "removeGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "requestToUpdateDailyTransferLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwnerAddress",
          "type": "address"
        }
      ],
      "name": "requestToUpdateOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requiredConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetDailyTransferLimitVariables",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetOwnershipVariables",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sendAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "updateETHUSDPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd49555fb4ef10f020ab0d6a74037e2bf378a2f17e6ea3cba8f5c62220df90b39",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "2975342",
    "logsBloom": "0x
    "blockHash": "0x1e84fc8c22a0ef01096a94c4ed81d71204fae9a51f4bfb2ed2f8a9d29adb5cb6",
    "transactionHash": "0xd49555fb4ef10f020ab0d6a74037e2bf378a2f17e6ea3cba8f5c62220df90b39",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0xd49555fb4ef10f020ab0d6a74037e2bf378a2f17e6ea3cba8f5c62220df90b39",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x1e84fc8c22a0ef01096a94c4ed81d71204fae9a51f4bfb2ed2f8a9d29adb5cb6"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "2975342",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "c615482104f5b1a44583625641d0aefa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Error__AddressAlreadyAnOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Error__AddressNotFoundAsGuardian\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"Error__AlreadyConfirmedByGuardian\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Error__BalanceIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyAddAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyChangeAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__CanOnlyRemoveAfterDelayPeriod\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Error__DailyTransferLimitExceed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__GuardianDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__GuardiansListIsEmpty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Error__InvalidAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"Error__InvalidLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__RequestTimeExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"confirmations\",\"type\":\"uint256\"}],\"name\":\"Error__RequiredConfirmationsNotMet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__TransactionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__UpdateNotRequested\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"Error__UpdateNotRequestedByOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"addGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"changeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmAndUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmDailyTransferLimitRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmUpdateOwnerRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChangeGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimitInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimitUpdateConfirmationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyTransferLimitUpdateRequestStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"getGuardianConfirmationStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGuardians\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIsOwnerUpdateRequested\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"getIsOwnershipConfimedByGuardian\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastDailyTransferUpdateRequestTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianAddTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianChangeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastGuardianRemovalTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastOwnerUpdateRequestTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNoOfConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerUpdateConfirmationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemoveGuardianDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequiredConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"removeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"requestToUpdateDailyTransferLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwnerAddress\",\"type\":\"address\"}],\"name\":\"requestToUpdateOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetDailyTransferLimitVariables\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetOwnershipVariables\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sendAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"updateETHUSDPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Guardian.sol\":\"Guardian\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nerror Error__AddressAlreadyAnOwner(string location, address addr);\\nerror Error__GuardiansListIsEmpty(string location);\\nerror Error__AddressNotFoundAsGuardian(string location, address addr);\\nerror Error__UpdateNotRequested(string location);\\nerror Error__AlreadyConfirmedByGuardian(string location, address guardian);\\nerror Error__RequestTimeExpired(string location);\\nerror Error__InvalidAmount(string location, uint amount);\\nerror Error__DailyTransferLimitExceed(string location, uint amount);\\nerror Error__TransactionFailed(string location);\\nerror Error__BalanceIsZero(string location, uint balance);\\nerror Error__InvalidLimit(string location, uint256 limit);\\nerror Error__UpdateNotRequestedByOwner(string location);\\nerror Error__RequiredConfirmationsNotMet(\\n    string location,\\n    uint256 confirmations\\n);\\nerror Error__InvalidGuardiansList(string location, address[] addressesList);\\nerror Error__CanOnlyChangeAfterDelayPeriod(string location);\\nerror Error__GuardianDoesNotExist(string location);\\nerror Error__CanOnlyRemoveAfterDelayPeriod(string location);\\nerror Error__CanOnlyAddAfterDelayPeriod(string location);\\n\",\"keccak256\":\"0x9e7e43a4f27803f4f23f66e6fdbe62120abfaf774ff9d1f9095b0bd10af8f6a5\",\"license\":\"MIT\"},\"contracts/FundsManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./GuardiansManager.sol\\\";\\nimport \\\"./Errors.sol\\\";\\n\\ncontract FundsManager is GuardiansManager {\\n    // * STATE VARIABLES\\n    uint256 private dailyTransferLimit;\\n    uint256 private tempDailyTransferLimit;\\n    uint256 private lastDailyTransferUpdateRequestTime;\\n    uint256 private dailyTransferLimitUpdateConfirmationTime;\\n\\n    bool private isDailyTransferLimitUpdateRequested;\\n\\n    mapping(address => bool) private isConfirmedByGuardian;\\n\\n    AggregatorV3Interface private priceFeed;\\n\\n    // * FUNCTIONS\\n    constructor(address _priceFeed) {\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n        dailyTransferLimit = 1 ether;\\n        dailyTransferLimitUpdateConfirmationTime = 1 days;\\n    }\\n\\n    // * FUNCTIONS - EXTERNAL\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n\\n    function send(address to, uint amount) external onlyOwner nonReentrant {\\n        if (amount <= 0) {\\n            revert Error__InvalidAmount(\\\"FundsManager\\\", amount);\\n        }\\n\\n        if (amount > dailyTransferLimit) {\\n            revert Error__DailyTransferLimitExceed(\\\"FundsManager\\\", amount);\\n        }\\n\\n        (bool success, ) = to.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Error__TransactionFailed(\\\"FundsManager\\\");\\n        }\\n    }\\n\\n    function sendAll(address to) external onlyOwner nonReentrant {\\n        uint256 balance = address(this).balance;\\n\\n        if (balance <= 0) {\\n            revert Error__BalanceIsZero(\\\"FundsManager\\\", balance);\\n        }\\n\\n        if (balance > dailyTransferLimit) {\\n            revert Error__DailyTransferLimitExceed(\\\"FundsManager\\\", balance);\\n        }\\n\\n        (bool success, ) = to.call{value: balance}(\\\"\\\");\\n        if (!success) {\\n            revert Error__TransactionFailed(\\\"FundsManager\\\");\\n        }\\n    }\\n\\n    function requestToUpdateDailyTransferLimit(\\n        uint256 limit\\n    ) external onlyOwner {\\n        if (limit <= 0) {\\n            revert Error__InvalidLimit(\\\"FundsManager\\\", limit);\\n        }\\n\\n        lastDailyTransferUpdateRequestTime = block.timestamp;\\n        tempDailyTransferLimit = limit;\\n        isDailyTransferLimitUpdateRequested = true;\\n    }\\n\\n    function confirmDailyTransferLimitRequest() external {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"FundsManager\\\");\\n        }\\n\\n        if (!isDailyTransferLimitUpdateRequested) {\\n            revert Error__UpdateNotRequestedByOwner(\\\"FundsManager\\\");\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastDailyTransferUpdateRequestTime +\\n                dailyTransferLimitUpdateConfirmationTime\\n        ) {\\n            revert Error__RequestTimeExpired(\\\"FundsManager\\\");\\n        }\\n\\n        if (isConfirmedByGuardian[msg.sender]) {\\n            revert Error__AlreadyConfirmedByGuardian(\\n                \\\"FundsManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\\"FundsManager\\\", msg.sender);\\n        }\\n\\n        isConfirmedByGuardian[msg.sender] = true;\\n    }\\n\\n    function confirmAndUpdate() external onlyOwner {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"FundsManager\\\");\\n        }\\n\\n        if (!isDailyTransferLimitUpdateRequested) {\\n            revert Error__UpdateNotRequestedByOwner(\\\"FundsManager\\\");\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastDailyTransferUpdateRequestTime +\\n                dailyTransferLimitUpdateConfirmationTime\\n        ) {\\n            revert Error__RequestTimeExpired(\\\"FundsManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n        uint256 counter = 0;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isConfirmedByGuardian[guardiansCopy[i]]) {\\n                counter++;\\n            }\\n        }\\n\\n        if (counter < requiredConfirmations) {\\n            revert Error__RequiredConfirmationsNotMet(\\n                \\\"FundsManager\\\",\\n                requiredConfirmations\\n            );\\n        }\\n\\n        dailyTransferLimit = tempDailyTransferLimit;\\n\\n        resetDailyTransferLimitVariables();\\n    }\\n\\n    function updateETHUSDPriceFeed(address _priceFeed) external onlyOwner {\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n    }\\n\\n    // * FUNCTION - PUBLIC\\n\\n    function resetDailyTransferLimitVariables() public onlyOwner {\\n        isDailyTransferLimitUpdateRequested = false;\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isConfirmedByGuardian[guardiansCopy[i]]) {\\n                isConfirmedByGuardian[guardiansCopy[i]] = false;\\n            }\\n        }\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - EXTERNAL\\n\\n    function getBalance() external view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function getBalanceInUSD() external view returns (uint256) {\\n        uint256 ethPrice = getPrice();\\n        uint256 balanceInUSD = (ethPrice * address(this).balance) /\\n            1000000000000000000;\\n        return balanceInUSD;\\n    }\\n\\n    function getDailyTransferLimit() external view returns (uint256) {\\n        return dailyTransferLimit;\\n    }\\n\\n    function getDailyTransferLimitInUSD() external view returns (uint256) {\\n        uint256 ethPrice = getPrice();\\n        uint256 dailyTransferLimitInUSD = (ethPrice * dailyTransferLimit) /\\n            1000000000000000000;\\n        return dailyTransferLimitInUSD;\\n    }\\n\\n    function getRequiredConfirmations() external view returns (uint256) {\\n        return requiredConfirmations;\\n    }\\n\\n    function getDailyTransferLimitUpdateRequestStatus()\\n        external\\n        view\\n        returns (bool)\\n    {\\n        return isDailyTransferLimitUpdateRequested;\\n    }\\n\\n    function getDailyTransferLimitUpdateConfirmationTime()\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return dailyTransferLimitUpdateConfirmationTime;\\n    }\\n\\n    function getLastDailyTransferUpdateRequestTime()\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return lastDailyTransferUpdateRequestTime;\\n    }\\n\\n    function getGuardianConfirmationStatus(\\n        address guardian\\n    ) external view returns (bool) {\\n        return isConfirmedByGuardian[guardian];\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - PUBLIC\\n\\n    function getPrice() public view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n}\\n\",\"keccak256\":\"0x6950c34349a94829deaf75739cc3d373de62187afc1ad885ba50743e984fc376\",\"license\":\"MIT\"},\"contracts/Guardian.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"./FundsManager.sol\\\";\\nimport \\\"./OwnershipManager.sol\\\";\\n\\ncontract Guardian is FundsManager, OwnershipManager {\\n    constructor(address priceFeed) FundsManager(priceFeed) {}\\n}\\n\",\"keccak256\":\"0x2bd1fb648be989241428c7de5e79d13252100f1a219a55624c3142724be6fb90\",\"license\":\"MIT\"},\"contracts/GuardiansManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./Errors.sol\\\";\\nimport \\\"hardhat/console.sol\\\";\\n\\ncontract GuardiansManager is Ownable, ReentrancyGuard {\\n    // * STATE VARIABLES\\n    uint256 private addGuardianDelay;\\n    uint256 private lastGuardianAddTime;\\n    uint256 private changeGuardianDelay;\\n    uint256 private lastGuardianChangeTime;\\n    uint256 private removeGuardianDelay;\\n    uint256 private lastGuardianRemovalTime;\\n    uint256 private contractDeployTime;\\n\\n    uint256 public requiredConfirmations;\\n\\n    address[] internal guardians;\\n\\n    // * FUNCTIONS\\n    constructor() {\\n        contractDeployTime = block.timestamp;\\n        lastGuardianAddTime = block.timestamp;\\n        addGuardianDelay = 1 days;\\n        lastGuardianChangeTime = block.timestamp;\\n        changeGuardianDelay = 1 days;\\n        lastGuardianRemovalTime = block.timestamp;\\n        removeGuardianDelay = 3 days;\\n    }\\n\\n    // * FUNCTIONS - EXTERNAL\\n    function addGuardian(address guardian) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianAddTime + addGuardianDelay) {\\n            revert Error__CanOnlyAddAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        guardians.push(guardian);\\n        lastGuardianAddTime = block.timestamp;\\n        updateRequiredConfirmations();\\n    }\\n\\n    function changeGuardian(\\n        address from,\\n        address to\\n    ) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianChangeTime + changeGuardianDelay) {\\n            revert Error__CanOnlyChangeAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        // * using this variable so we should not update the state variable if address does not exits.\\n        bool exist = false;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (guardiansCopy[i] == from) {\\n                exist = true;\\n                guardiansCopy[i] = to;\\n                break;\\n            }\\n        }\\n\\n        if (exist) {\\n            guardians = guardiansCopy;\\n            lastGuardianChangeTime = block.timestamp;\\n        } else {\\n            revert Error__GuardianDoesNotExist(\\\"GuardiansManager\\\");\\n        }\\n    }\\n\\n    function removeGuardian(address guardian) external onlyOwner nonReentrant {\\n        if (block.timestamp < lastGuardianRemovalTime + removeGuardianDelay) {\\n            revert Error__CanOnlyRemoveAfterDelayPeriod(\\\"GuardiansManager\\\");\\n        }\\n\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"GuardiansManager\\\");\\n        }\\n\\n        if (!doesGuardianExist(guardian)) {\\n            revert Error__GuardianDoesNotExist(\\\"GuardiansManager\\\");\\n        }\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        // * for local arrays we need to declare the size at the initialization time.\\n        // * we are removing the 1 guardian so the updated array will be less than 1 the length of existing array.\\n        address[] memory updatedCopy = new address[](guardiansCopy.length - 1);\\n        uint256 index = 0;\\n\\n        // * using this variable so we should not update the state variable if address does not exits.\\n        bool exist = false;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (guardiansCopy[i] == guardian) {\\n                exist = true;\\n                continue;\\n            } else {\\n                updatedCopy[index] = guardiansCopy[i];\\n                index++;\\n            }\\n        }\\n\\n        if (exist) {\\n            guardians = updatedCopy;\\n            lastGuardianRemovalTime = block.timestamp;\\n        }\\n    }\\n\\n    // * FUNCTION - PRIVATE\\n\\n    function updateRequiredConfirmations() private {\\n        requiredConfirmations = (guardians.length / 2) + 1;\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - EXTERNAL\\n\\n    function getLastGuardianAddTime() external view returns (uint256) {\\n        return\\n            lastGuardianAddTime == contractDeployTime ? 0 : lastGuardianAddTime;\\n    }\\n\\n    function getAddGuardianDelay() external view returns (uint256) {\\n        return addGuardianDelay;\\n    }\\n\\n    function getLastGuardianChangeTime() external view returns (uint256) {\\n        return\\n            lastGuardianChangeTime == contractDeployTime\\n                ? 0\\n                : lastGuardianChangeTime;\\n    }\\n\\n    function getChangeGuardianDelay() external view returns (uint256) {\\n        return changeGuardianDelay;\\n    }\\n\\n    function getLastGuardianRemovalTime() external view returns (uint256) {\\n        return\\n            lastGuardianRemovalTime == contractDeployTime\\n                ? 0\\n                : lastGuardianRemovalTime;\\n    }\\n\\n    function getRemoveGuardianDelay() external view returns (uint256) {\\n        return removeGuardianDelay;\\n    }\\n\\n    function getGuardians() external view returns (address[] memory) {\\n        return guardians;\\n    }\\n\\n    // * FUNCTIONS - VIEW & PURE - INTERNAL\\n\\n    function doesGuardianExist(address caller) internal view returns (bool) {\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (caller == guardiansCopy[i]) {\\n                return true;\\n            }\\n        }\\n\\n        return false;\\n    }\\n}\\n\",\"keccak256\":\"0x4ed8ef27c191bb2486924fff90a677c3d1de8fa92a7c8f244e4607a35e179169\",\"license\":\"MIT\"},\"contracts/OwnershipManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport \\\"./GuardiansManager.sol\\\";\\nimport \\\"./Errors.sol\\\";\\n\\npragma solidity ^0.8.17;\\n\\ncontract OwnershipManager is GuardiansManager {\\n    // * STATE VARIABLES\\n    uint256 private lastOwnerUpdateRequestTime;\\n    uint256 private ownerUpdateConfirmationTime;\\n    uint256 private noOfConfirmations;\\n\\n    bool private isOwnerUpdateRequested;\\n\\n    address private tempAddress;\\n\\n    mapping(address => bool) private isOwnershipConfimedByGuardian;\\n\\n    // * FUNCTIONS\\n    constructor() {\\n        ownerUpdateConfirmationTime = 2 hours;\\n    }\\n\\n    function requestToUpdateOwner(address newOwnerAddress) external {\\n        if (newOwnerAddress == owner()) {\\n            revert Error__AddressAlreadyAnOwner(\\n                \\\"OwnershipManager\\\",\\n                newOwnerAddress\\n            );\\n        }\\n\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        lastOwnerUpdateRequestTime = block.timestamp;\\n        tempAddress = newOwnerAddress;\\n        isOwnershipConfimedByGuardian[msg.sender] = true;\\n        noOfConfirmations++;\\n        isOwnerUpdateRequested = true;\\n    }\\n\\n    function confirmUpdateOwnerRequest() external {\\n        if (guardians.length <= 0) {\\n            revert Error__GuardiansListIsEmpty(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!isOwnerUpdateRequested) {\\n            revert Error__UpdateNotRequested(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (isOwnershipConfimedByGuardian[msg.sender]) {\\n            revert Error__AlreadyConfirmedByGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        if (\\n            block.timestamp >\\n            lastOwnerUpdateRequestTime + ownerUpdateConfirmationTime\\n        ) {\\n            resetOwnershipVariables();\\n            revert Error__RequestTimeExpired(\\\"OwnershipManager\\\");\\n        }\\n\\n        if (!doesGuardianExist(msg.sender)) {\\n            revert Error__AddressNotFoundAsGuardian(\\n                \\\"OwnershipManager\\\",\\n                msg.sender\\n            );\\n        }\\n\\n        isOwnershipConfimedByGuardian[msg.sender] = true;\\n        noOfConfirmations++;\\n\\n        if (noOfConfirmations >= requiredConfirmations) {\\n            // * Ownable internal function without access restriction.\\n            _transferOwnership(tempAddress);\\n            resetOwnershipVariables();\\n        }\\n    }\\n\\n    // * FUNCTION - PUBLIC\\n    function resetOwnershipVariables() public {\\n        isOwnerUpdateRequested = false;\\n        noOfConfirmations = 0;\\n\\n        address[] memory guardiansCopy = guardians;\\n\\n        for (uint256 i = 0; i < guardiansCopy.length; i++) {\\n            if (isOwnershipConfimedByGuardian[guardiansCopy[i]]) {\\n                isOwnershipConfimedByGuardian[guardiansCopy[i]] = false;\\n            }\\n        }\\n    }\\n\\n    // * FUNCTION - VIEW & PURE\\n    function getIsOwnerUpdateRequested() external view returns (bool) {\\n        return isOwnerUpdateRequested;\\n    }\\n\\n    function getIsOwnershipConfimedByGuardian(\\n        address guardian\\n    ) external view returns (bool) {\\n        return isOwnershipConfimedByGuardian[guardian];\\n    }\\n\\n    function getLastOwnerUpdateRequestTime() external view returns (uint256) {\\n        return lastOwnerUpdateRequestTime;\\n    }\\n\\n    function getOwnerUpdateConfirmationTime() external view returns (uint256) {\\n        return ownerUpdateConfirmationTime;\\n    }\\n\\n    function getNoOfConfirmations() external view returns (uint256) {\\n        return noOfConfirmations;\\n    }\\n}\\n\",\"keccak256\":\"0x47d5f4de1bcf9c63e4d9ae66904e39e060048e2cd5aa6a8dbf61c8415967396e\",\"license\":\"MIT\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int256)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x60b0215121bf25612a6739fb2f1ec35f31ee82e4a8216c032c8243d904ab3aa9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620032313803806200323183398181016040528101906200003791906200023a565b80620000586200004c6200010460201b60201c565b6200010c60201b60201c565b600180819055504260088190555042600381905550620151806002819055504260058190555062015180600481905550426007819055506203f48060068190555080601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a7640000600b8190555062015180600e8190555050611c20601381905550506200026c565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200020282620001d5565b9050919050565b6200021481620001f5565b81146200022057600080fd5b50565b600081519050620002348162000209565b92915050565b600060208284031215620002535762000252620001d0565b5b6000620002638482850162000223565b91505092915050565b612fb5806200027c6000396000f3fe6080604052600436106102345760003560e01c80638636068c1161012e578063d0679d34116100ab578063e9316a211161006f578063e9316a21146107a3578063ecfba8f5146107ce578063ef649249146107f9578063f2fde38b14610824578063fb5497881461084d5761023b565b8063d0679d34146106d4578063d2377361146106fd578063d644d7f914610726578063d660c45d1461073d578063daf3ce6a146107665761023b565b8063a526d83b116100f2578063a526d83b146105ed578063a85ae37714610616578063af630ad314610641578063b9e1c7981461066c578063bbe4424a146106a95761023b565b80638636068c1461052a5780638da5cb5b146105415780638fc270b71461056c5780639204f4771461059757806398d5fdca146105c25761023b565b80632ad2ed90116101bc5780637388fe86116101805780637388fe861461045757806379f9c22f146104825780637d09f5dd146104ab57806382e717f7146104d657806383b40cc9146105015761023b565b80632ad2ed90146103965780632b28d0cc146103c1578063673d4ec8146103ec5780637140415614610417578063715018a6146104405761023b565b806312065fe01161020357806312065fe0146102d357806314cbc763146102fe57806315c1bc3e1461032957806324cb76041461035457806326c886df1461037f5761023b565b80630665f04b1461023d57806306c4df83146102685780630ea52f0f1461029357806310a0cf17146102aa5761023b565b3661023b57005b005b34801561024957600080fd5b50610252610864565b60405161025f91906126a4565b60405180910390f35b34801561027457600080fd5b5061027d6108f2565b60405161028a91906126df565b60405180910390f35b34801561029f57600080fd5b506102a86108fc565b005b3480156102b657600080fd5b506102d160048036038101906102cc919061272b565b610aac565b005b3480156102df57600080fd5b506102e8610c8b565b6040516102f591906126df565b60405180910390f35b34801561030a57600080fd5b50610313610c93565b60405161032091906126df565b60405180910390f35b34801561033557600080fd5b5061033e610c9d565b60405161034b91906126df565b60405180910390f35b34801561036057600080fd5b50610369610ca7565b60405161037691906126df565b60405180910390f35b34801561038b57600080fd5b50610394610cb1565b005b3480156103a257600080fd5b506103ab610ecd565b6040516103b891906126df565b60405180910390f35b3480156103cd57600080fd5b506103d6610eea565b6040516103e391906126df565b60405180910390f35b3480156103f857600080fd5b50610401610ef4565b60405161040e9190612773565b60405180910390f35b34801561042357600080fd5b5061043e6004803603810190610439919061272b565b610f0b565b005b34801561044c57600080fd5b50610455611206565b005b34801561046357600080fd5b5061046c61121a565b60405161047991906126df565b60405180910390f35b34801561048e57600080fd5b506104a960048036038101906104a4919061272b565b611237565b005b3480156104b757600080fd5b506104c0611283565b6040516104cd91906126df565b60405180910390f35b3480156104e257600080fd5b506104eb61128d565b6040516104f891906126df565b60405180910390f35b34801561050d57600080fd5b506105286004803603810190610523919061278e565b611293565b005b34801561053657600080fd5b5061053f6114b7565b005b34801561054d57600080fd5b50610556611732565b60405161056391906127dd565b60405180910390f35b34801561057857600080fd5b5061058161175b565b60405161058e9190612773565b60405180910390f35b3480156105a357600080fd5b506105ac611772565b6040516105b991906126df565b60405180910390f35b3480156105ce57600080fd5b506105d76117ac565b6040516105e491906126df565b60405180910390f35b3480156105f957600080fd5b50610614600480360381019061060f919061272b565b61185d565b005b34801561062257600080fd5b5061062b61193c565b60405161063891906126df565b60405180910390f35b34801561064d57600080fd5b50610656611946565b60405161066391906126df565b60405180910390f35b34801561067857600080fd5b50610693600480360381019061068e919061272b565b611950565b6040516106a09190612773565b60405180910390f35b3480156106b557600080fd5b506106be6119a6565b6040516106cb91906126df565b60405180910390f35b3480156106e057600080fd5b506106fb60048036038101906106f69190612824565b6119b0565b005b34801561070957600080fd5b50610724600480360381019061071f9190612864565b611b05565b005b34801561073257600080fd5b5061073b611b7e565b005b34801561074957600080fd5b50610764600480360381019061075f919061272b565b611d2e565b005b34801561077257600080fd5b5061078d6004803603810190610788919061272b565b611e88565b60405161079a9190612773565b60405180910390f35b3480156107af57600080fd5b506107b8611ede565b6040516107c591906126df565b60405180910390f35b3480156107da57600080fd5b506107e3611efb565b6040516107f091906126df565b60405180910390f35b34801561080557600080fd5b5061080e611f05565b60405161081b91906126df565b60405180910390f35b34801561083057600080fd5b5061084b6004803603810190610846919061272b565b611f3d565b005b34801561085957600080fd5b50610862611fc0565b005b6060600a8054806020026020016040519081016040528092919081815260200182805480156108e857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161089e575b5050505050905090565b6000601254905090565b610904612236565b6000600f60006101000a81548160ff0219169083151502179055506000600a8054806020026020016040519081016040528092919081815260200182805480156109a357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610959575b5050505050905060005b8151811015610aa857601060008383815181106109cd576109cc612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610a9557600060106000848481518110610a3b57610a3a612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8080610aa0906128ef565b9150506109ad565b5050565b610ab4611732565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b2357806040517fa4f2199f000000000000000000000000000000000000000000000000000000008152600401610b1a9190612994565b60405180910390fd5b6000600a8054905011610b6b576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610b62906129c2565b60405180910390fd5b610b74336122b4565b610bb557336040517f8e8bbab9000000000000000000000000000000000000000000000000000000008152600401610bac9190612994565b60405180910390fd5b4260128190555080601560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060146000815480929190610c68906128ef565b91905055506001601560006101000a81548160ff02191690831515021790555050565b600047905090565b6000600654905090565b6000600b54905090565b6000600954905090565b6000600a8054905011610cf9576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610cf090612a2e565b60405180910390fd5b600f60009054906101000a900460ff16610d48576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401610d3f90612a2e565b60405180910390fd5b600e54600d54610d589190612a4e565b421115610d9a576040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401610d9190612a2e565b60405180910390fd5b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610e2957336040517f40b28742000000000000000000000000000000000000000000000000000000008152600401610e209190612a82565b60405180910390fd5b610e32336122b4565b610e7357336040517f8e8bbab9000000000000000000000000000000000000000000000000000000008152600401610e6a9190612a82565b60405180910390fd5b6001601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b600060085460075414610ee257600754610ee5565b60005b905090565b6000601354905090565b6000601560009054906101000a900460ff16905090565b610f13612236565b610f1b6123c3565b600654600754610f2b9190612a4e565b421015610f6d576040517f2ab71fd6000000000000000000000000000000000000000000000000000000008152600401610f6490612afc565b60405180910390fd5b6000600a8054905011610fb5576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610fac90612afc565b60405180910390fd5b610fbe816122b4565b610ffd576040517f47637222000000000000000000000000000000000000000000000000000000008152600401610ff490612afc565b60405180910390fd5b6000600a80548060200260200160405190810160405280929190818152602001828054801561108157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611037575b505050505090506000600182516110989190612b1c565b67ffffffffffffffff8111156110b1576110b0612b50565b5b6040519080825280602002602001820160405280156110df5781602001602082028036833780820191505090505b50905060008060005b84518110156111d1578573ffffffffffffffffffffffffffffffffffffffff1685828151811061111b5761111a612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff160361114757600191506111be565b84818151811061115a57611159612891565b5b602002602001015184848151811061117557611174612891565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082806111ba906128ef565b9350505b80806111c9906128ef565b9150506110e8565b5080156111f75782600a90805190602001906111ee92919061250d565b50426007819055505b50505050611203612412565b50565b61120e612236565b611218600061241b565b565b60006008546003541461122f57600354611232565b60005b905090565b61123f612236565b80601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600d54905090565b60095481565b61129b612236565b6112a36123c3565b6004546005546112b39190612a4e565b4210156112f5576040517f0e7f7d150000000000000000000000000000000000000000000000000000000081526004016112ec90612afc565b60405180910390fd5b6000600a80548060200260200160405190810160405280929190818152602001828054801561137957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161132f575b505050505090506000805b8251811015611444578473ffffffffffffffffffffffffffffffffffffffff168382815181106113b7576113b6612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036114315760019150838382815181106113f2576113f1612891565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050611444565b808061143c906128ef565b915050611384565b50801561146e5781600a908051906020019061146192919061250d565b50426005819055506114a9565b6040517f476372220000000000000000000000000000000000000000000000000000000081526004016114a090612afc565b60405180910390fd5b50506114b3612412565b5050565b6000600a80549050116114ff576040517fe9e10a640000000000000000000000000000000000000000000000000000000081526004016114f6906129c2565b60405180910390fd5b601560009054906101000a900460ff1661154e576040517f7bd1f7a2000000000000000000000000000000000000000000000000000000008152600401611545906129c2565b60405180910390fd5b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156115dd57336040517f40b287420000000000000000000000000000000000000000000000000000000081526004016115d49190612994565b60405180910390fd5b6013546012546115ed9190612a4e565b421115611637576115fc611b7e565b6040517f5130ce4e00000000000000000000000000000000000000000000000000000000815260040161162e906129c2565b60405180910390fd5b611640336122b4565b61168157336040517f8e8bbab90000000000000000000000000000000000000000000000000000000081526004016116789190612994565b60405180910390fd5b6001601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550601460008154809291906116ec906128ef565b91905055506009546014541061173057611727601560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661241b565b61172f611b7e565b5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600f60009054906101000a900460ff16905090565b60008061177d6117ac565b90506000670de0b6b3a7640000600b54836117989190612b7f565b6117a29190612bf0565b9050809250505090565b600080601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561181c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118409190612cae565b5050509150506402540be400816118579190612d29565b91505090565b611865612236565b61186d6123c3565b60025460035461187d9190612a4e565b4210156118bf576040517fdd49edf80000000000000000000000000000000000000000000000000000000081526004016118b690612afc565b60405180910390fd5b600a819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003819055506119316124df565b611939612412565b50565b6000600254905090565b6000600e54905090565b6000601660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000601454905090565b6119b8612236565b6119c06123c3565b60008111611a0557806040517fc816f5c80000000000000000000000000000000000000000000000000000000081526004016119fc9190612da1565b60405180910390fd5b600b54811115611a4c57806040517fd8dde22d000000000000000000000000000000000000000000000000000000008152600401611a439190612da1565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051611a7290612e00565b60006040518083038185875af1925050503d8060008114611aaf576040519150601f19603f3d011682016040523d82523d6000602084013e611ab4565b606091505b5050905080611af8576040517f5b0ecddc000000000000000000000000000000000000000000000000000000008152600401611aef90612a2e565b60405180910390fd5b50611b01612412565b5050565b611b0d612236565b60008111611b5257806040517f60fe2e4f000000000000000000000000000000000000000000000000000000008152600401611b499190612da1565b60405180910390fd5b42600d8190555080600c819055506001600f60006101000a81548160ff02191690831515021790555050565b6000601560006101000a81548160ff02191690831515021790555060006014819055506000600a805480602002602001604051908101604052809291908181526020018280548015611c2557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611bdb575b5050505050905060005b8151811015611d2a5760166000838381518110611c4f57611c4e612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611d1757600060166000848481518110611cbd57611cbc612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8080611d22906128ef565b915050611c2f565b5050565b611d36612236565b611d3e6123c3565b600047905060008111611d8857806040517f25ba08f5000000000000000000000000000000000000000000000000000000008152600401611d7f9190612da1565b60405180910390fd5b600b54811115611dcf57806040517fd8dde22d000000000000000000000000000000000000000000000000000000008152600401611dc69190612da1565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051611df590612e00565b60006040518083038185875af1925050503d8060008114611e32576040519150601f19603f3d011682016040523d82523d6000602084013e611e37565b606091505b5050905080611e7b576040517f5b0ecddc000000000000000000000000000000000000000000000000000000008152600401611e7290612a2e565b60405180910390fd5b5050611e85612412565b50565b6000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600060085460055414611ef357600554611ef6565b60005b905090565b6000600454905090565b600080611f106117ac565b90506000670de0b6b3a76400004783611f299190612b7f565b611f339190612bf0565b9050809250505090565b611f45612236565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611fb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fab90612e87565b60405180910390fd5b611fbd8161241b565b50565b611fc8612236565b6000600a8054905011612010576040517fe9e10a6400000000000000000000000000000000000000000000000000000000815260040161200790612a2e565b60405180910390fd5b600f60009054906101000a900460ff1661205f576040517fe4363ca300000000000000000000000000000000000000000000000000000000815260040161205690612a2e565b60405180910390fd5b600e54600d5461206f9190612a4e565b4211156120b1576040517f5130ce4e0000000000000000000000000000000000000000000000000000000081526004016120a890612a2e565b60405180910390fd5b6000600a80548060200260200160405190810160405280929190818152602001828054801561213557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116120eb575b505050505090506000805b82518110156121d757601060008483815181106121605761215f612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156121c45781806121c0906128ef565b9250505b80806121cf906128ef565b915050612140565b50600954811015612221576009546040517f9dd75b3a0000000000000000000000000000000000000000000000000000000081526004016122189190612da1565b60405180910390fd5b600c54600b819055506122326108fc565b5050565b61223e612505565b73ffffffffffffffffffffffffffffffffffffffff1661225c611732565b73ffffffffffffffffffffffffffffffffffffffff16146122b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122a990612ef3565b60405180910390fd5b565b600080600a80548060200260200160405190810160405280929190818152602001828054801561233957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116122ef575b5050505050905060005b81518110156123b75781818151811061235f5761235e612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036123a4576001925050506123be565b80806123af906128ef565b915050612343565b5060009150505b919050565b600260015403612408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123ff90612f5f565b60405180910390fd5b6002600181905550565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60016002600a805490506124f39190612bf0565b6124fd9190612a4e565b600981905550565b600033905090565b828054828255906000526020600020908101928215612586579160200282015b828111156125855782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061252d565b5b5090506125939190612597565b5090565b5b808211156125b0576000816000905550600101612598565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061260b826125e0565b9050919050565b61261b81612600565b82525050565b600061262d8383612612565b60208301905092915050565b6000602082019050919050565b6000612651826125b4565b61265b81856125bf565b9350612666836125d0565b8060005b8381101561269757815161267e8882612621565b975061268983612639565b92505060018101905061266a565b5085935050505092915050565b600060208201905081810360008301526126be8184612646565b905092915050565b6000819050919050565b6126d9816126c6565b82525050565b60006020820190506126f460008301846126d0565b92915050565b600080fd5b61270881612600565b811461271357600080fd5b50565b600081359050612725816126ff565b92915050565b600060208284031215612741576127406126fa565b5b600061274f84828501612716565b91505092915050565b60008115159050919050565b61276d81612758565b82525050565b60006020820190506127886000830184612764565b92915050565b600080604083850312156127a5576127a46126fa565b5b60006127b385828601612716565b92505060206127c485828601612716565b9150509250929050565b6127d781612600565b82525050565b60006020820190506127f260008301846127ce565b92915050565b612801816126c6565b811461280c57600080fd5b50565b60008135905061281e816127f8565b92915050565b6000806040838503121561283b5761283a6126fa565b5b600061284985828601612716565b925050602061285a8582860161280f565b9150509250929050565b60006020828403121561287a576128796126fa565b5b60006128888482850161280f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006128fa826126c6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361292c5761292b6128c0565b5b600182019050919050565b600082825260208201905092915050565b7f4f776e6572736869704d616e6167657200000000000000000000000000000000600082015250565b600061297e601083612937565b915061298982612948565b602082019050919050565b600060408201905081810360008301526129ad81612971565b90506129bc60208301846127ce565b92915050565b600060208201905081810360008301526129db81612971565b9050919050565b7f46756e64734d616e616765720000000000000000000000000000000000000000600082015250565b6000612a18600c83612937565b9150612a23826129e2565b602082019050919050565b60006020820190508181036000830152612a4781612a0b565b9050919050565b6000612a59826126c6565b9150612a64836126c6565b9250828201905080821115612a7c57612a7b6128c0565b5b92915050565b60006040820190508181036000830152612a9b81612a0b565b9050612aaa60208301846127ce565b92915050565b7f477561726469616e734d616e6167657200000000000000000000000000000000600082015250565b6000612ae6601083612937565b9150612af182612ab0565b602082019050919050565b60006020820190508181036000830152612b1581612ad9565b9050919050565b6000612b27826126c6565b9150612b32836126c6565b9250828203905081811115612b4a57612b496128c0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000612b8a826126c6565b9150612b95836126c6565b9250828202612ba3816126c6565b91508282048414831517612bba57612bb96128c0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612bfb826126c6565b9150612c06836126c6565b925082612c1657612c15612bc1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b612c4081612c21565b8114612c4b57600080fd5b50565b600081519050612c5d81612c37565b92915050565b6000819050919050565b612c7681612c63565b8114612c8157600080fd5b50565b600081519050612c9381612c6d565b92915050565b600081519050612ca8816127f8565b92915050565b600080600080600060a08688031215612cca57612cc96126fa565b5b6000612cd888828901612c4e565b9550506020612ce988828901612c84565b9450506040612cfa88828901612c99565b9350506060612d0b88828901612c99565b9250506080612d1c88828901612c4e565b9150509295509295909350565b6000612d3482612c63565b9150612d3f83612c63565b9250828202612d4d81612c63565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615612d8557612d846128c0565b5b8282058414831517612d9a57612d996128c0565b5b5092915050565b60006040820190508181036000830152612dba81612a0b565b9050612dc960208301846126d0565b92915050565b600081905092915050565b50565b6000612dea600083612dcf565b9150612df582612dda565b600082019050919050565b6000612e0b82612ddd565b9150819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612e71602683612937565b9150612e7c82612e15565b604082019050919050565b60006020820190508181036000830152612ea081612e64565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612edd602083612937565b9150612ee882612ea7565b602082019050919050565b60006020820190508181036000830152612f0c81612ed0565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612f49601f83612937565b9150612f5482612f13565b602082019050919050565b60006020820190508181036000830152612f7881612f3c565b905091905056fea26469706673582212202c9c5a5db6ce6f0214c51a261b8fde079b90b1809ce2677d2a2ccfda9c26460a64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106102345760003560e01c80638636068c1161012e578063d0679d34116100ab578063e9316a211161006f578063e9316a21146107a3578063ecfba8f5146107ce578063ef649249146107f9578063f2fde38b14610824578063fb5497881461084d5761023b565b8063d0679d34146106d4578063d2377361146106fd578063d644d7f914610726578063d660c45d1461073d578063daf3ce6a146107665761023b565b8063a526d83b116100f2578063a526d83b146105ed578063a85ae37714610616578063af630ad314610641578063b9e1c7981461066c578063bbe4424a146106a95761023b565b80638636068c1461052a5780638da5cb5b146105415780638fc270b71461056c5780639204f4771461059757806398d5fdca146105c25761023b565b80632ad2ed90116101bc5780637388fe86116101805780637388fe861461045757806379f9c22f146104825780637d09f5dd146104ab57806382e717f7146104d657806383b40cc9146105015761023b565b80632ad2ed90146103965780632b28d0cc146103c1578063673d4ec8146103ec5780637140415614610417578063715018a6146104405761023b565b806312065fe01161020357806312065fe0146102d357806314cbc763146102fe57806315c1bc3e1461032957806324cb76041461035457806326c886df1461037f5761023b565b80630665f04b1461023d57806306c4df83146102685780630ea52f0f1461029357806310a0cf17146102aa5761023b565b3661023b57005b005b34801561024957600080fd5b50610252610864565b60405161025f91906126a4565b60405180910390f35b34801561027457600080fd5b5061027d6108f2565b60405161028a91906126df565b60405180910390f35b34801561029f57600080fd5b506102a86108fc565b005b3480156102b657600080fd5b506102d160048036038101906102cc919061272b565b610aac565b005b3480156102df57600080fd5b506102e8610c8b565b6040516102f591906126df565b60405180910390f35b34801561030a57600080fd5b50610313610c93565b60405161032091906126df565b60405180910390f35b34801561033557600080fd5b5061033e610c9d565b60405161034b91906126df565b60405180910390f35b34801561036057600080fd5b50610369610ca7565b60405161037691906126df565b60405180910390f35b34801561038b57600080fd5b50610394610cb1565b005b3480156103a257600080fd5b506103ab610ecd565b6040516103b891906126df565b60405180910390f35b3480156103cd57600080fd5b506103d6610eea565b6040516103e391906126df565b60405180910390f35b3480156103f857600080fd5b50610401610ef4565b60405161040e9190612773565b60405180910390f35b34801561042357600080fd5b5061043e6004803603810190610439919061272b565b610f0b565b005b34801561044c57600080fd5b50610455611206565b005b34801561046357600080fd5b5061046c61121a565b60405161047991906126df565b60405180910390f35b34801561048e57600080fd5b506104a960048036038101906104a4919061272b565b611237565b005b3480156104b757600080fd5b506104c0611283565b6040516104cd91906126df565b60405180910390f35b3480156104e257600080fd5b506104eb61128d565b6040516104f891906126df565b60405180910390f35b34801561050d57600080fd5b506105286004803603810190610523919061278e565b611293565b005b34801561053657600080fd5b5061053f6114b7565b005b34801561054d57600080fd5b50610556611732565b60405161056391906127dd565b60405180910390f35b34801561057857600080fd5b5061058161175b565b60405161058e9190612773565b60405180910390f35b3480156105a357600080fd5b506105ac611772565b6040516105b991906126df565b60405180910390f35b3480156105ce57600080fd5b506105d76117ac565b6040516105e491906126df565b60405180910390f35b3480156105f957600080fd5b50610614600480360381019061060f919061272b565b61185d565b005b34801561062257600080fd5b5061062b61193c565b60405161063891906126df565b60405180910390f35b34801561064d57600080fd5b50610656611946565b60405161066391906126df565b60405180910390f35b34801561067857600080fd5b50610693600480360381019061068e919061272b565b611950565b6040516106a09190612773565b60405180910390f35b3480156106b557600080fd5b506106be6119a6565b6040516106cb91906126df565b60405180910390f35b3480156106e057600080fd5b506106fb60048036038101906106f69190612824565b6119b0565b005b34801561070957600080fd5b50610724600480360381019061071f9190612864565b611b05565b005b34801561073257600080fd5b5061073b611b7e565b005b34801561074957600080fd5b50610764600480360381019061075f919061272b565b611d2e565b005b34801561077257600080fd5b5061078d6004803603810190610788919061272b565b611e88565b60405161079a9190612773565b60405180910390f35b3480156107af57600080fd5b506107b8611ede565b6040516107c591906126df565b60405180910390f35b3480156107da57600080fd5b506107e3611efb565b6040516107f091906126df565b60405180910390f35b34801561080557600080fd5b5061080e611f05565b60405161081b91906126df565b60405180910390f35b34801561083057600080fd5b5061084b6004803603810190610846919061272b565b611f3d565b005b34801561085957600080fd5b50610862611fc0565b005b6060600a8054806020026020016040519081016040528092919081815260200182805480156108e857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161089e575b5050505050905090565b6000601254905090565b610904612236565b6000600f60006101000a81548160ff0219169083151502179055506000600a8054806020026020016040519081016040528092919081815260200182805480156109a357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610959575b5050505050905060005b8151811015610aa857601060008383815181106109cd576109cc612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610a9557600060106000848481518110610a3b57610a3a612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8080610aa0906128ef565b9150506109ad565b5050565b610ab4611732565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b2357806040517fa4f2199f000000000000000000000000000000000000000000000000000000008152600401610b1a9190612994565b60405180910390fd5b6000600a8054905011610b6b576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610b62906129c2565b60405180910390fd5b610b74336122b4565b610bb557336040517f8e8bbab9000000000000000000000000000000000000000000000000000000008152600401610bac9190612994565b60405180910390fd5b4260128190555080601560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060146000815480929190610c68906128ef565b91905055506001601560006101000a81548160ff02191690831515021790555050565b600047905090565b6000600654905090565b6000600b54905090565b6000600954905090565b6000600a8054905011610cf9576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610cf090612a2e565b60405180910390fd5b600f60009054906101000a900460ff16610d48576040517fe4363ca3000000000000000000000000000000000000000000000000000000008152600401610d3f90612a2e565b60405180910390fd5b600e54600d54610d589190612a4e565b421115610d9a576040517f5130ce4e000000000000000000000000000000000000000000000000000000008152600401610d9190612a2e565b60405180910390fd5b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610e2957336040517f40b28742000000000000000000000000000000000000000000000000000000008152600401610e209190612a82565b60405180910390fd5b610e32336122b4565b610e7357336040517f8e8bbab9000000000000000000000000000000000000000000000000000000008152600401610e6a9190612a82565b60405180910390fd5b6001601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b600060085460075414610ee257600754610ee5565b60005b905090565b6000601354905090565b6000601560009054906101000a900460ff16905090565b610f13612236565b610f1b6123c3565b600654600754610f2b9190612a4e565b421015610f6d576040517f2ab71fd6000000000000000000000000000000000000000000000000000000008152600401610f6490612afc565b60405180910390fd5b6000600a8054905011610fb5576040517fe9e10a64000000000000000000000000000000000000000000000000000000008152600401610fac90612afc565b60405180910390fd5b610fbe816122b4565b610ffd576040517f47637222000000000000000000000000000000000000000000000000000000008152600401610ff490612afc565b60405180910390fd5b6000600a80548060200260200160405190810160405280929190818152602001828054801561108157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611037575b505050505090506000600182516110989190612b1c565b67ffffffffffffffff8111156110b1576110b0612b50565b5b6040519080825280602002602001820160405280156110df5781602001602082028036833780820191505090505b50905060008060005b84518110156111d1578573ffffffffffffffffffffffffffffffffffffffff1685828151811061111b5761111a612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff160361114757600191506111be565b84818151811061115a57611159612891565b5b602002602001015184848151811061117557611174612891565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082806111ba906128ef565b9350505b80806111c9906128ef565b9150506110e8565b5080156111f75782600a90805190602001906111ee92919061250d565b50426007819055505b50505050611203612412565b50565b61120e612236565b611218600061241b565b565b60006008546003541461122f57600354611232565b60005b905090565b61123f612236565b80601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600d54905090565b60095481565b61129b612236565b6112a36123c3565b6004546005546112b39190612a4e565b4210156112f5576040517f0e7f7d150000000000000000000000000000000000000000000000000000000081526004016112ec90612afc565b60405180910390fd5b6000600a80548060200260200160405190810160405280929190818152602001828054801561137957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161132f575b505050505090506000805b8251811015611444578473ffffffffffffffffffffffffffffffffffffffff168382815181106113b7576113b6612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036114315760019150838382815181106113f2576113f1612891565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050611444565b808061143c906128ef565b915050611384565b50801561146e5781600a908051906020019061146192919061250d565b50426005819055506114a9565b6040517f476372220000000000000000000000000000000000000000000000000000000081526004016114a090612afc565b60405180910390fd5b50506114b3612412565b5050565b6000600a80549050116114ff576040517fe9e10a640000000000000000000000000000000000000000000000000000000081526004016114f6906129c2565b60405180910390fd5b601560009054906101000a900460ff1661154e576040517f7bd1f7a2000000000000000000000000000000000000000000000000000000008152600401611545906129c2565b60405180910390fd5b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156115dd57336040517f40b287420000000000000000000000000000000000000000000000000000000081526004016115d49190612994565b60405180910390fd5b6013546012546115ed9190612a4e565b421115611637576115fc611b7e565b6040517f5130ce4e00000000000000000000000000000000000000000000000000000000815260040161162e906129c2565b60405180910390fd5b611640336122b4565b61168157336040517f8e8bbab90000000000000000000000000000000000000000000000000000000081526004016116789190612994565b60405180910390fd5b6001601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550601460008154809291906116ec906128ef565b91905055506009546014541061173057611727601560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661241b565b61172f611b7e565b5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600f60009054906101000a900460ff16905090565b60008061177d6117ac565b90506000670de0b6b3a7640000600b54836117989190612b7f565b6117a29190612bf0565b9050809250505090565b600080601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561181c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118409190612cae565b5050509150506402540be400816118579190612d29565b91505090565b611865612236565b61186d6123c3565b60025460035461187d9190612a4e565b4210156118bf576040517fdd49edf80000000000000000000000000000000000000000000000000000000081526004016118b690612afc565b60405180910390fd5b600a819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003819055506119316124df565b611939612412565b50565b6000600254905090565b6000600e54905090565b6000601660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000601454905090565b6119b8612236565b6119c06123c3565b60008111611a0557806040517fc816f5c80000000000000000000000000000000000000000000000000000000081526004016119fc9190612da1565b60405180910390fd5b600b54811115611a4c57806040517fd8dde22d000000000000000000000000000000000000000000000000000000008152600401611a439190612da1565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051611a7290612e00565b60006040518083038185875af1925050503d8060008114611aaf576040519150601f19603f3d011682016040523d82523d6000602084013e611ab4565b606091505b5050905080611af8576040517f5b0ecddc000000000000000000000000000000000000000000000000000000008152600401611aef90612a2e565b60405180910390fd5b50611b01612412565b5050565b611b0d612236565b60008111611b5257806040517f60fe2e4f000000000000000000000000000000000000000000000000000000008152600401611b499190612da1565b60405180910390fd5b42600d8190555080600c819055506001600f60006101000a81548160ff02191690831515021790555050565b6000601560006101000a81548160ff02191690831515021790555060006014819055506000600a805480602002602001604051908101604052809291908181526020018280548015611c2557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611bdb575b5050505050905060005b8151811015611d2a5760166000838381518110611c4f57611c4e612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611d1757600060166000848481518110611cbd57611cbc612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8080611d22906128ef565b915050611c2f565b5050565b611d36612236565b611d3e6123c3565b600047905060008111611d8857806040517f25ba08f5000000000000000000000000000000000000000000000000000000008152600401611d7f9190612da1565b60405180910390fd5b600b54811115611dcf57806040517fd8dde22d000000000000000000000000000000000000000000000000000000008152600401611dc69190612da1565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051611df590612e00565b60006040518083038185875af1925050503d8060008114611e32576040519150601f19603f3d011682016040523d82523d6000602084013e611e37565b606091505b5050905080611e7b576040517f5b0ecddc000000000000000000000000000000000000000000000000000000008152600401611e7290612a2e565b60405180910390fd5b5050611e85612412565b50565b6000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600060085460055414611ef357600554611ef6565b60005b905090565b6000600454905090565b600080611f106117ac565b90506000670de0b6b3a76400004783611f299190612b7f565b611f339190612bf0565b9050809250505090565b611f45612236565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611fb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fab90612e87565b60405180910390fd5b611fbd8161241b565b50565b611fc8612236565b6000600a8054905011612010576040517fe9e10a6400000000000000000000000000000000000000000000000000000000815260040161200790612a2e565b60405180910390fd5b600f60009054906101000a900460ff1661205f576040517fe4363ca300000000000000000000000000000000000000000000000000000000815260040161205690612a2e565b60405180910390fd5b600e54600d5461206f9190612a4e565b4211156120b1576040517f5130ce4e0000000000000000000000000000000000000000000000000000000081526004016120a890612a2e565b60405180910390fd5b6000600a80548060200260200160405190810160405280929190818152602001828054801561213557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116120eb575b505050505090506000805b82518110156121d757601060008483815181106121605761215f612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156121c45781806121c0906128ef565b9250505b80806121cf906128ef565b915050612140565b50600954811015612221576009546040517f9dd75b3a0000000000000000000000000000000000000000000000000000000081526004016122189190612da1565b60405180910390fd5b600c54600b819055506122326108fc565b5050565b61223e612505565b73ffffffffffffffffffffffffffffffffffffffff1661225c611732565b73ffffffffffffffffffffffffffffffffffffffff16146122b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122a990612ef3565b60405180910390fd5b565b600080600a80548060200260200160405190810160405280929190818152602001828054801561233957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116122ef575b5050505050905060005b81518110156123b75781818151811061235f5761235e612891565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036123a4576001925050506123be565b80806123af906128ef565b915050612343565b5060009150505b919050565b600260015403612408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123ff90612f5f565b60405180910390fd5b6002600181905550565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60016002600a805490506124f39190612bf0565b6124fd9190612a4e565b600981905550565b600033905090565b828054828255906000526020600020908101928215612586579160200282015b828111156125855782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061252d565b5b5090506125939190612597565b5090565b5b808211156125b0576000816000905550600101612598565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061260b826125e0565b9050919050565b61261b81612600565b82525050565b600061262d8383612612565b60208301905092915050565b6000602082019050919050565b6000612651826125b4565b61265b81856125bf565b9350612666836125d0565b8060005b8381101561269757815161267e8882612621565b975061268983612639565b92505060018101905061266a565b5085935050505092915050565b600060208201905081810360008301526126be8184612646565b905092915050565b6000819050919050565b6126d9816126c6565b82525050565b60006020820190506126f460008301846126d0565b92915050565b600080fd5b61270881612600565b811461271357600080fd5b50565b600081359050612725816126ff565b92915050565b600060208284031215612741576127406126fa565b5b600061274f84828501612716565b91505092915050565b60008115159050919050565b61276d81612758565b82525050565b60006020820190506127886000830184612764565b92915050565b600080604083850312156127a5576127a46126fa565b5b60006127b385828601612716565b92505060206127c485828601612716565b9150509250929050565b6127d781612600565b82525050565b60006020820190506127f260008301846127ce565b92915050565b612801816126c6565b811461280c57600080fd5b50565b60008135905061281e816127f8565b92915050565b6000806040838503121561283b5761283a6126fa565b5b600061284985828601612716565b925050602061285a8582860161280f565b9150509250929050565b60006020828403121561287a576128796126fa565b5b60006128888482850161280f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006128fa826126c6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361292c5761292b6128c0565b5b600182019050919050565b600082825260208201905092915050565b7f4f776e6572736869704d616e6167657200000000000000000000000000000000600082015250565b600061297e601083612937565b915061298982612948565b602082019050919050565b600060408201905081810360008301526129ad81612971565b90506129bc60208301846127ce565b92915050565b600060208201905081810360008301526129db81612971565b9050919050565b7f46756e64734d616e616765720000000000000000000000000000000000000000600082015250565b6000612a18600c83612937565b9150612a23826129e2565b602082019050919050565b60006020820190508181036000830152612a4781612a0b565b9050919050565b6000612a59826126c6565b9150612a64836126c6565b9250828201905080821115612a7c57612a7b6128c0565b5b92915050565b60006040820190508181036000830152612a9b81612a0b565b9050612aaa60208301846127ce565b92915050565b7f477561726469616e734d616e6167657200000000000000000000000000000000600082015250565b6000612ae6601083612937565b9150612af182612ab0565b602082019050919050565b60006020820190508181036000830152612b1581612ad9565b9050919050565b6000612b27826126c6565b9150612b32836126c6565b9250828203905081811115612b4a57612b496128c0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000612b8a826126c6565b9150612b95836126c6565b9250828202612ba3816126c6565b91508282048414831517612bba57612bb96128c0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612bfb826126c6565b9150612c06836126c6565b925082612c1657612c15612bc1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b612c4081612c21565b8114612c4b57600080fd5b50565b600081519050612c5d81612c37565b92915050565b6000819050919050565b612c7681612c63565b8114612c8157600080fd5b50565b600081519050612c9381612c6d565b92915050565b600081519050612ca8816127f8565b92915050565b600080600080600060a08688031215612cca57612cc96126fa565b5b6000612cd888828901612c4e565b9550506020612ce988828901612c84565b9450506040612cfa88828901612c99565b9350506060612d0b88828901612c99565b9250506080612d1c88828901612c4e565b9150509295509295909350565b6000612d3482612c63565b9150612d3f83612c63565b9250828202612d4d81612c63565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615612d8557612d846128c0565b5b8282058414831517612d9a57612d996128c0565b5b5092915050565b60006040820190508181036000830152612dba81612a0b565b9050612dc960208301846126d0565b92915050565b600081905092915050565b50565b6000612dea600083612dcf565b9150612df582612dda565b600082019050919050565b6000612e0b82612ddd565b9150819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612e71602683612937565b9150612e7c82612e15565b604082019050919050565b60006020820190508181036000830152612ea081612e64565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612edd602083612937565b9150612ee882612ea7565b602082019050919050565b60006020820190508181036000830152612f0c81612ed0565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612f49601f83612937565b9150612f5482612f13565b602082019050919050565b60006020820190508181036000830152612f7881612f3c565b905091905056fea26469706673582212202c9c5a5db6ce6f0214c51a261b8fde079b90b1809ce2677d2a2ccfda9c26460a64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 169,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 888,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "addGuardianDelay",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 890,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianAddTime",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 892,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "changeGuardianDelay",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 894,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianChangeTime",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 896,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "removeGuardianDelay",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 898,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastGuardianRemovalTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 900,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "contractDeployTime",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 902,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "requiredConfirmations",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 905,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "guardians",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 336,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "dailyTransferLimit",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 338,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "tempDailyTransferLimit",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 340,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastDailyTransferUpdateRequestTime",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 342,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "dailyTransferLimitUpdateConfirmationTime",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 344,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isDailyTransferLimitUpdateRequested",
        "offset": 0,
        "slot": "15",
        "type": "t_bool"
      },
      {
        "astId": 348,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isConfirmedByGuardian",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 351,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "priceFeed",
        "offset": 0,
        "slot": "17",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 1314,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "lastOwnerUpdateRequestTime",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 1316,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "ownerUpdateConfirmationTime",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 1318,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "noOfConfirmations",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 1320,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isOwnerUpdateRequested",
        "offset": 0,
        "slot": "21",
        "type": "t_bool"
      },
      {
        "astId": 1322,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "tempAddress",
        "offset": 1,
        "slot": "21",
        "type": "t_address"
      },
      {
        "astId": 1326,
        "contract": "contracts/Guardian.sol:Guardian",
        "label": "isOwnershipConfimedByGuardian",
        "offset": 0,
        "slot": "22",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}